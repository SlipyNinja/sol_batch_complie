{"contracts": {"01_05_clgen.sol": {"clgen": {"abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "implementation", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"kind": "dev", "methods": {"implementation()": {"details": "Returns the current implementation address."}}, "version": 1}, "evm": {"assembly": "    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  0x80\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_4, callvalue)\n  tag_6\n  dup2\n  tag_1\n  jump\t// in\ntag_6:\n  0x10\n  dup2\n  mstore\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  tag_7\n  0x00\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  dup1\n  0x20\n  swap4\n  shl(0x80, 0x436c6f6e737465722047656e65736973)\n  dup6\n  dup3\n  add\n  mstore\n  dup6\n  mload\n  swap1\n  tag_8\n  dup3\n  tag_1\n  jump\t// in\ntag_8:\n  0x05\n  dup3\n  mstore\n  shl(0xd9, 0x31b633b2b7)\n  dup7\n  dup4\n  add\n  mstore\n    /* \"02_05_ERC721Creator.sol\":447:489   */\n  0x2d3fc875de7fe7da43ad0afa0e7023c9b91d06b1\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  swap2\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n  dup4\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  dup8\n  mload\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  swap6\n  dup7\n  swap2\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  tag_9\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  dup10\n  dup5\n  add\n  swap5\n  shl(0xe1, 0x266c45bb)\n  dup7\n  mstore\n  dup12\n  0x24\n  dup7\n  add\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  mstore\n  0x64\n  dup6\n  add\n  swap1\n  tag_3\n  jump\t// in\ntag_9:\n  dup4\n  dup2\n  sub\n  not(0x23)\n  add\n  0x44\n  dup6\n  add\n  mstore\n  swap1\n  tag_3\n  jump\t// in\ntag_7:\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  sub\n  swap5\n  tag_10\n  not(0x1f)\n  swap7\n  dup8\n  dup2\n  add\n  dup4\n  mstore\n  dup3\n  tag_2\n  jump\t// in\ntag_10:\n    /* \"02_05_ERC721Creator.sol\":518:641   */\n  mload\n  swap2\n  gas\n  delegatecall\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  swap1\n  jumpi(tag_11, iszero(returndatasize))\n  returndatasize\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  dup2\n  gt\n  tag_13\n  jumpi\n  tag_15\n  dup5\n  dup7\n  mload\n  swap4\n  0x1f\n  dup5\n  add\n  and\n  add\n  dup4\n  tag_2\n  jump\t// in\ntag_15:\n  dup2\n  mstore\n  0x00\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  dup4\n  returndatasize\n  swap3\n  add\n  returndatacopy\ntag_16:\n  iszero\n  tag_17\n  jumpi\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  pop\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\ntag_17:\n  0x64\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  swap2\n  mload\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  swap1\n  shl(0xe5, 0x461bcd)\n  dup3\n  mstore\n  0x04\n  dup3\n  add\n  mstore\n  0x15\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  0x24\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  dup3\n  add\n  mstore\n  0x496e697469616c697a6174696f6e206661696c65640000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  revert\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\ntag_13:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  0x24\n  0x00\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  revert\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\ntag_11:\n  pop\n  jump(tag_16)\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  0x40\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_13\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  0x1f\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_13\n  jumpi\n  0x40\n  mstore\n  jump\t// out\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\ntag_3:\n  swap2\n  swap1\n  dup3\n  mload\n  swap3\n  dup4\n  dup3\n  mstore\n  0x00\ntag_23:\n  dup5\n  dup2\n  lt\n  tag_24\n  jumpi\n  pop\n  pop\n  dup3\n  0x00\n  0x20\n  dup1\n  swap5\n  swap6\n  dup5\n  add\n  add\n  mstore\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  0x1f\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  dup1\n  not\n    /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n  swap2\n  add\n  and\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  add\n  add\n  swap1\n  jump\t// out\ntag_24:\n  0x20\n  dup2\n  dup4\n  add\n  dup2\n  add\n  mload\n  dup5\n  dup4\n  add\n  dup3\n  add\n  mstore\n  add\n  jump(tag_23)\nstop\n\nsub_0: assembly {\n        /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n    tag_3:\n      calldatasize\n        /* \"03_05_Proxy.sol\":2853:2916   */\n      tag_1\n        /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n      jumpi\n        /* \"03_05_Proxy.sol\":2853:2916   */\n      tag_1\n      jump\t// in\n        /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n    tag_2:\n      jumpi(tag_3, sub(0x5c60da1b, shr(0xe0, calldataload(0x00))))\n      jumpi(tag_10, callvalue)\n      jumpi(tag_10, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"02_05_ERC721Creator.sol\":981:1047   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n      and\n      0x80\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_10:\n      0x00\n      dup1\n      revert\n        /* \"03_05_Proxy.sol\":2322:2432   */\n    tag_1:\n        /* \"02_05_ERC721Creator.sol\":981:1047   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_05_clgen.sol\":1503:1602  contract clgen is ERC721Creator {... */\n      and\n        /* \"03_05_Proxy.sol\":1018:1837   */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_12\n      jumpi\n      return(0x00, returndatasize)\n    tag_12:\n      revert(0x00, returndatasize)\n\n    auxdata: 0xa26469706673582212200d4f21b5d59bb8244ab2c00d84d96bf466b5ac2351bdef7b39f6ee286a72ac5764736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {"abi_encode_string": {"entryPoint": 462, "id": null, "parameterSlots": 2, "returnSlots": 1}, "finalize_allocation": {"entryPoint": 427, "id": null, "parameterSlots": 2, "returnSlots": 0}, "finalize_allocation_1514": {"entryPoint": 400, "id": null, "parameterSlots": 1, "returnSlots": 0}}, "generatedSources": [], "linkReferences": {}, "object": "60806040908082523461018c5761001581610190565b601081526100d45f806020936f436c6f6e737465722047656e6573697360801b8582015285519061004582610190565b600582526431b633b2b760d91b86830152732d3fc875de7fe7da43ad0afa0e7023c9b91d06b1917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8360018060a01b031982541617905587519586916100c28984019463266c45bb60e11b86528b602486015260648501906101ce565b838103602319016044850152906101ce565b03946100e8601f19968781018352826101ab565b51915af4903d15610186573d6001600160401b0381116101725761011584865193601f84011601836101ab565b81525f833d92013e5b1561013057505160e8908161020d8239f35b606491519062461bcd60e51b82526004820152601560248201527f496e697469616c697a6174696f6e206661696c656400000000000000000000006044820152fd5b634e487b7160e01b5f52604160045260245ffd5b5061011e565b5f80fd5b604081019081106001600160401b0382111761017257604052565b601f909101601f19168101906001600160401b0382119082101761017257604052565b91908251928382525f5b8481106101f8575050825f602080949584010152601f8019910116010190565b6020818301810151848301820152016101d856fe608060405260043610156015575b36606a57606a565b5f3560e01c635c60da1b03600d57346066575f3660031901126066577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b5f80fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e1560ae573d5ff35b3d5ffdfea26469706673582212200d4f21b5d59bb8244ab2c00d84d96bf466b5ac2351bdef7b39f6ee286a72ac5764736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x18C JUMPI PUSH2 0x15 DUP2 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x10 DUP2 MSTORE PUSH2 0xD4 PUSH0 DUP1 PUSH1 0x20 SWAP4 PUSH16 0x436C6F6E737465722047656E65736973 PUSH1 0x80 SHL DUP6 DUP3 ADD MSTORE DUP6 MLOAD SWAP1 PUSH2 0x45 DUP3 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x31B633B2B7 PUSH1 0xD9 SHL DUP7 DUP4 ADD MSTORE PUSH20 0x2D3FC875DE7FE7DA43AD0AFA0E7023C9B91D06B1 SWAP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 MLOAD SWAP6 DUP7 SWAP2 PUSH2 0xC2 DUP10 DUP5 ADD SWAP5 PUSH4 0x266C45BB PUSH1 0xE1 SHL DUP7 MSTORE DUP12 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD SWAP1 PUSH2 0x1CE JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x23 NOT ADD PUSH1 0x44 DUP6 ADD MSTORE SWAP1 PUSH2 0x1CE JUMP JUMPDEST SUB SWAP5 PUSH2 0xE8 PUSH1 0x1F NOT SWAP7 DUP8 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1AB JUMP JUMPDEST MLOAD SWAP2 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x172 JUMPI PUSH2 0x115 DUP5 DUP7 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x1AB JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x130 JUMPI POP MLOAD PUSH1 0xE8 SWAP1 DUP2 PUSH2 0x20D DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x172 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x172 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1F8 JUMPI POP POP DUP3 PUSH0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1D8 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x15 JUMPI JUMPDEST CALLDATASIZE PUSH1 0x6A JUMPI PUSH1 0x6A JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B SUB PUSH1 0xD JUMPI CALLVALUE PUSH1 0x66 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0xAE JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x4F 0x21 0xB5 0xD5 SWAP12 0xB8 0x24 BLOBBASEFEE 0xB2 0xC0 0xD DUP5 0xD9 PUSH12 0xF466B5AC2351BDEF7B39F6EE 0x28 PUSH11 0x72AC5764736F6C63430008 XOR STOP CALLER ", "sourceMap": "1503:99:0:-:0;;;;;;;;;;;;:::i;:::-;;;;981:66:1;-1:-1:-1;1503:99:0;;;-1:-1:-1;;;1503:99:0;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1503:99:0;;;;447:42:1;981:66;;;;;;;;;;;;;;;1503:99:0;;574:66:1;;;981;574;;;;;;;;;;;;;981;;;;;;:::i;:::-;;;;-1:-1:-1;;981:66:1;;;;;;;:::i;:::-;574;;;;;;;;;;;;;:::i;:::-;518:123;;;;981:66;;;;;;-1:-1:-1;;;;;1503:99:0;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;981:66:1;;;;;;;;;1503:99:0;;;;;;;;;981:66:1;;1503:99:0;;981:66:1;;;;;;;;;;;574;981;;;;;;;;;1503:99:0;;;;-1:-1:-1;1503:99:0;;;;574:66:1;-1:-1:-1;1503:99:0;981:66:1;;;;1503:99:0;;;;;;;;;;;-1:-1:-1;;;;;1503:99:0;;;;;;;:::o;:::-;;;;;-1:-1:-1;;1503:99:0;;;;-1:-1:-1;;;;;1503:99:0;;;;;;;;;;:::o;981:66:1:-;;;;;;;;;-1:-1:-1;981:66:1;;;;;;;;;-1:-1:-1;981:66:1;;;;;;;;1503:99:0;574:66:1;;1503:99:0;;;981:66:1;;;:::o;:::-;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {"fun_fallback": {"entryPoint": 106, "id": 128, "parameterSlots": 0, "returnSlots": 0}}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608060405260043610156015575b36606a57606a565b5f3560e01c635c60da1b03600d57346066575f3660031901126066577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b5f80fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e1560ae573d5ff35b3d5ffdfea26469706673582212200d4f21b5d59bb8244ab2c00d84d96bf466b5ac2351bdef7b39f6ee286a72ac5764736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x15 JUMPI JUMPDEST CALLDATASIZE PUSH1 0x6A JUMPI PUSH1 0x6A JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B SUB PUSH1 0xD JUMPI CALLVALUE PUSH1 0x66 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0xAE JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x4F 0x21 0xB5 0xD5 SWAP12 0xB8 0x24 BLOBBASEFEE 0xB2 0xC0 0xD DUP5 0xD9 PUSH12 0xF466B5AC2351BDEF7B39F6EE 0x28 PUSH11 0x72AC5764736F6C63430008 XOR STOP CALLER ", "sourceMap": "1503:99:0:-:0;;;;;;;;;-1:-1:-1;1503:99:0;2853:63:2;1503:99:0;2853:63:2;:::i;1503:99:0:-;;;;;;;;;;;;;;-1:-1:-1;;1503:99:0;;;;981:66:1;;-1:-1:-1;;;;;1503:99:0;;;;;;;;;;;;2322:110:2;981:66:1;;-1:-1:-1;;;;;;;;;1503:99:0;1018:819:2;-1:-1:-1;;1018:819:2;;;;;;;-1:-1:-1;1018:819:2;;;;;;-1:-1:-1;1018:819:2;;;-1:-1:-1;1018:819:2"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_05_clgen.sol\":\"clgen\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"01_05_clgen.sol\":{\"keccak256\":\"0xdad4656f1937dbeaf33ed6ade0536c82550411feb9f5cad8c5df8d421fc9da5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://518f31c646d7549c54a4c7f09c3dcb528466f3c23897362d4fa0559d07776b7a\",\"dweb:/ipfs/QmZSjepsHTouR1Kaf5S1WqXk2e5KBrKxwJgzzbCBx7SfqN\"]},\"02_05_ERC721Creator.sol\":{\"keccak256\":\"0x23bcd4fc4d421842bde06df82025706f8f67dc2060c92ae8b10869e2b070f08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ca0c635342d50bebbd503e2285062aeea00d0883dfe8fd4289d1e638e2a56c\",\"dweb:/ipfs/QmNzn9cSanu8PirRc9wnVBBLbNZy4QPCGrRzsJW9xPFbte\"]},\"03_05_Proxy.sol\":{\"keccak256\":\"0x2d4590ddfd911967dfb43fd40a17302cc65c953392bb5bd80ca5b117bcd743e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://435e3bd5f00ba68605ff720d89358f32783a5b4f0b7ebde2d35f2033f2c2d194\",\"dweb:/ipfs/QmbJsL2ctwbiJAvUZyTVGpn8395B9K1sjiusp5DGZE7W19\"]},\"04_05_Address.sol\":{\"keccak256\":\"0x4fad4b52679f495fbde44858fd16ce5282941a7ddf075066f09036ddedd08062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce877dc61868a4e76a2794bc22e1e0f961a3f1b3dfca4c656c7d048eaab515b\",\"dweb:/ipfs/QmSqiRbicBDJMW8v4hVRix9nQiJJJuSBbKi1ri2MAHrTiX\"]},\"05_05_StorageSlot.sol\":{\"keccak256\":\"0xcf26f014bf7e1fc3d02aedc00eb218479bea1754f8a058741e1764c7678ad3dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fa44fb4e85d5588f2cf67d527320014b35c40e205239c86d8c5739ac547f0e\",\"dweb:/ipfs/QmbhvU2u8DKnGPHMm6jAgJEtggqQ3zCw9dEw3KBtGXgFgR\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "02_05_ERC721Creator.sol": {"ERC721Creator": {"abi": [{"inputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "implementation", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"kind": "dev", "methods": {"implementation()": {"details": "Returns the current implementation address."}}, "stateVariables": {"_IMPLEMENTATION_SLOT": {"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."}}, "version": 1}, "evm": {"assembly": "    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  0x80\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_14, callvalue)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  swap2\n  tag_8\n  dup3\n  dup6\n  tag_1\n  jump\t// in\ntag_8:\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  dup3\n  dup2\n  dup4\n  sub\n  slt\n  tag_14\n  jumpi\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  swap2\n  swap1\n  dup3\n  dup2\n  gt\n  tag_14\n  jumpi\n  dup4\n  tag_13\n  swap2\n  dup4\n  add\n  tag_4\n  jump\t// in\ntag_13:\n  swap1\n  0x20\n  dup2\n  add\n  mload\n  swap3\n  dup4\n  gt\n  tag_14\n  jumpi\n  0x00\n  swap4\n  dup5\n  swap4\n  tag_16\n  swap3\n  add\n  tag_4\n  jump\t// in\ntag_16:\n    /* \"02_05_ERC721Creator.sol\":447:489   */\n  swap1\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  tag_17\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  tag_18\n    /* \"02_05_ERC721Creator.sol\":447:489   */\n  0x2d3fc875de7fe7da43ad0afa0e7023c9b91d06b1\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  swap4\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n  dup6\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  0x01\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  dup1\n  0xa0\n  shl\n  sub\n  not\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  dup8\n  mload\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  swap3\n  dup4\n  swap2\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  tag_19\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  0x20\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  dup5\n  add\n  swap7\n  shl(0xe1, 0x266c45bb)\n  dup9\n  mstore\n  dup12\n  0x24\n  dup7\n  add\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  mstore\n  0x64\n  dup6\n  add\n  swap1\n  tag_5\n  jump\t// in\ntag_19:\n  dup4\n  dup2\n  sub\n  not(0x23)\n  add\n  0x44\n  dup6\n  add\n  mstore\n  swap1\n  tag_5\n  jump\t// in\ntag_17:\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  sub\n  not(0x1f)\n  dup2\n  add\n  dup4\n  mstore\n  dup3\n  tag_1\n  jump\t// in\ntag_18:\n    /* \"02_05_ERC721Creator.sol\":518:641   */\n  mload\n  swap2\n  gas\n  delegatecall\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  jumpi(tag_20, iszero(returndatasize))\n  returndatasize\n  tag_22\n  dup2\n  tag_2\n  jump\t// in\ntag_22:\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  swap1\n  tag_23\n  dup5\n  mload\n  swap3\n  dup4\n  tag_1\n  jump\t// in\ntag_23:\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  dup2\n  mstore\n  0x00\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  0x20\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  returndatasize\n  swap3\n  add\n  returndatacopy\ntag_24:\n  iszero\n  tag_25\n  jumpi\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\ntag_25:\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  mload\n  shl(0xe5, 0x461bcd)\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  dup2\n  mstore\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  0x20\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  0x04\n  dup3\n  add\n  mstore\n  0x15\n    /* \"02_05_ERC721Creator.sol\":574:640   */\n  0x24\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  dup3\n  add\n  mstore\n  0x496e697469616c697a6174696f6e206661696c65640000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\ntag_20:\n  jump(tag_24)\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\ntag_14:\n  0x00\n  dup1\n  revert\ntag_1:\n  0x1f\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_27\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_27:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_27\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\ntag_3:\n  0x00\ntag_31:\n  dup4\n  dup2\n  lt\n  tag_32\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  add\n  mstore\n  jump\t// out\ntag_32:\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_31)\ntag_4:\n  dup2\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_14\n  jumpi\n  dup1\n  mload\n  tag_36\n  dup2\n  tag_2\n  jump\t// in\ntag_36:\n  swap3\n  tag_37\n  mload(0x40)\n  swap5\n  dup6\n  tag_1\n  jump\t// in\ntag_37:\n  dup2\n  dup5\n  mstore\n  0x20\n  dup3\n  dup5\n  add\n  add\n  gt\n  tag_14\n  jumpi\n  tag_40\n  swap2\n  0x20\n  dup1\n  dup6\n  add\n  swap2\n  add\n  tag_3\n  jump\t// in\ntag_40:\n  swap1\n  jump\t// out\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\ntag_5:\n  swap1\n  0x20\n  swap2\n  tag_41\n  dup2\n  mload\n  dup1\n  swap3\n  dup2\n  dup6\n  mstore\n  dup6\n  dup1\n  dup7\n  add\n  swap2\n  add\n  tag_3\n  jump\t// in\ntag_41:\n    /* \"02_05_ERC721Creator.sol\":178:1383   */\n  0x1f\n  add\n  not(0x1f)\n  and\n    /* \"02_05_ERC721Creator.sol\":981:1047   */\n  add\n  add\n  swap1\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"02_05_ERC721Creator.sol\":178:1383   */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n    tag_3:\n      calldatasize\n        /* \"03_05_Proxy.sol\":2853:2916   */\n      tag_1\n        /* \"02_05_ERC721Creator.sol\":178:1383   */\n      jumpi\n        /* \"03_05_Proxy.sol\":2853:2916   */\n      tag_1\n      jump\t// in\n        /* \"02_05_ERC721Creator.sol\":178:1383   */\n    tag_2:\n      jumpi(tag_3, sub(0x5c60da1b, shr(0xe0, calldataload(0x00))))\n      jumpi(tag_10, callvalue)\n      jumpi(tag_10, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"02_05_ERC721Creator.sol\":981:1047   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"02_05_ERC721Creator.sol\":178:1383   */\n      and\n      0x80\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_10:\n      0x00\n      dup1\n      revert\n        /* \"03_05_Proxy.sol\":2322:2432   */\n    tag_1:\n        /* \"02_05_ERC721Creator.sol\":981:1047   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"02_05_ERC721Creator.sol\":178:1383   */\n      and\n        /* \"03_05_Proxy.sol\":1018:1837   */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_12\n      jumpi\n      return(0x00, returndatasize)\n    tag_12:\n      revert(0x00, returndatasize)\n\n    auxdata: 0xa26469706673582212206a7a0b89d2208a2350cff1cc390b6e969e077e6b543475bac27db1baa3efae2364736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {"abi_decode_string_fromMemory": {"entryPoint": 501, "id": null, "parameterSlots": 2, "returnSlots": 1}, "abi_encode_string": {"entryPoint": 570, "id": null, "parameterSlots": 2, "returnSlots": 1}, "array_allocation_size_string": {"entryPoint": 441, "id": null, "parameterSlots": 1, "returnSlots": 1}, "copy_memory_to_memory_with_cleanup": {"entryPoint": 468, "id": null, "parameterSlots": 3, "returnSlots": 0}, "finalize_allocation": {"entryPoint": 386, "id": null, "parameterSlots": 2, "returnSlots": 0}}, "generatedSources": [], "linkReferences": {}, "object": "60806040908082523461017e57610348803803809161001e8285610182565b8339810190828183031261017e5780516001600160401b03919082811161017e578361004b9183016101f5565b90602081015192831161017e575f93849361006692016101f5565b906100ec6100fa732d3fc875de7fe7da43ad0afa0e7023c9b91d06b1937f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8560018060a01b031982541617905587519283916100da602084019663266c45bb60e11b88528b6024860152606485019061023a565b8381036023190160448501529061023a565b03601f198101835282610182565b51915af43d15610179573d61010e816101b9565b9061011b84519283610182565b81525f60203d92013e5b15610136575160e890816102608239f35b5162461bcd60e51b815260206004820152601560248201527f496e697469616c697a6174696f6e206661696c656400000000000000000000006044820152606490fd5b610125565b5f80fd5b601f909101601f19168101906001600160401b038211908210176101a557604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116101a557601f01601f191660200190565b5f5b8381106101e55750505f910152565b81810151838201526020016101d6565b81601f8201121561017e57805161020b816101b9565b926102196040519485610182565b8184526020828401011161017e5761023791602080850191016101d4565b90565b90602091610253815180928185528580860191016101d4565b601f01601f191601019056fe608060405260043610156015575b36606a57606a565b5f3560e01c635c60da1b03600d57346066575f3660031901126066577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b5f80fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e1560ae573d5ff35b3d5ffdfea26469706673582212206a7a0b89d2208a2350cff1cc390b6e969e077e6b543475bac27db1baa3efae2364736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x17E JUMPI PUSH2 0x348 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1E DUP3 DUP6 PUSH2 0x182 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH2 0x17E JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 DUP3 DUP2 GT PUSH2 0x17E JUMPI DUP4 PUSH2 0x4B SWAP2 DUP4 ADD PUSH2 0x1F5 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 ADD MLOAD SWAP3 DUP4 GT PUSH2 0x17E JUMPI PUSH0 SWAP4 DUP5 SWAP4 PUSH2 0x66 SWAP3 ADD PUSH2 0x1F5 JUMP JUMPDEST SWAP1 PUSH2 0xEC PUSH2 0xFA PUSH20 0x2D3FC875DE7FE7DA43AD0AFA0E7023C9B91D06B1 SWAP4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0xDA PUSH1 0x20 DUP5 ADD SWAP7 PUSH4 0x266C45BB PUSH1 0xE1 SHL DUP9 MSTORE DUP12 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD SWAP1 PUSH2 0x23A JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x23 NOT ADD PUSH1 0x44 DUP6 ADD MSTORE SWAP1 PUSH2 0x23A JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x182 JUMP JUMPDEST MLOAD SWAP2 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x179 JUMPI RETURNDATASIZE PUSH2 0x10E DUP2 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 PUSH2 0x11B DUP5 MLOAD SWAP3 DUP4 PUSH2 0x182 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x136 JUMPI MLOAD PUSH1 0xE8 SWAP1 DUP2 PUSH2 0x260 DUP3 CODECOPY RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x1A5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A5 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E5 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D6 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x17E JUMPI DUP1 MLOAD PUSH2 0x20B DUP2 PUSH2 0x1B9 JUMP JUMPDEST SWAP3 PUSH2 0x219 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x182 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x17E JUMPI PUSH2 0x237 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1D4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x253 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x15 JUMPI JUMPDEST CALLDATASIZE PUSH1 0x6A JUMPI PUSH1 0x6A JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B SUB PUSH1 0xD JUMPI CALLVALUE PUSH1 0x66 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0xAE JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x7A0B89D2208A2350CFF1CC CODECOPY SIGNEXTEND PUSH15 0x969E077E6B543475BAC27DB1BAA3EF 0xAE 0x23 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "178:1205:1:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;178:1205:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;178:1205:1;;;;;;;:::i;:::-;447:42;981:66;574;447:42;981:66;;;178:1205;981:66;;;;;;;;;;;178:1205;;574:66;;;981;178:1205;574:66;;;;;;;;;;;;981;;;;;;:::i;:::-;;;;-1:-1:-1;;981:66:1;;;;;;;:::i;:::-;574;;;;;;;;;:::i;:::-;518:123;;;;981:66;;;;;;;;:::i;:::-;178:1205;;;;;;;:::i;:::-;981:66;;-1:-1:-1;178:1205:1;981:66;;;;;;;;178:1205;;;;;;;;981:66;178:1205;-1:-1:-1;;;981:66:1;;178:1205;981:66;;;;;574;981;;;;;;;;;;;;;;178:1205;-1:-1:-1;178:1205:1;;;;;;;-1:-1:-1;;178:1205:1;;;;-1:-1:-1;;;;;178:1205:1;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;178:1205:1;;;;;;-1:-1:-1;;178:1205:1;;;;:::o;:::-;;;;;;;;-1:-1:-1;;178:1205:1;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;981:66::-;;;;;;;;;;;;;;;;;;;:::i;:::-;178:1205;;-1:-1:-1;;178:1205:1;981:66;;;:::o"}, "deployedBytecode": {"functionDebugData": {"fun_fallback": {"entryPoint": 106, "id": 128, "parameterSlots": 0, "returnSlots": 0}}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608060405260043610156015575b36606a57606a565b5f3560e01c635c60da1b03600d57346066575f3660031901126066577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b5f80fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e1560ae573d5ff35b3d5ffdfea26469706673582212206a7a0b89d2208a2350cff1cc390b6e969e077e6b543475bac27db1baa3efae2364736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x15 JUMPI JUMPDEST CALLDATASIZE PUSH1 0x6A JUMPI PUSH1 0x6A JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B SUB PUSH1 0xD JUMPI CALLVALUE PUSH1 0x66 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0xAE JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x7A0B89D2208A2350CFF1CC CODECOPY SIGNEXTEND PUSH15 0x969E077E6B543475BAC27DB1BAA3EF 0xAE 0x23 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "178:1205:1:-:0;;;;;;;;;-1:-1:-1;178:1205:1;2853:63:2;178:1205:1;2853:63:2;:::i;178:1205:1:-;;;;;;;;;;;;;;-1:-1:-1;;178:1205:1;;;;981:66;;-1:-1:-1;;;;;178:1205:1;;;;;;;;;;;;2322:110:2;981:66:1;;-1:-1:-1;;;;;;;;;178:1205:1;1018:819:2;-1:-1:-1;;1018:819:2;;;;;;;-1:-1:-1;1018:819:2;;;;;;-1:-1:-1;1018:819:2;;;-1:-1:-1;1018:819:2"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"}},\"stateVariables\":{\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"02_05_ERC721Creator.sol\":\"ERC721Creator\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"02_05_ERC721Creator.sol\":{\"keccak256\":\"0x23bcd4fc4d421842bde06df82025706f8f67dc2060c92ae8b10869e2b070f08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ca0c635342d50bebbd503e2285062aeea00d0883dfe8fd4289d1e638e2a56c\",\"dweb:/ipfs/QmNzn9cSanu8PirRc9wnVBBLbNZy4QPCGrRzsJW9xPFbte\"]},\"03_05_Proxy.sol\":{\"keccak256\":\"0x2d4590ddfd911967dfb43fd40a17302cc65c953392bb5bd80ca5b117bcd743e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://435e3bd5f00ba68605ff720d89358f32783a5b4f0b7ebde2d35f2033f2c2d194\",\"dweb:/ipfs/QmbJsL2ctwbiJAvUZyTVGpn8395B9K1sjiusp5DGZE7W19\"]},\"04_05_Address.sol\":{\"keccak256\":\"0x4fad4b52679f495fbde44858fd16ce5282941a7ddf075066f09036ddedd08062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce877dc61868a4e76a2794bc22e1e0f961a3f1b3dfca4c656c7d048eaab515b\",\"dweb:/ipfs/QmSqiRbicBDJMW8v4hVRix9nQiJJJuSBbKi1ri2MAHrTiX\"]},\"05_05_StorageSlot.sol\":{\"keccak256\":\"0xcf26f014bf7e1fc3d02aedc00eb218479bea1754f8a058741e1764c7678ad3dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fa44fb4e85d5588f2cf67d527320014b35c40e205239c86d8c5739ac547f0e\",\"dweb:/ipfs/QmbhvU2u8DKnGPHMm6jAgJEtggqQ3zCw9dEw3KBtGXgFgR\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "03_05_Proxy.sol": {"Proxy": {"abi": [{"stateMutability": "payable", "type": "fallback"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"03_05_Proxy.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"03_05_Proxy.sol\":{\"keccak256\":\"0x2d4590ddfd911967dfb43fd40a17302cc65c953392bb5bd80ca5b117bcd743e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://435e3bd5f00ba68605ff720d89358f32783a5b4f0b7ebde2d35f2033f2c2d194\",\"dweb:/ipfs/QmbJsL2ctwbiJAvUZyTVGpn8395B9K1sjiusp5DGZE7W19\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "04_05_Address.sol": {"Address": {"abi": [], "devdoc": {"details": "Collection of functions related to the address type", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"04_05_Address.sol\":194:9158   */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"04_05_Address.sol\":194:9158   */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122094e34a21b5897b5e45c81596991dba9dfa9a26f5299a3f5f7908cf7647fcb67a64736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122094e34a21b5897b5e45c81596991dba9dfa9a26f5299a3f5f7908cf7647fcb67a64736f6c63430008180033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xE3 BLOBBASEFEE 0x21 0xB5 DUP10 PUSH28 0x5E45C81596991DBA9DFA9A26F5299A3F5F7908CF7647FCB67A64736F PUSH13 0x63430008180033000000000000 ", "sourceMap": "194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "5f80fdfea264697066735822122094e34a21b5897b5e45c81596991dba9dfa9a26f5299a3f5f7908cf7647fcb67a64736f6c63430008180033", "opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xE3 BLOBBASEFEE 0x21 0xB5 DUP10 PUSH28 0x5E45C81596991DBA9DFA9A26F5299A3F5F7908CF7647FCB67A64736F PUSH13 0x63430008180033000000000000 ", "sourceMap": "194:8964:3:-:0;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"04_05_Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"04_05_Address.sol\":{\"keccak256\":\"0x4fad4b52679f495fbde44858fd16ce5282941a7ddf075066f09036ddedd08062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce877dc61868a4e76a2794bc22e1e0f961a3f1b3dfca4c656c7d048eaab515b\",\"dweb:/ipfs/QmSqiRbicBDJMW8v4hVRix9nQiJJJuSBbKi1ri2MAHrTiX\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "05_05_StorageSlot.sol": {"StorageSlot": {"abi": [], "devdoc": {"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"05_05_StorageSlot.sol\":1279:2670   */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"05_05_StorageSlot.sol\":1279:2670   */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c897a841b4b8a84396f4da1ba23d6310a42bbeefb503eeccddf65f70aafe15a64736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212202c897a841b4b8a84396f4da1ba23d6310a42bbeefb503eeccddf65f70aafe15a64736f6c63430008180033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP10 PUSH27 0x841B4B8A84396F4DA1BA23D6310A42BBEEFB503EECCDDF65F70AAF 0xE1 GAS PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "1279:1391:4:-:0;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "5f80fdfea26469706673582212202c897a841b4b8a84396f4da1ba23d6310a42bbeefb503eeccddf65f70aafe15a64736f6c63430008180033", "opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP10 PUSH27 0x841B4B8A84396F4DA1BA23D6310A42BBEEFB503EECCDDF65F70AAF 0xE1 GAS PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "1279:1391:4:-:0;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"05_05_StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"05_05_StorageSlot.sol\":{\"keccak256\":\"0xcf26f014bf7e1fc3d02aedc00eb218479bea1754f8a058741e1764c7678ad3dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fa44fb4e85d5588f2cf67d527320014b35c40e205239c86d8c5739ac547f0e\",\"dweb:/ipfs/QmbhvU2u8DKnGPHMm6jAgJEtggqQ3zCw9dEw3KBtGXgFgR\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}}, "sources": {"01_05_clgen.sol": {"id": 0}, "02_05_ERC721Creator.sol": {"id": 1}, "03_05_Proxy.sol": {"id": 2}, "04_05_Address.sol": {"id": 3}, "05_05_StorageSlot.sol": {"id": 4}}}