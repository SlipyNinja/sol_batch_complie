{"contracts": {"1_5_SMC.sol": {"SMC": {"abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "implementation", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"kind": "dev", "methods": {"implementation()": {"details": "Returns the current implementation address."}}, "version": 1}, "evm": {"assembly": "    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  0x80\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_4, callvalue)\n  tag_6\n  dup2\n  tag_1\n  jump\t// in\ntag_6:\n  0x18\n  dup2\n  mstore\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  tag_7\n  0x00\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  dup1\n  0x20\n  swap4\n  0x5365636f6e64204d616e69666f6c6420436f6e74726163740000000000000000\n  dup6\n  dup3\n  add\n  mstore\n  dup6\n  mload\n  swap1\n  tag_8\n  dup3\n  tag_1\n  jump\t// in\ntag_8:\n  0x03\n  dup3\n  mstore\n  shl(0xe8, 0x534d43)\n  dup7\n  dup4\n  add\n  mstore\n    /* \"2_5_ERC721Creator.sol\":441:483   */\n  0x5133522ea5a0494ecb83f26311a095ddd7a9d4b6\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  swap2\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n  dup4\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  dup8\n  mload\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  swap6\n  dup7\n  swap2\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  tag_9\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  dup10\n  dup5\n  add\n  swap5\n  shl(0xe1, 0x266c45bb)\n  dup7\n  mstore\n  dup12\n  0x24\n  dup7\n  add\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  mstore\n  0x64\n  dup6\n  add\n  swap1\n  tag_3\n  jump\t// in\ntag_9:\n  dup4\n  dup2\n  sub\n  not(0x23)\n  add\n  0x44\n  dup6\n  add\n  mstore\n  swap1\n  tag_3\n  jump\t// in\ntag_7:\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  sub\n  swap5\n  tag_10\n  not(0x1f)\n  swap7\n  dup8\n  dup2\n  add\n  dup4\n  mstore\n  dup3\n  tag_2\n  jump\t// in\ntag_10:\n    /* \"2_5_ERC721Creator.sol\":512:635   */\n  mload\n  swap2\n  gas\n  delegatecall\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  swap1\n  jumpi(tag_11, iszero(returndatasize))\n  returndatasize\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  dup2\n  gt\n  tag_13\n  jumpi\n  tag_15\n  dup5\n  dup7\n  mload\n  swap4\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x1f\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  dup5\n  add\n  and\n  add\n  dup4\n  tag_2\n  jump\t// in\ntag_15:\n  dup2\n  mstore\n  0x00\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  dup4\n  returndatasize\n  swap3\n  add\n  returndatacopy\ntag_16:\n  iszero\n  tag_17\n  jumpi\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  pop\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\ntag_17:\n  0x64\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  swap2\n  mload\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  swap1\n  shl(0xe5, 0x461bcd)\n  dup3\n  mstore\n  0x04\n  dup3\n  add\n  mstore\n  0x15\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x24\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  dup3\n  add\n  mstore\n  0x496e697469616c697a6174696f6e206661696c65640000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  revert\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\ntag_13:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x24\n  0x00\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  revert\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\ntag_11:\n  pop\n  jump(tag_16)\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  0x40\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_13\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x1f\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_13\n  jumpi\n  0x40\n  mstore\n  jump\t// out\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\ntag_3:\n  swap2\n  swap1\n  dup3\n  mload\n  swap3\n  dup4\n  dup3\n  mstore\n  0x00\ntag_23:\n  dup5\n  dup2\n  lt\n  tag_24\n  jumpi\n  pop\n  pop\n  dup3\n  0x00\n  0x20\n  dup1\n  swap5\n  swap6\n  dup5\n  add\n  add\n  mstore\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x1f\n  dup1\n  not\n    /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n  swap2\n  add\n  and\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  add\n  add\n  swap1\n  jump\t// out\ntag_24:\n  0x20\n  dup2\n  dup4\n  add\n  dup2\n  add\n  mload\n  dup5\n  dup4\n  add\n  dup3\n  add\n  mstore\n  add\n  jump(tag_23)\nstop\n\nsub_0: assembly {\n        /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n    tag_3:\n      jumpi(tag_4, iszero(calldatasize))\n    tag_5:\n        /* \"3_5_Proxy.sol\":2629:2693   */\n      tag_6\n      tag_1\n      jump\t// in\n    tag_6:\n      stop\n        /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n    tag_4:\n        /* \"3_5_Proxy.sol\":2629:2693   */\n      tag_7\n      tag_1\n      jump\t// in\n    tag_7:\n        /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n      jump(tag_5)\n    tag_2:\n      0x00\n      dup1\n      calldataload\n      0xe0\n      shr\n      0x5c60da1b\n      eq\n      tag_8\n      jumpi\n      pop\n      jump(tag_3)\n    tag_8:\n      jumpi(tag_12, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_12\n      jumpi\n        /* \"2_5_ERC721Creator.sol\":975:1041   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n      and\n      0x80\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_12:\n      dup1\n      revert\n        /* \"3_5_Proxy.sol\":2322:2432   */\n    tag_1:\n      pop\n        /* \"2_5_ERC721Creator.sol\":975:1041   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"1_5_SMC.sol\":2211:2314  contract SMC is ERC721Creator {... */\n      and\n        /* \"3_5_Proxy.sol\":1018:1837   */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      dup3\n      dup1\n      returndatacopy\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      swap1\n      return\n    tag_14:\n      returndatasize\n      swap1\n      revert\n\n    auxdata: 0xa26469706673582212207767a3ed75c3949f64a2571c8671efc9eae4f2fe553f4d07066db2a27218875964736f6c63430008110033\n}\n", "bytecode": {"functionDebugData": {"abi_encode_string": {"entryPoint": 479, "id": null, "parameterSlots": 2, "returnSlots": 1}, "finalize_allocation": {"entryPoint": 444, "id": null, "parameterSlots": 2, "returnSlots": 0}, "finalize_allocation_1514": {"entryPoint": 417, "id": null, "parameterSlots": 1, "returnSlots": 0}}, "generatedSources": [], "linkReferences": {}, "object": "60806040908082523461019c57610015816101a1565b601881526100e06000806020937f5365636f6e64204d616e69666f6c6420436f6e7472616374000000000000000085820152855190610053826101a1565b6003825262534d4360e81b86830152735133522ea5a0494ecb83f26311a095ddd7a9d4b6917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8360018060a01b031982541617905587519586916100ce8984019463266c45bb60e11b86528b602486015260648501906101df565b838103602319016044850152906101df565b03946100f4601f19968781018352826101bc565b51915af4903d15610196573d6001600160401b0381116101805761012184865193601f84011601836101bc565b81526000833d92013e5b1561013e57505161010290816102208239f35b606491519062461bcd60e51b82526004820152601560248201527f496e697469616c697a6174696f6e206661696c656400000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b5061012b565b600080fd5b604081019081106001600160401b0382111761018057604052565b601f909101601f19168101906001600160401b0382119082101761018057604052565b919082519283825260005b84811061020b575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016101ea56fe608060405260043610156025575b3615601b575b60196080565b005b60216080565b6013565b6000803560e01c635c60da1b14603a5750600d565b34607d5780600319360112607d577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b80fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e1560c8573d90f35b3d90fdfea26469706673582212207767a3ed75c3949f64a2571c8671efc9eae4f2fe553f4d07066db2a27218875964736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x19C JUMPI PUSH2 0x15 DUP2 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH2 0xE0 PUSH1 0x0 DUP1 PUSH1 0x20 SWAP4 PUSH32 0x5365636F6E64204D616E69666F6C6420436F6E74726163740000000000000000 DUP6 DUP3 ADD MSTORE DUP6 MLOAD SWAP1 PUSH2 0x53 DUP3 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x534D43 PUSH1 0xE8 SHL DUP7 DUP4 ADD MSTORE PUSH20 0x5133522EA5A0494ECB83F26311A095DDD7A9D4B6 SWAP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 MLOAD SWAP6 DUP7 SWAP2 PUSH2 0xCE DUP10 DUP5 ADD SWAP5 PUSH4 0x266C45BB PUSH1 0xE1 SHL DUP7 MSTORE DUP12 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD SWAP1 PUSH2 0x1DF JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x23 NOT ADD PUSH1 0x44 DUP6 ADD MSTORE SWAP1 PUSH2 0x1DF JUMP JUMPDEST SUB SWAP5 PUSH2 0xF4 PUSH1 0x1F NOT SWAP7 DUP8 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1BC JUMP JUMPDEST MLOAD SWAP2 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x196 JUMPI RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x180 JUMPI PUSH2 0x121 DUP5 DUP7 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x1BC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x13E JUMPI POP MLOAD PUSH2 0x102 SWAP1 DUP2 PUSH2 0x220 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x180 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x180 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x20B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1EA JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x25 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x19 PUSH1 0x80 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x21 PUSH1 0x80 JUMP JUMPDEST PUSH1 0x13 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B EQ PUSH1 0x3A JUMPI POP PUSH1 0xD JUMP JUMPDEST CALLVALUE PUSH1 0x7D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x7D JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0xC8 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x67A3ED75C3949F64A2571C8671EFC9EAE4F2FE553F4D0706 PUSH14 0xB2A27218875964736F6C63430008 GT STOP CALLER ", "sourceMap": "2211:103:0:-:0;;;;;;;;;;;;:::i;:::-;;;;975:66:1;-1:-1:-1;2211:103:0;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2211:103:0;;;;441:42:1;975:66;;;;;;;;;;;;;;;2211:103:0;;568:66:1;;;975;568;;;;;;;;;;;;;975;;;;;;:::i;:::-;;;;-1:-1:-1;;975:66:1;;;;;;;:::i;:::-;568;;;;;;;;;;;;;:::i;:::-;512:123;;;;975:66;;;;;;-1:-1:-1;;;;;2211:103:0;;;;;;;;;568:66:1;2211:103:0;;;;;;:::i;:::-;;;-1:-1:-1;975:66:1;;;;;;;;;2211:103:0;;;;;;;;;975:66:1;;2211:103:0;;975:66:1;;;;;;;;;;;568;975;;;;;;;;;2211:103:0;;;;-1:-1:-1;2211:103:0;;;;568:66:1;-1:-1:-1;2211:103:0;975:66:1;;;;2211:103:0;;;;;;;;;;;-1:-1:-1;;;;;2211:103:0;;;;;;;:::o;:::-;568:66:1;2211:103:0;;;-1:-1:-1;;2211:103:0;;;;-1:-1:-1;;;;;2211:103:0;;;;;;;;;;:::o;975:66:1:-;;;;;;;;;-1:-1:-1;975:66:1;;;;;;;;;-1:-1:-1;975:66:1;;;;;;;;568;;;2211:103:0;;;975:66:1;;;:::o;:::-;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {"fun_fallback": {"entryPoint": 128, "id": 128, "parameterSlots": 0, "returnSlots": 0}}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608060405260043610156025575b3615601b575b60196080565b005b60216080565b6013565b6000803560e01c635c60da1b14603a5750600d565b34607d5780600319360112607d577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b80fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e1560c8573d90f35b3d90fdfea26469706673582212207767a3ed75c3949f64a2571c8671efc9eae4f2fe553f4d07066db2a27218875964736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x25 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x19 PUSH1 0x80 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x21 PUSH1 0x80 JUMP JUMPDEST PUSH1 0x13 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B EQ PUSH1 0x3A JUMPI POP PUSH1 0xD JUMP JUMPDEST CALLVALUE PUSH1 0x7D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x7D JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0xC8 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x67A3ED75C3949F64A2571C8671EFC9EAE4F2FE553F4D0706 PUSH14 0xB2A27218875964736F6C63430008 GT STOP CALLER ", "sourceMap": "2211:103:0:-:0;;;;;;;;;-1:-1:-1;2211:103:0;;;;-1:-1:-1;2629:64:2;;:::i;:::-;-1:-1:-1;2211:103:0;2629:64:2;;:::i;:::-;2211:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;975:66:1;;-1:-1:-1;;;;;2211:103:0;;;;;;;;;;;2322:110:2;-1:-1:-1;975:66:1;;-1:-1:-1;;;;;;;;;;;2211:103:0;1018:819:2;-1:-1:-1;;1018:819:2;;;;;;;;;;;;;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1_5_SMC.sol\":\"SMC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"1_5_SMC.sol\":{\"keccak256\":\"0x327da5e530ca538676757a7ab006542a5c4bad42dfa721eda051b720afcf1f2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03aee8a5089b7442ba8242249771281d1ceaf89989682faa1c3261687e9965a\",\"dweb:/ipfs/QmY3aDRUHJTJDrLEc7Wb8FmZfqKD8CEr94FS6UDBJtJaSR\"]},\"2_5_ERC721Creator.sol\":{\"keccak256\":\"0x572d96683dcb12c3cd1ef7d4b73be19611792575407a9ba3d1ff4849dac112cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a928851abc2885cc78c65dc3faaaae230b995458786dd74ec4efeda2b66cd109\",\"dweb:/ipfs/QmWY6ST4NpVfkUS1MtebSmfNBZPbiA7wZhAig8as9TgeGL\"]},\"3_5_Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"4_5_Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"5_5_StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "2_5_ERC721Creator.sol": {"ERC721Creator": {"abi": [{"inputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "implementation", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"kind": "dev", "methods": {"implementation()": {"details": "Returns the current implementation address."}}, "stateVariables": {"_IMPLEMENTATION_SLOT": {"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."}}, "version": 1}, "evm": {"assembly": "    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  0x80\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_14, callvalue)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  swap2\n  tag_8\n  dup3\n  dup6\n  tag_1\n  jump\t// in\ntag_8:\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  dup3\n  dup2\n  dup4\n  sub\n  slt\n  tag_14\n  jumpi\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  swap2\n  swap1\n  dup3\n  dup2\n  gt\n  tag_14\n  jumpi\n  dup4\n  tag_13\n  swap2\n  dup4\n  add\n  tag_4\n  jump\t// in\ntag_13:\n  swap1\n  0x20\n  dup2\n  add\n  mload\n  swap3\n  dup4\n  gt\n  tag_14\n  jumpi\n  0x00\n  swap4\n  dup5\n  swap4\n  tag_16\n  swap3\n  add\n  tag_4\n  jump\t// in\ntag_16:\n    /* \"2_5_ERC721Creator.sol\":441:483   */\n  swap1\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  tag_17\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  tag_18\n    /* \"2_5_ERC721Creator.sol\":441:483   */\n  0x5133522ea5a0494ecb83f26311a095ddd7a9d4b6\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  swap4\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n  dup6\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  0x01\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  dup1\n  0xa0\n  shl\n  sub\n  not\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  dup8\n  mload\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  swap3\n  dup4\n  swap2\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  tag_19\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  0x20\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  dup5\n  add\n  swap7\n  shl(0xe1, 0x266c45bb)\n  dup9\n  mstore\n  dup12\n  0x24\n  dup7\n  add\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  mstore\n  0x64\n  dup6\n  add\n  swap1\n  tag_5\n  jump\t// in\ntag_19:\n  dup4\n  dup2\n  sub\n  not(0x23)\n  add\n  0x44\n  dup6\n  add\n  mstore\n  swap1\n  tag_5\n  jump\t// in\ntag_17:\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  sub\n  not(0x1f)\n  dup2\n  add\n  dup4\n  mstore\n  dup3\n  tag_1\n  jump\t// in\ntag_18:\n    /* \"2_5_ERC721Creator.sol\":512:635   */\n  mload\n  swap2\n  gas\n  delegatecall\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  jumpi(tag_20, iszero(returndatasize))\n  returndatasize\n  tag_22\n  dup2\n  tag_2\n  jump\t// in\ntag_22:\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  swap1\n  tag_23\n  dup5\n  mload\n  swap3\n  dup4\n  tag_1\n  jump\t// in\ntag_23:\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  dup2\n  mstore\n  0x00\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  0x20\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  returndatasize\n  swap3\n  add\n  returndatacopy\ntag_24:\n  iszero\n  tag_25\n  jumpi\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\ntag_25:\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  mload\n  shl(0xe5, 0x461bcd)\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  dup2\n  mstore\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  0x20\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  0x04\n  dup3\n  add\n  mstore\n  0x15\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x24\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  dup3\n  add\n  mstore\n  0x496e697469616c697a6174696f6e206661696c65640000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\ntag_20:\n  jump(tag_24)\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\ntag_14:\n  0x00\n  dup1\n  revert\ntag_1:\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x1f\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_27\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_27:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_27\n  jumpi\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x1f\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\ntag_3:\n  0x00\ntag_31:\n  dup4\n  dup2\n  lt\n  tag_32\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  add\n  mstore\n  jump\t// out\ntag_32:\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_31)\ntag_4:\n  dup2\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_14\n  jumpi\n  dup1\n  mload\n  tag_36\n  dup2\n  tag_2\n  jump\t// in\ntag_36:\n  swap3\n  tag_37\n  mload(0x40)\n  swap5\n  dup6\n  tag_1\n  jump\t// in\ntag_37:\n  dup2\n  dup5\n  mstore\n  0x20\n  dup3\n  dup5\n  add\n  add\n  gt\n  tag_14\n  jumpi\n  tag_40\n  swap2\n  0x20\n  dup1\n  dup6\n  add\n  swap2\n  add\n  tag_3\n  jump\t// in\ntag_40:\n  swap1\n  jump\t// out\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\ntag_5:\n  swap1\n  0x20\n  swap2\n  tag_41\n  dup2\n  mload\n  dup1\n  swap3\n  dup2\n  dup6\n  mstore\n  dup6\n  dup1\n  dup7\n  add\n  swap2\n  add\n  tag_3\n  jump\t// in\ntag_41:\n    /* \"2_5_ERC721Creator.sol\":568:634   */\n  0x1f\n    /* \"2_5_ERC721Creator.sol\":172:1377   */\n  add\n  not(0x1f)\n  and\n    /* \"2_5_ERC721Creator.sol\":975:1041   */\n  add\n  add\n  swap1\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"2_5_ERC721Creator.sol\":172:1377   */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n    tag_3:\n      jumpi(tag_4, iszero(calldatasize))\n    tag_5:\n        /* \"3_5_Proxy.sol\":2629:2693   */\n      tag_6\n      tag_1\n      jump\t// in\n    tag_6:\n      stop\n        /* \"2_5_ERC721Creator.sol\":172:1377   */\n    tag_4:\n        /* \"3_5_Proxy.sol\":2629:2693   */\n      tag_7\n      tag_1\n      jump\t// in\n    tag_7:\n        /* \"2_5_ERC721Creator.sol\":172:1377   */\n      jump(tag_5)\n    tag_2:\n      0x00\n      dup1\n      calldataload\n      0xe0\n      shr\n      0x5c60da1b\n      eq\n      tag_8\n      jumpi\n      pop\n      jump(tag_3)\n    tag_8:\n      jumpi(tag_12, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_12\n      jumpi\n        /* \"2_5_ERC721Creator.sol\":975:1041   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"2_5_ERC721Creator.sol\":172:1377   */\n      and\n      0x80\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_12:\n      dup1\n      revert\n        /* \"3_5_Proxy.sol\":2322:2432   */\n    tag_1:\n      pop\n        /* \"2_5_ERC721Creator.sol\":975:1041   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"2_5_ERC721Creator.sol\":172:1377   */\n      and\n        /* \"3_5_Proxy.sol\":1018:1837   */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      dup3\n      dup1\n      returndatacopy\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      swap1\n      return\n    tag_14:\n      returndatasize\n      swap1\n      revert\n\n    auxdata: 0xa264697066735822122025ce86edba3f76fbe4902c0389a167b91cbab9ec154e517a453c5e12b171a33c64736f6c63430008110033\n}\n", "bytecode": {"functionDebugData": {"abi_decode_string_fromMemory": {"entryPoint": 509, "id": null, "parameterSlots": 2, "returnSlots": 1}, "abi_encode_string": {"entryPoint": 578, "id": null, "parameterSlots": 2, "returnSlots": 1}, "array_allocation_size_string": {"entryPoint": 447, "id": null, "parameterSlots": 1, "returnSlots": 1}, "copy_memory_to_memory_with_cleanup": {"entryPoint": 474, "id": null, "parameterSlots": 3, "returnSlots": 0}, "finalize_allocation": {"entryPoint": 390, "id": null, "parameterSlots": 2, "returnSlots": 0}}, "generatedSources": [], "linkReferences": {}, "object": "6080604090808252346101815761036a803803809161001e8285610186565b833981019082818303126101815780516001600160401b039190828111610181578361004b9183016101fd565b90602081015192831161018157600093849361006792016101fd565b906100ed6100fb735133522ea5a0494ecb83f26311a095ddd7a9d4b6937f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8560018060a01b031982541617905587519283916100db602084019663266c45bb60e11b88528b60248601526064850190610242565b83810360231901604485015290610242565b03601f198101835282610186565b51915af43d1561017c573d61010f816101bf565b9061011c84519283610186565b8152600060203d92013e5b15610139575161010290816102688239f35b5162461bcd60e51b815260206004820152601560248201527f496e697469616c697a6174696f6e206661696c656400000000000000000000006044820152606490fd5b610127565b600080fd5b601f909101601f19168101906001600160401b038211908210176101a957604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116101a957601f01601f191660200190565b60005b8381106101ed5750506000910152565b81810151838201526020016101dd565b81601f82011215610181578051610213816101bf565b926102216040519485610186565b818452602082840101116101815761023f91602080850191016101da565b90565b9060209161025b815180928185528580860191016101da565b601f01601f191601019056fe608060405260043610156025575b3615601b575b60196080565b005b60216080565b6013565b6000803560e01c635c60da1b14603a5750600d565b34607d5780600319360112607d577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b80fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e1560c8573d90f35b3d90fdfea264697066735822122025ce86edba3f76fbe4902c0389a167b91cbab9ec154e517a453c5e12b171a33c64736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x181 JUMPI PUSH2 0x36A DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1E DUP3 DUP6 PUSH2 0x186 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH2 0x181 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 DUP3 DUP2 GT PUSH2 0x181 JUMPI DUP4 PUSH2 0x4B SWAP2 DUP4 ADD PUSH2 0x1FD JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 ADD MLOAD SWAP3 DUP4 GT PUSH2 0x181 JUMPI PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH2 0x67 SWAP3 ADD PUSH2 0x1FD JUMP JUMPDEST SWAP1 PUSH2 0xED PUSH2 0xFB PUSH20 0x5133522EA5A0494ECB83F26311A095DDD7A9D4B6 SWAP4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0xDB PUSH1 0x20 DUP5 ADD SWAP7 PUSH4 0x266C45BB PUSH1 0xE1 SHL DUP9 MSTORE DUP12 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD SWAP1 PUSH2 0x242 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x23 NOT ADD PUSH1 0x44 DUP6 ADD MSTORE SWAP1 PUSH2 0x242 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x186 JUMP JUMPDEST MLOAD SWAP2 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x17C JUMPI RETURNDATASIZE PUSH2 0x10F DUP2 PUSH2 0x1BF JUMP JUMPDEST SWAP1 PUSH2 0x11C DUP5 MLOAD SWAP3 DUP4 PUSH2 0x186 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x139 JUMPI MLOAD PUSH2 0x102 SWAP1 DUP2 PUSH2 0x268 DUP3 CODECOPY RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x1A9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1ED JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x181 JUMPI DUP1 MLOAD PUSH2 0x213 DUP2 PUSH2 0x1BF JUMP JUMPDEST SWAP3 PUSH2 0x221 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x186 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x181 JUMPI PUSH2 0x23F SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x25B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x25 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x19 PUSH1 0x80 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x21 PUSH1 0x80 JUMP JUMPDEST PUSH1 0x13 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B EQ PUSH1 0x3A JUMPI POP PUSH1 0xD JUMP JUMPDEST CALLVALUE PUSH1 0x7D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x7D JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0xC8 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xCE DUP7 0xED 0xBA EXTCODEHASH PUSH23 0xFBE4902C0389A167B91CBAB9EC154E517A453C5E12B171 LOG3 EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ", "sourceMap": "172:1205:1:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:1205:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;172:1205:1;;;;;;;:::i;:::-;441:42;975:66;568;441:42;975:66;;;172:1205;975:66;;;;;;;;;;;172:1205;;568:66;;;975;172:1205;568:66;;;;;;;;;;;;975;;;;;;:::i;:::-;;;;-1:-1:-1;;975:66:1;;;;;;;:::i;:::-;568;;;;;;;;;:::i;:::-;512:123;;;;975:66;;;;;;;;:::i;:::-;172:1205;;;;;;;:::i;:::-;975:66;;-1:-1:-1;172:1205:1;975:66;;;;;;;;172:1205;;;;;;;;975:66;172:1205;-1:-1:-1;;;975:66:1;;172:1205;975:66;;;;;568;975;;;;;;;;;;;;;;172:1205;-1:-1:-1;172:1205:1;;;568:66;172:1205;;;-1:-1:-1;;172:1205:1;;;;-1:-1:-1;;;;;172:1205:1;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;172:1205:1;;;;568:66;172:1205;-1:-1:-1;;172:1205:1;;;;:::o;:::-;;;;;;;;-1:-1:-1;;172:1205:1;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;975:66::-;;;;;;;;;;;;;;;;;;;:::i;:::-;568;172:1205;-1:-1:-1;;172:1205:1;975:66;;;:::o"}, "deployedBytecode": {"functionDebugData": {"fun_fallback": {"entryPoint": 128, "id": 128, "parameterSlots": 0, "returnSlots": 0}}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608060405260043610156025575b3615601b575b60196080565b005b60216080565b6013565b6000803560e01c635c60da1b14603a5750600d565b34607d5780600319360112607d577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b80fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e1560c8573d90f35b3d90fdfea264697066735822122025ce86edba3f76fbe4902c0389a167b91cbab9ec154e517a453c5e12b171a33c64736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x25 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x19 PUSH1 0x80 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x21 PUSH1 0x80 JUMP JUMPDEST PUSH1 0x13 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B EQ PUSH1 0x3A JUMPI POP PUSH1 0xD JUMP JUMPDEST CALLVALUE PUSH1 0x7D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x7D JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0xC8 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xCE DUP7 0xED 0xBA EXTCODEHASH PUSH23 0xFBE4902C0389A167B91CBAB9EC154E517A453C5E12B171 LOG3 EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ", "sourceMap": "172:1205:1:-:0;;;;;;;;;-1:-1:-1;172:1205:1;;;;-1:-1:-1;2629:64:2;;:::i;:::-;-1:-1:-1;172:1205:1;2629:64:2;;:::i;:::-;172:1205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;975:66;;-1:-1:-1;;;;;172:1205:1;;;;;;;;;;;2322:110:2;-1:-1:-1;975:66:1;;-1:-1:-1;;;;;;;;;;;172:1205:1;1018:819:2;-1:-1:-1;;1018:819:2;;;;;;;;;;;;;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"}},\"stateVariables\":{\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"2_5_ERC721Creator.sol\":\"ERC721Creator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"2_5_ERC721Creator.sol\":{\"keccak256\":\"0x572d96683dcb12c3cd1ef7d4b73be19611792575407a9ba3d1ff4849dac112cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a928851abc2885cc78c65dc3faaaae230b995458786dd74ec4efeda2b66cd109\",\"dweb:/ipfs/QmWY6ST4NpVfkUS1MtebSmfNBZPbiA7wZhAig8as9TgeGL\"]},\"3_5_Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"4_5_Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"5_5_StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "3_5_Proxy.sol": {"Proxy": {"abi": [{"stateMutability": "payable", "type": "fallback"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"3_5_Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"3_5_Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "4_5_Address.sol": {"Address": {"abi": [], "devdoc": {"details": "Collection of functions related to the address type", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"4_5_Address.sol\":194:9363   */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"4_5_Address.sol\":194:9363   */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122003924e16690494c79418a9d0ab22e686355b1e35aaa1fb96ab8428439b866f7a64736f6c63430008110033\n}\n", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122003924e16690494c79418a9d0ab22e686355b1e35aaa1fb96ab8428439b866f7a64736f6c63430008110033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SWAP3 0x4E AND PUSH10 0x494C79418A9D0AB22E6 DUP7 CALLDATALOAD JUMPDEST 0x1E CALLDATALOAD 0xAA LOG1 0xFB SWAP7 0xAB DUP5 0x28 NUMBER SWAP12 DUP7 PUSH16 0x7A64736F6C6343000811003300000000 ", "sourceMap": "194:9169:3:-:0;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "600080fdfea264697066735822122003924e16690494c79418a9d0ab22e686355b1e35aaa1fb96ab8428439b866f7a64736f6c63430008110033", "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SWAP3 0x4E AND PUSH10 0x494C79418A9D0AB22E6 DUP7 CALLDATALOAD JUMPDEST 0x1E CALLDATALOAD 0xAA LOG1 0xFB SWAP7 0xAB DUP5 0x28 NUMBER SWAP12 DUP7 PUSH16 0x7A64736F6C6343000811003300000000 ", "sourceMap": "194:9169:3:-:0;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"4_5_Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"4_5_Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "5_5_StorageSlot.sol": {"StorageSlot": {"abi": [], "devdoc": {"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"5_5_StorageSlot.sol\":1420:4105   */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"5_5_StorageSlot.sol\":1420:4105   */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c447a91fdb36d2d5c74a2e5cca9889fc258e8659066f2b50241162b29700418964736f6c63430008110033\n}\n", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c447a91fdb36d2d5c74a2e5cca9889fc258e8659066f2b50241162b29700418964736f6c63430008110033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SELFBALANCE 0xA9 0x1F 0xDB CALLDATASIZE 0xD2 0xD5 0xC7 0x4A 0x2E 0x5C 0xCA SWAP9 DUP10 0xFC 0x25 DUP15 DUP7 MSIZE MOD PUSH16 0x2B50241162B29700418964736F6C6343 STOP ADDMOD GT STOP CALLER ", "sourceMap": "1420:2685:4:-:0;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "600080fdfea2646970667358221220c447a91fdb36d2d5c74a2e5cca9889fc258e8659066f2b50241162b29700418964736f6c63430008110033", "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SELFBALANCE 0xA9 0x1F 0xDB CALLDATASIZE 0xD2 0xD5 0xC7 0x4A 0x2E 0x5C 0xCA SWAP9 DUP10 0xFC 0x25 DUP15 DUP7 MSIZE MOD PUSH16 0x2B50241162B29700418964736F6C6343 STOP ADDMOD GT STOP CALLER ", "sourceMap": "1420:2685:4:-:0;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"5_5_StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"5_5_StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}}, "sources": {"1_5_SMC.sol": {"id": 0}, "2_5_ERC721Creator.sol": {"id": 1}, "3_5_Proxy.sol": {"id": 2}, "4_5_Address.sol": {"id": 3}, "5_5_StorageSlot.sol": {"id": 4}}}