{"contracts": {"01_01_Forwarder.sol": {"CloneFactory": {"abi": [], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"01_01_Forwarder.sol\":1258:3830  contract CloneFactory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"01_01_Forwarder.sol\":1258:3830  contract CloneFactory {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d17773cab26193f08bf1537905c3bedd477003963c5aa5af426d813c8fb361864736f6c63430007050033\n}\n", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203d17773cab26193f08bf1537905c3bedd477003963c5aa5af426d813c8fb361864736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE OR PUSH24 0x3CAB26193F08BF1537905C3BEDD477003963C5AA5AF426D8 SGT 0xC8 0xFB CALLDATASIZE XOR PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ", "sourceMap": "1258:2572:0:-:0;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "6080604052600080fdfea26469706673582212203d17773cab26193f08bf1537905c3bedd477003963c5aa5af426d813c8fb361864736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE OR PUSH24 0x3CAB26193F08BF1537905C3BEDD477003963C5AA5AF426D8 SGT 0xC8 0xFB CALLDATASIZE XOR PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ", "sourceMap": "1258:2572:0:-:0;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_01_Forwarder.sol\":\"CloneFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"01_01_Forwarder.sol\":{\"keccak256\":\"0xaf60b3fc379b5ad5aba36ef87da9fff21dc5267278ff5034a334dead4eac4ed8\",\"urls\":[\"bzz-raw://664b9219eb4a1dc3ecd8a9928af0e443b81d590ed6266e16a59988fcafcbeb89\",\"dweb:/ipfs/QmYGBmgaTWkg3Qni1nYQZi5HBsfeXv5faABxzqQi1GxjGt\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "ERC20Interface": {"abi": [{"inputs": [{"internalType": "address", "name": "_owner", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "balance", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_to", "type": "address"}, {"internalType": "uint256", "name": "_value", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "success", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract that exposes the needed erc20 token functions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_01_Forwarder.sol\":\"ERC20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"01_01_Forwarder.sol\":{\"keccak256\":\"0xaf60b3fc379b5ad5aba36ef87da9fff21dc5267278ff5034a334dead4eac4ed8\",\"urls\":[\"bzz-raw://664b9219eb4a1dc3ecd8a9928af0e443b81d590ed6266e16a59988fcafcbeb89\",\"dweb:/ipfs/QmYGBmgaTWkg3Qni1nYQZi5HBsfeXv5faABxzqQi1GxjGt\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "notice": "Contract that exposes the needed erc20 token functions", "version": 1}}, "Forwarder": {"abi": [{"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "from", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}, {"indexed": false, "internalType": "bytes", "name": "data", "type": "bytes"}], "name": "ForwarderDeposited", "type": "event"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "flush", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "tokenContractAddress", "type": "address"}], "name": "flushTokens", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_parentAddress", "type": "address"}], "name": "init", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "parentAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"kind": "dev", "methods": {"flushTokens(address)": {"params": {"tokenContractAddress": "the address of the erc20 token contract"}}}, "version": 1}, "evm": {"assembly": "    /* \"01_01_Forwarder.sol\":6082:8666  contract Forwarder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"01_01_Forwarder.sol\":6082:8666  contract Forwarder {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x821de3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19ab453c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ef13367\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6b9f96ea\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"01_01_Forwarder.sol\":7681:7688  flush() */\n      tag_9\n        /* \"01_01_Forwarder.sol\":7681:7686  flush */\n      tag_10\n        /* \"01_01_Forwarder.sol\":7681:7688  flush() */\n      jump\t// in\n    tag_9:\n        /* \"01_01_Forwarder.sol\":6082:8666  contract Forwarder {... */\n      stop\n    tag_2:\n        /* \"01_01_Forwarder.sol\":7509:7516  flush() */\n      tag_9\n        /* \"01_01_Forwarder.sol\":7509:7514  flush */\n      tag_10\n        /* \"01_01_Forwarder.sol\":7509:7516  flush() */\n      jump\t// in\n        /* \"01_01_Forwarder.sol\":6177:6205  address public parentAddress */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"01_01_Forwarder.sol\":6377:6946  function init(address _parentAddress) external onlyUninitialized {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_20\n      jump\t// in\n        /* \"01_01_Forwarder.sol\":7879:8304  function flushTokens(address tokenContractAddress) external onlyParent {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_24\n      jump\t// in\n        /* \"01_01_Forwarder.sol\":8389:8664  function flush() public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_9\n    tag_10:\n        /* \"01_01_Forwarder.sol\":8435:8456  address(this).balance */\n      selfbalance\n        /* \"01_01_Forwarder.sol\":8467:8477  value == 0 */\n      dup1\n        /* \"01_01_Forwarder.sol\":8463:8500  if (value == 0) {... */\n      tag_28\n      jumpi\n        /* \"01_01_Forwarder.sol\":8487:8494  return; */\n      pop\n      jump(tag_27)\n        /* \"01_01_Forwarder.sol\":8463:8500  if (value == 0) {... */\n    tag_28:\n        /* \"01_01_Forwarder.sol\":8507:8519  bool success */\n      0x00\n        /* \"01_01_Forwarder.sol\":8525:8538  parentAddress */\n      dup1\n      sload\n        /* \"01_01_Forwarder.sol\":8525:8563  parentAddress.call{ value: value }('') */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_01_Forwarder.sol\":8525:8538  parentAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"01_01_Forwarder.sol\":8552:8557  value */\n      dup4\n      swap1\n        /* \"01_01_Forwarder.sol\":8507:8519  bool success */\n      dup4\n        /* \"01_01_Forwarder.sol\":8525:8563  parentAddress.call{ value: value }('') */\n      dup2\n        /* \"01_01_Forwarder.sol\":8507:8519  bool success */\n      dup2\n        /* \"01_01_Forwarder.sol\":8525:8563  parentAddress.call{ value: value }('') */\n      dup2\n        /* \"01_01_Forwarder.sol\":8552:8557  value */\n      dup6\n        /* \"01_01_Forwarder.sol\":8525:8538  parentAddress */\n      dup8\n        /* \"01_01_Forwarder.sol\":8525:8563  parentAddress.call{ value: value }('') */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_31\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_30)\n    tag_31:\n      0x60\n      swap2\n      pop\n    tag_30:\n      pop\n        /* \"01_01_Forwarder.sol\":8506:8563  (bool success, ) = parentAddress.call{ value: value }('') */\n      pop\n      swap1\n      pop\n        /* \"01_01_Forwarder.sol\":8577:8584  success */\n      dup1\n        /* \"01_01_Forwarder.sol\":8569:8601  require(success, 'Flush failed') */\n      tag_32\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x119b1d5cda0819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_32:\n        /* \"01_01_Forwarder.sol\":8612:8659  ForwarderDeposited(msg.sender, value, msg.data) */\n      0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b\n        /* \"01_01_Forwarder.sol\":8631:8641  msg.sender */\n      caller\n        /* \"01_01_Forwarder.sol\":8643:8648  value */\n      dup4\n        /* \"01_01_Forwarder.sol\":8650:8658  msg.data */\n      0x00\n      calldatasize\n        /* \"01_01_Forwarder.sol\":8612:8659  ForwarderDeposited(msg.sender, value, msg.data) */\n      mload(0x40)\n      dup1\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n      mload(0x40)\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      swap1\n      swap3\n      add\n      dup3\n      swap1\n      sub\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      log1\n        /* \"01_01_Forwarder.sol\":8389:8664  function flush() public {... */\n      pop\n      pop\n    tag_27:\n      jump\t// out\n        /* \"01_01_Forwarder.sol\":6177:6205  address public parentAddress */\n    tag_16:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"01_01_Forwarder.sol\":6377:6946  function init(address _parentAddress) external onlyUninitialized {... */\n    tag_20:\n        /* \"01_01_Forwarder.sol\":7328:7331  0x0 */\n      0x00\n        /* \"01_01_Forwarder.sol\":7303:7316  parentAddress */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"01_01_Forwarder.sol\":7303:7332  parentAddress == address(0x0) */\n      iszero\n        /* \"01_01_Forwarder.sol\":7295:7356  require(parentAddress == address(0x0), 'Already initialized') */\n      tag_34\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x105b1c9958591e481a5b9a5d1a585b1a5e9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_34:\n        /* \"01_01_Forwarder.sol\":6448:6461  parentAddress */\n      0x00\n        /* \"01_01_Forwarder.sol\":6448:6478  parentAddress = _parentAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"01_01_Forwarder.sol\":6500:6521  address(this).balance */\n      selfbalance\n      dup1\n        /* \"01_01_Forwarder.sol\":6528:6565  if (value == 0) {... */\n      tag_36\n      jumpi\n        /* \"01_01_Forwarder.sol\":6552:6559  return; */\n      pop\n      jump(tag_35)\n        /* \"01_01_Forwarder.sol\":6528:6565  if (value == 0) {... */\n    tag_36:\n        /* \"01_01_Forwarder.sol\":6572:6584  bool success */\n      0x00\n        /* \"01_01_Forwarder.sol\":6590:6603  parentAddress */\n      dup1\n      sload\n        /* \"01_01_Forwarder.sol\":6590:6628  parentAddress.call{ value: value }('') */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_01_Forwarder.sol\":6590:6603  parentAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"01_01_Forwarder.sol\":6617:6622  value */\n      dup4\n      swap1\n        /* \"01_01_Forwarder.sol\":6572:6584  bool success */\n      dup4\n        /* \"01_01_Forwarder.sol\":6590:6628  parentAddress.call{ value: value }('') */\n      dup2\n        /* \"01_01_Forwarder.sol\":6572:6584  bool success */\n      dup2\n        /* \"01_01_Forwarder.sol\":6590:6628  parentAddress.call{ value: value }('') */\n      dup2\n        /* \"01_01_Forwarder.sol\":6617:6622  value */\n      dup6\n        /* \"01_01_Forwarder.sol\":6590:6603  parentAddress */\n      dup8\n        /* \"01_01_Forwarder.sol\":6590:6628  parentAddress.call{ value: value }('') */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_39\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_38)\n    tag_39:\n      0x60\n      swap2\n      pop\n    tag_38:\n      pop\n        /* \"01_01_Forwarder.sol\":6571:6628  (bool success, ) = parentAddress.call{ value: value }('') */\n      pop\n      swap1\n      pop\n        /* \"01_01_Forwarder.sol\":6642:6649  success */\n      dup1\n        /* \"01_01_Forwarder.sol\":6634:6666  require(success, 'Flush failed') */\n      tag_40\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x119b1d5cda0819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_40:\n        /* \"01_01_Forwarder.sol\":6891:6941  ForwarderDeposited(address(this), value, msg.data) */\n      0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b\n        /* \"01_01_Forwarder.sol\":6918:6922  this */\n      address\n        /* \"01_01_Forwarder.sol\":6925:6930  value */\n      dup4\n        /* \"01_01_Forwarder.sol\":6932:6940  msg.data */\n      0x00\n      calldatasize\n        /* \"01_01_Forwarder.sol\":6891:6941  ForwarderDeposited(address(this), value, msg.data) */\n      mload(0x40)\n      dup1\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n      mload(0x40)\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      swap1\n      swap3\n      add\n      dup3\n      swap1\n      sub\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      log1\n        /* \"01_01_Forwarder.sol\":7362:7363  _ */\n      pop\n      pop\n    tag_35:\n        /* \"01_01_Forwarder.sol\":6377:6946  function init(address _parentAddress) external onlyUninitialized {... */\n      pop\n      jump\t// out\n        /* \"01_01_Forwarder.sol\":7879:8304  function flushTokens(address tokenContractAddress) external onlyParent {... */\n    tag_24:\n        /* \"01_01_Forwarder.sol\":7103:7116  parentAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"01_01_Forwarder.sol\":7089:7099  msg.sender */\n      caller\n        /* \"01_01_Forwarder.sol\":7089:7116  msg.sender == parentAddress */\n      eq\n        /* \"01_01_Forwarder.sol\":7081:7132  require(msg.sender == parentAddress, 'Only Parent') */\n      tag_42\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x13db9b1e4814185c995b9d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_42:\n        /* \"01_01_Forwarder.sol\":8097:8133  instance.balanceOf(forwarderAddress) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"01_01_Forwarder.sol\":8059:8063  this */\n      address\n        /* \"01_01_Forwarder.sol\":8097:8133  instance.balanceOf(forwarderAddress) */\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"01_01_Forwarder.sol\":7997:8017  tokenContractAddress */\n      dup4\n      swap3\n        /* \"01_01_Forwarder.sol\":8059:8063  this */\n      swap2\n        /* \"01_01_Forwarder.sol\":7956:7979  ERC20Interface instance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_01_Forwarder.sol\":8097:8115  instance.balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"01_01_Forwarder.sol\":8097:8133  instance.balanceOf(forwarderAddress) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"01_01_Forwarder.sol\":8097:8115  instance.balanceOf */\n      dup7\n        /* \"01_01_Forwarder.sol\":8097:8133  instance.balanceOf(forwarderAddress) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      mload\n      swap1\n      pop\n        /* \"01_01_Forwarder.sol\":8143:8164  forwarderBalance == 0 */\n      dup1\n        /* \"01_01_Forwarder.sol\":8139:8187  if (forwarderBalance == 0) {... */\n      tag_48\n      jumpi\n        /* \"01_01_Forwarder.sol\":8174:8181  return; */\n      pop\n      pop\n      pop\n      jump(tag_35)\n        /* \"01_01_Forwarder.sol\":8139:8187  if (forwarderBalance == 0) {... */\n    tag_48:\n        /* \"01_01_Forwarder.sol\":8256:8269  parentAddress */\n      sload(0x00)\n        /* \"01_01_Forwarder.sol\":8193:8299  TransferHelper.safeTransfer(... */\n      tag_49\n      swap1\n        /* \"01_01_Forwarder.sol\":8228:8248  tokenContractAddress */\n      dup6\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_01_Forwarder.sol\":8256:8269  parentAddress */\n      and\n        /* \"01_01_Forwarder.sol\":8277:8293  forwarderBalance */\n      dup4\n        /* \"01_01_Forwarder.sol\":8193:8220  TransferHelper.safeTransfer */\n      tag_50\n        /* \"01_01_Forwarder.sol\":8193:8299  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_49:\n        /* \"01_01_Forwarder.sol\":7138:7139  _ */\n      pop\n      pop\n      pop\n        /* \"01_01_Forwarder.sol\":7879:8304  function flushTokens(address tokenContractAddress) external onlyParent {... */\n      pop\n      jump\t// out\n        /* \"01_01_Forwarder.sol\":4836:5274  function safeTransfer(... */\n    tag_50:\n        /* \"01_01_Forwarder.sol\":5062:5107  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap3\n      add\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      dup2\n      mstore\n        /* \"01_01_Forwarder.sol\":5051:5108  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap3\n      mload\n      dup3\n      mload\n        /* \"01_01_Forwarder.sol\":5016:5028  bool success */\n      0x00\n      swap5\n        /* \"01_01_Forwarder.sol\":5030:5047  bytes memory data */\n      0x60\n      swap5\n        /* \"01_01_Forwarder.sol\":5051:5061  token.call */\n      swap4\n      dup10\n      and\n      swap4\n        /* \"01_01_Forwarder.sol\":5062:5107  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap3\n        /* \"01_01_Forwarder.sol\":5051:5108  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"01_01_Forwarder.sol\":5062:5107  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"01_01_Forwarder.sol\":5051:5108  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      dup1\n      dup4\n        /* \"01_01_Forwarder.sol\":5062:5107  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n        /* \"01_01_Forwarder.sol\":5051:5108  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n    tag_52:\n      0x20\n      dup4\n      lt\n      tag_54\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_52)\n    tag_54:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_57\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_56)\n    tag_57:\n      0x60\n      swap2\n      pop\n    tag_56:\n      pop\n        /* \"01_01_Forwarder.sol\":5015:5108  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"01_01_Forwarder.sol\":5139:5146  success */\n      dup2\n        /* \"01_01_Forwarder.sol\":5139:5196  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_59\n      jumpi\n      pop\n        /* \"01_01_Forwarder.sol\":5151:5162  data.length */\n      dup1\n      mload\n        /* \"01_01_Forwarder.sol\":5151:5167  data.length == 0 */\n      iszero\n      dup1\n        /* \"01_01_Forwarder.sol\":5151:5195  data.length == 0 || abi.decode(data, (bool)) */\n      tag_59\n      jumpi\n      pop\n        /* \"01_01_Forwarder.sol\":5182:5186  data */\n      dup1\n        /* \"01_01_Forwarder.sol\":5171:5195  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      mload\n        /* \"01_01_Forwarder.sol\":5151:5195  data.length == 0 || abi.decode(data, (bool)) */\n    tag_59:\n        /* \"01_01_Forwarder.sol\":5118:5267  require(... */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611\n      0x2d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"01_01_Forwarder.sol\":4836:5274  function safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611 5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564\n\n    auxdata: 0xa26469706673582212201bf9dc558c605a69c3dc02a54400ee4e28ede37c4dad4b0f722a36390b0e499964736f6c63430007050033\n}\n", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "608060405234801561001057600080fd5b5061066f806100206000396000f3fe6080604052600436106100425760003560e01c8062821de31461005957806319ab453c1461008a5780633ef13367146100bd5780636b9f96ea146100f057610051565b366100515761004f610101565b005b61004f610101565b34801561006557600080fd5b5061006e610223565b604080516001600160a01b039092168252519081900360200190f35b34801561009657600080fd5b5061004f600480360360208110156100ad57600080fd5b50356001600160a01b0316610232565b3480156100c957600080fd5b5061004f600480360360208110156100e057600080fd5b50356001600160a01b03166103c4565b3480156100fc57600080fd5b5061004f5b478061010d5750610221565b600080546040516001600160a01b039091169083908381818185875af1925050503d806000811461015a576040519150601f19603f3d011682016040523d82523d6000602084013e61015f565b606091505b50509050806101a4576040805162461bcd60e51b815260206004820152600c60248201526b119b1d5cda0819985a5b195960a21b604482015290519081900360640190fd5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b338360003660405180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a150505b565b6000546001600160a01b031681565b6000546001600160a01b031615610286576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03831617905547806102ad57506103c1565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146102fa576040519150601f19603f3d011682016040523d82523d6000602084013e6102ff565b606091505b5050905080610344576040805162461bcd60e51b815260206004820152600c60248201526b119b1d5cda0819985a5b195960a21b604482015290519081900360640190fd5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b308360003660405180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a150505b50565b6000546001600160a01b03163314610411576040805162461bcd60e51b815260206004820152600b60248201526a13db9b1e4814185c995b9d60aa1b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820181905291518392916000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d602081101561048957600080fd5b505190508061049a575050506103c1565b6000546104b29085906001600160a01b0316836104b8565b50505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106105355780518252601f199092019160209182019101610516565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610597576040519150601f19603f3d011682016040523d82523d6000602084013e61059c565b606091505b50915091508180156105ca5750805115806105ca57508080602001905160208110156105c757600080fd5b50515b6106055760405162461bcd60e51b815260040180806020018281038252602d81526020018061060d602d913960400191505060405180910390fd5b505050505056fe5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a26469706673582212201bf9dc558c605a69c3dc02a54400ee4e28ede37c4dad4b0f722a36390b0e499964736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x821DE3 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x3EF13367 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x6B9F96EA EQ PUSH2 0xF0 JUMPI PUSH2 0x51 JUMP JUMPDEST CALLDATASIZE PUSH2 0x51 JUMPI PUSH2 0x4F PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F PUSH2 0x101 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x232 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F JUMPDEST SELFBALANCE DUP1 PUSH2 0x10D JUMPI POP PUSH2 0x221 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119B1D5CDA0819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x69B31548DEA9B3B707B4DFF357D326E3E9348B24E7A6080A218A6EDEEEC48F9B CALLER DUP4 PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x286 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE SELFBALANCE DUP1 PUSH2 0x2AD JUMPI POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x344 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119B1D5CDA0819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x69B31548DEA9B3B707B4DFF357D326E3E9348B24E7A6080A218A6EDEEEC48F9B ADDRESS DUP4 PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x13DB9B1E4814185C995B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD DUP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x49A JUMPI POP POP POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4B2 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x4B8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x535 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x59C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x5CA JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x5CA JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x60D PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID SLOAD PUSH19 0x616E7366657248656C7065723A3A7361666554 PUSH19 0x616E736665723A207472616E73666572206661 PUSH10 0x6C6564A2646970667358 0x22 SLT KECCAK256 SHL 0xF9 0xDC SSTORE DUP13 PUSH1 0x5A PUSH10 0xC3DC02A54400EE4E28ED 0xE3 PUSH29 0x4DAD4B0F722A36390B0E499964736F6C63430007050033000000000000 ", "sourceMap": "6082:2584:0:-:0;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "6080604052600436106100425760003560e01c8062821de31461005957806319ab453c1461008a5780633ef13367146100bd5780636b9f96ea146100f057610051565b366100515761004f610101565b005b61004f610101565b34801561006557600080fd5b5061006e610223565b604080516001600160a01b039092168252519081900360200190f35b34801561009657600080fd5b5061004f600480360360208110156100ad57600080fd5b50356001600160a01b0316610232565b3480156100c957600080fd5b5061004f600480360360208110156100e057600080fd5b50356001600160a01b03166103c4565b3480156100fc57600080fd5b5061004f5b478061010d5750610221565b600080546040516001600160a01b039091169083908381818185875af1925050503d806000811461015a576040519150601f19603f3d011682016040523d82523d6000602084013e61015f565b606091505b50509050806101a4576040805162461bcd60e51b815260206004820152600c60248201526b119b1d5cda0819985a5b195960a21b604482015290519081900360640190fd5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b338360003660405180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a150505b565b6000546001600160a01b031681565b6000546001600160a01b031615610286576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03831617905547806102ad57506103c1565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146102fa576040519150601f19603f3d011682016040523d82523d6000602084013e6102ff565b606091505b5050905080610344576040805162461bcd60e51b815260206004820152600c60248201526b119b1d5cda0819985a5b195960a21b604482015290519081900360640190fd5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b308360003660405180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a150505b50565b6000546001600160a01b03163314610411576040805162461bcd60e51b815260206004820152600b60248201526a13db9b1e4814185c995b9d60aa1b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820181905291518392916000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d602081101561048957600080fd5b505190508061049a575050506103c1565b6000546104b29085906001600160a01b0316836104b8565b50505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106105355780518252601f199092019160209182019101610516565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610597576040519150601f19603f3d011682016040523d82523d6000602084013e61059c565b606091505b50915091508180156105ca5750805115806105ca57508080602001905160208110156105c757600080fd5b50515b6106055760405162461bcd60e51b815260040180806020018281038252602d81526020018061060d602d913960400191505060405180910390fd5b505050505056fe5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a26469706673582212201bf9dc558c605a69c3dc02a54400ee4e28ede37c4dad4b0f722a36390b0e499964736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x821DE3 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x3EF13367 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x6B9F96EA EQ PUSH2 0xF0 JUMPI PUSH2 0x51 JUMP JUMPDEST CALLDATASIZE PUSH2 0x51 JUMPI PUSH2 0x4F PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F PUSH2 0x101 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x232 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F JUMPDEST SELFBALANCE DUP1 PUSH2 0x10D JUMPI POP PUSH2 0x221 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119B1D5CDA0819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x69B31548DEA9B3B707B4DFF357D326E3E9348B24E7A6080A218A6EDEEEC48F9B CALLER DUP4 PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x286 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE SELFBALANCE DUP1 PUSH2 0x2AD JUMPI POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x344 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119B1D5CDA0819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x69B31548DEA9B3B707B4DFF357D326E3E9348B24E7A6080A218A6EDEEEC48F9B ADDRESS DUP4 PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x411 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x13DB9B1E4814185C995B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD DUP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x49A JUMPI POP POP POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4B2 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x4B8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x535 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x59C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x5CA JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x5CA JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x60D PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID SLOAD PUSH19 0x616E7366657248656C7065723A3A7361666554 PUSH19 0x616E736665723A207472616E73666572206661 PUSH10 0x6C6564A2646970667358 0x22 SLT KECCAK256 SHL 0xF9 0xDC SSTORE DUP13 PUSH1 0x5A PUSH10 0xC3DC02A54400EE4E28ED 0xE3 PUSH29 0x4DAD4B0F722A36390B0E499964736F6C63430007050033000000000000 ", "sourceMap": "6082:2584:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7681:7;:5;:7::i;:::-;6082:2584;;7509:7;:5;:7::i;6177:28::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6177:28:0;;;;;;;;;;;;;;6377:569;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6377:569:0;-1:-1:-1;;;;;6377:569:0;;:::i;7879:425::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7879:425:0;-1:-1:-1;;;;;7879:425:0;;:::i;8389:275::-;;;;;;;;;;;;;8435:21;8467:10;8463:37;;8487:7;;;8463:37;8507:12;8525:13;;:38;;-1:-1:-1;;;;;8525:13:0;;;;8552:5;;8507:12;8525:38;8507:12;8525:38;8552:5;8525:13;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8506:57;;;8577:7;8569:32;;;;;-1:-1:-1;;;8569:32:0;;;;;;;;;;;;-1:-1:-1;;;8569:32:0;;;;;;;;;;;;;;;8612:47;8631:10;8643:5;8650:8;;8612:47;;;;-1:-1:-1;;;;;8612:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8612:47:0;;;;;;;;-1:-1:-1;8612:47:0;;-1:-1:-1;;;;;;8612:47:0;8389:275;;;:::o;6177:28::-;;;-1:-1:-1;;;;;6177:28:0;;:::o;6377:569::-;7328:3;7303:13;-1:-1:-1;;;;;7303:13:0;:29;7295:61;;;;;-1:-1:-1;;;7295:61:0;;;;;;;;;;;;-1:-1:-1;;;7295:61:0;;;;;;;;;;;;;;;6448:13:::1;:30:::0;;-1:-1:-1;;;;;;6448:30:0::1;-1:-1:-1::0;;;;;6448:30:0;::::1;;::::0;;6500:21:::1;::::0;6528:37:::1;;6552:7;;;6528:37;6572:12;6590:13:::0;;:38:::1;::::0;-1:-1:-1;;;;;6590:13:0;;::::1;::::0;6617:5;;6572:12;6590:38;6572:12;6590:38;6617:5;6590:13;:38:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6571:57;;;6642:7;6634:32;;;::::0;;-1:-1:-1;;;6634:32:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6634:32:0;;;;;;;;;;;;;::::1;;6891:50;6918:4;6925:5;6932:8;;6891:50;;;;-1:-1:-1::0;;;;;6891:50:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;6891:50:0::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;6891:50:0;;-1:-1:-1;;;;;;6891:50:0::1;7362:1;;;6377:569:::0;:::o;7879:425::-;7103:13;;-1:-1:-1;;;;;7103:13:0;7089:10;:27;7081:51;;;;;-1:-1:-1;;;7081:51:0;;;;;;;;;;;;-1:-1:-1;;;7081:51:0;;;;;;;;;;;;;;;8097:36:::1;::::0;;-1:-1:-1;;;8097:36:0;;8059:4:::1;8097:36;::::0;::::1;::::0;;;;;7997:20;;8059:4;7956:23:::1;::::0;-1:-1:-1;;;;;8097:18:0;::::1;::::0;::::1;::::0;:36;;;;;::::1;::::0;;;;;;;;:18;:36;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8097:36:0;;-1:-1:-1;8143:21:0;8139:48:::1;;8174:7;;;;;8139:48;8256:13;::::0;8193:106:::1;::::0;8228:20;;-1:-1:-1;;;;;8256:13:0::1;8277:16:::0;8193:27:::1;:106::i;:::-;7138:1;;;7879:425:::0;:::o;4836:438::-;5062:45;;;-1:-1:-1;;;;;5062:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5062:45:0;-1:-1:-1;;;5062:45:0;;;5051:57;;;;5016:12;;5030:17;;5051:10;;;;5062:45;5051:57;;;5062:45;5051:57;;5062:45;5051:57;;;;;;;;;;-1:-1:-1;;5051:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5015:93;;;;5139:7;:57;;;;-1:-1:-1;5151:11:0;;:16;;:44;;;5182:4;5171:24;;;;;;;;;;;;;;;-1:-1:-1;5171:24:0;5151:44;5118:149;;;;-1:-1:-1;;;5118:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4836:438;;;;;:::o"}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ForwarderDeposited\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"flushTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_parentAddress\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"flushTokens(address)\":{\"params\":{\"tokenContractAddress\":\"the address of the erc20 token contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"flush()\":{\"notice\":\"Flush the entire balance of the contract to the parent address.\"},\"flushTokens(address)\":{\"notice\":\"Execute a token transfer of the full balance from the forwarder token to the parent address\"},\"init(address)\":{\"notice\":\"Initialize the contract, and sets the destination address to that of the creator\"}},\"notice\":\"Contract that will forward any incoming Ether to the creator of the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_01_Forwarder.sol\":\"Forwarder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"01_01_Forwarder.sol\":{\"keccak256\":\"0xaf60b3fc379b5ad5aba36ef87da9fff21dc5267278ff5034a334dead4eac4ed8\",\"urls\":[\"bzz-raw://664b9219eb4a1dc3ecd8a9928af0e443b81d590ed6266e16a59988fcafcbeb89\",\"dweb:/ipfs/QmYGBmgaTWkg3Qni1nYQZi5HBsfeXv5faABxzqQi1GxjGt\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {"flush()": {"notice": "Flush the entire balance of the contract to the parent address."}, "flushTokens(address)": {"notice": "Execute a token transfer of the full balance from the forwarder token to the parent address"}, "init(address)": {"notice": "Initialize the contract, and sets the destination address to that of the creator"}}, "notice": "Contract that will forward any incoming Ether to the creator of the contract", "version": 1}}, "ForwarderFactory": {"abi": [{"inputs": [{"internalType": "address", "name": "_implementationAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "newForwarderAddress", "type": "address"}, {"indexed": false, "internalType": "address", "name": "parentAddress", "type": "address"}], "name": "ForwarderCreated", "type": "event"}, {"inputs": [{"internalType": "address", "name": "parent", "type": "address"}, {"internalType": "bytes32", "name": "salt", "type": "bytes32"}], "name": "createForwarder", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "implementationAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"01_01_Forwarder.sol\":8668:9340  contract ForwarderFactory is CloneFactory {... */\n  mstore(0x40, 0x80)\n    /* \"01_01_Forwarder.sol\":8834:8935  constructor(address _implementationAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"01_01_Forwarder.sol\":8884:8905  implementationAddress */\n  0x00\n    /* \"01_01_Forwarder.sol\":8884:8930  implementationAddress = _implementationAddress */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"01_01_Forwarder.sol\":8668:9340  contract ForwarderFactory is CloneFactory {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"01_01_Forwarder.sol\":8668:9340  contract ForwarderFactory is CloneFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb97a2319\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfb90b320\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"01_01_Forwarder.sol\":8714:8750  address public implementationAddress */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"01_01_Forwarder.sol\":8939:9338  function createForwarder(address parent, bytes32 salt) external {... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"01_01_Forwarder.sol\":8714:8750  address public implementationAddress */\n    tag_6:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"01_01_Forwarder.sol\":8939:9338  function createForwarder(address parent, bytes32 salt) external {... */\n    tag_9:\n        /* \"01_01_Forwarder.sol\":9149:9179  abi.encodePacked(parent, salt) */\n      0x40\n      dup1\n      mload\n      not(0xffffffffffffffffffffffff)\n      0x60\n      dup6\n      swap1\n      shl\n      and\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x34\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x54\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"01_01_Forwarder.sol\":9139:9180  keccak256(abi.encodePacked(parent, salt)) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n        /* \"01_01_Forwarder.sol\":9119:9136  bytes32 finalSalt */\n      0x00\n        /* \"01_01_Forwarder.sol\":9223:9244  implementationAddress */\n      dup1\n      sload\n        /* \"01_01_Forwarder.sol\":9211:9256  createClone(implementationAddress, finalSalt) */\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_01_Forwarder.sol\":9223:9244  implementationAddress */\n      and\n        /* \"01_01_Forwarder.sol\":9139:9180  keccak256(abi.encodePacked(parent, salt)) */\n      dup4\n        /* \"01_01_Forwarder.sol\":9211:9222  createClone */\n      tag_12\n        /* \"01_01_Forwarder.sol\":9211:9256  createClone(implementationAddress, finalSalt) */\n      jump\t// in\n    tag_11:\n        /* \"01_01_Forwarder.sol\":9187:9256  address payable clone = createClone(implementationAddress, finalSalt) */\n      swap1\n      pop\n        /* \"01_01_Forwarder.sol\":9272:9277  clone */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_01_Forwarder.sol\":9262:9283  Forwarder(clone).init */\n      and\n      0x19ab453c\n        /* \"01_01_Forwarder.sol\":9284:9290  parent */\n      dup6\n        /* \"01_01_Forwarder.sol\":9262:9291  Forwarder(clone).init(parent) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_15:\n      pop\n      pop\n        /* \"01_01_Forwarder.sol\":9302:9333  ForwarderCreated(clone, parent) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      dup3\n      mstore\n      dup9\n      and\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      0xa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b5204\n      swap5\n      pop\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap2\n      pop\n      log1\n        /* \"01_01_Forwarder.sol\":8939:9338  function createForwarder(address parent, bytes32 salt) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"01_01_Forwarder.sol\":1284:2737  function createClone(address target, bytes32 salt)... */\n    tag_12:\n        /* \"01_01_Forwarder.sol\":1361:1383  address payable result */\n      0x00\n        /* \"01_01_Forwarder.sol\":1393:1412  bytes20 targetBytes */\n      dup1\n        /* \"01_01_Forwarder.sol\":1423:1429  target */\n      dup4\n        /* \"01_01_Forwarder.sol\":1415:1430  bytes20(target) */\n      0x60\n      shl\n        /* \"01_01_Forwarder.sol\":1393:1430  bytes20 targetBytes = bytes20(target) */\n      swap1\n      pop\n        /* \"01_01_Forwarder.sol\":1556:1560  0x40 */\n      0x40\n        /* \"01_01_Forwarder.sol\":1550:1561  mload(0x40) */\n      mload\n      shl(0x60, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n        /* \"01_01_Forwarder.sol\":1897:1902  clone */\n      dup2\n        /* \"01_01_Forwarder.sol\":1881:1986  mstore(... */\n      mstore\n        /* \"01_01_Forwarder.sol\":2157:2168  targetBytes */\n      dup2\n        /* \"01_01_Forwarder.sol\":2150:2154  0x14 */\n      0x14\n        /* \"01_01_Forwarder.sol\":2143:2148  clone */\n      dup3\n        /* \"01_01_Forwarder.sol\":2139:2155  add(clone, 0x14) */\n      add\n        /* \"01_01_Forwarder.sol\":2132:2169  mstore(add(clone, 0x14), targetBytes) */\n      mstore\n      shl(0x88, 0x5af43d82803e903d91602b57fd5bf3)\n        /* \"01_01_Forwarder.sol\":2381:2385  0x28 */\n      0x28\n        /* \"01_01_Forwarder.sol\":2374:2379  clone */\n      dup3\n        /* \"01_01_Forwarder.sol\":2370:2386  add(clone, 0x28) */\n      add\n        /* \"01_01_Forwarder.sol\":2354:2470  mstore(... */\n      mstore\n        /* \"01_01_Forwarder.sol\":2722:2726  salt */\n      dup4\n        /* \"01_01_Forwarder.sol\":2716:2720  0x37 */\n      0x37\n        /* \"01_01_Forwarder.sol\":2709:2714  clone */\n      dup3\n        /* \"01_01_Forwarder.sol\":2706:2707  0 */\n      0x00\n        /* \"01_01_Forwarder.sol\":2698:2727  create2(0, clone, 0x37, salt) */\n      create2\n        /* \"01_01_Forwarder.sol\":2688:2727  result := create2(0, clone, 0x37, salt) */\n      swap6\n        /* \"01_01_Forwarder.sol\":1445:2733  {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e9227b0b1e1d637c0e2b264e9ecd757a6e185389034c390b3c52b9217205f4a064736f6c63430007050033\n}\n", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "608060405234801561001057600080fd5b506040516102963803806102968339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610231806100656000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b97a23191461003b578063fb90b3201461005f575b600080fd5b61004361008d565b604080516001600160a01b039092168252519081900360200190f35b61008b6004803603604081101561007557600080fd5b506001600160a01b03813516906020013561009c565b005b6000546001600160a01b031681565b604080516bffffffffffffffffffffffff19606085901b1660208083019190915260348083018590528351808403909101815260549092019092528051910120600080546100f3906001600160a01b0316836101a7565b9050806001600160a01b03166319ab453c856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561014457600080fd5b505af1158015610158573d6000803e3d6000fd5b5050604080516001600160a01b0380861682528816602082015281517fa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b52049450908190039091019150a150505050565b6000808360601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b6028820152836037826000f59594505050505056fea2646970667358221220e9227b0b1e1d637c0e2b264e9ecd757a6e185389034c390b3c52b9217205f4a064736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x296 CODESIZE SUB DUP1 PUSH2 0x296 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x231 DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB97A2319 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFB90B320 EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 DUP1 SLOAD PUSH2 0xF3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19AB453C DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x158 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0xA35EA2CC726861482A50A162C72AAD60965CC64641D419CD4D675036238B5204 SWAP5 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP2 POP LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP4 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0x22 PUSH28 0xB1E1D637C0E2B264E9ECD757A6E185389034C390B3C52B9217205F4 LOG0 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ", "sourceMap": "8668:672:0:-:0;;;8834:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8834:101:0;8884:21;:46;;-1:-1:-1;;;;;8884:46:0;;;-1:-1:-1;;;;;;8884:46:0;;;;;;;;;8668:672;;;;;;"}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063b97a23191461003b578063fb90b3201461005f575b600080fd5b61004361008d565b604080516001600160a01b039092168252519081900360200190f35b61008b6004803603604081101561007557600080fd5b506001600160a01b03813516906020013561009c565b005b6000546001600160a01b031681565b604080516bffffffffffffffffffffffff19606085901b1660208083019190915260348083018590528351808403909101815260549092019092528051910120600080546100f3906001600160a01b0316836101a7565b9050806001600160a01b03166319ab453c856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561014457600080fd5b505af1158015610158573d6000803e3d6000fd5b5050604080516001600160a01b0380861682528816602082015281517fa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b52049450908190039091019150a150505050565b6000808360601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b6028820152836037826000f59594505050505056fea2646970667358221220e9227b0b1e1d637c0e2b264e9ecd757a6e185389034c390b3c52b9217205f4a064736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB97A2319 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFB90B320 EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 DUP1 SLOAD PUSH2 0xF3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19AB453C DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x158 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0xA35EA2CC726861482A50A162C72AAD60965CC64641D419CD4D675036238B5204 SWAP5 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP2 POP LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP4 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0x22 PUSH28 0xB1E1D637C0E2B264E9ECD757A6E185389034C390B3C52B9217205F4 LOG0 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ", "sourceMap": "8668:672:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8714:36;;;:::i;:::-;;;;-1:-1:-1;;;;;8714:36:0;;;;;;;;;;;;;;8939:399;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8939:399:0;;;;;;;;:::i;:::-;;8714:36;;;-1:-1:-1;;;;;8714:36:0;;:::o;8939:399::-;9149:30;;;-1:-1:-1;;9149:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9139:41;;;;;9119:17;9223:21;;9211:45;;-1:-1:-1;;;;;9223:21:0;9139:41;9211:11;:45::i;:::-;9187:69;;9272:5;-1:-1:-1;;;;;9262:21:0;;9284:6;9262:29;;;;;;;;;;;;;-1:-1:-1;;;;;9262:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9302:31:0;;;-1:-1:-1;;;;;9302:31:0;;;;;;;;;;;;;;;-1:-1:-1;9302:31:0;;;;;;;;-1:-1:-1;9302:31:0;8939:399;;;;:::o;1284:1453::-;1361:22;1393:19;1423:6;1415:15;;1393:37;;1556:4;1550:11;-1:-1:-1;;;1897:5:0;1881:105;2157:11;2150:4;2143:5;2139:16;2132:37;-1:-1:-1;;;2381:4:0;2374:5;2370:16;2354:116;2722:4;2716;2709:5;2706:1;2698:29;2688:39;1445:1288;-1:-1:-1;;;;;1445:1288:0:o"}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newForwarderAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"}],\"name\":\"ForwarderCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_01_Forwarder.sol\":\"ForwarderFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"01_01_Forwarder.sol\":{\"keccak256\":\"0xaf60b3fc379b5ad5aba36ef87da9fff21dc5267278ff5034a334dead4eac4ed8\",\"urls\":[\"bzz-raw://664b9219eb4a1dc3ecd8a9928af0e443b81d590ed6266e16a59988fcafcbeb89\",\"dweb:/ipfs/QmYGBmgaTWkg3Qni1nYQZi5HBsfeXv5faABxzqQi1GxjGt\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "TransferHelper": {"abi": [], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"01_01_Forwarder.sol\":4367:5988  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"01_01_Forwarder.sol\":4367:5988  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201ead1461fee837aadbe14b2ec854293fefeec969544332537d099f8ff9431d8a64736f6c63430007050033\n}\n", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ead1461fee837aadbe14b2ec854293fefeec969544332537d099f8ff9431d8a64736f6c63430007050033", "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xAD EQ PUSH2 0xFEE8 CALLDATACOPY 0xAA 0xDB 0xE1 0x4B 0x2E 0xC8 SLOAD 0x29 EXTCODEHASH 0xEF 0xEE 0xC9 PUSH10 0x544332537D099F8FF943 SAR DUP11 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ", "sourceMap": "4367:1621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ead1461fee837aadbe14b2ec854293fefeec969544332537d099f8ff9431d8a64736f6c63430007050033", "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xAD EQ PUSH2 0xFEE8 CALLDATACOPY 0xAA 0xDB 0xE1 0x4B 0x2E 0xC8 SLOAD 0x29 EXTCODEHASH 0xEF 0xEE 0xC9 PUSH10 0x544332537D099F8FF943 SAR DUP11 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ", "sourceMap": "4367:1621:0:-:0;;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_01_Forwarder.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"01_01_Forwarder.sol\":{\"keccak256\":\"0xaf60b3fc379b5ad5aba36ef87da9fff21dc5267278ff5034a334dead4eac4ed8\",\"urls\":[\"bzz-raw://664b9219eb4a1dc3ecd8a9928af0e443b81d590ed6266e16a59988fcafcbeb89\",\"dweb:/ipfs/QmYGBmgaTWkg3Qni1nYQZi5HBsfeXv5faABxzqQi1GxjGt\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}}, "errors": [{"component": "general", "errorCode": "1878", "formattedMessage": "01_01_Forwarder.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n", "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.", "severity": "warning", "sourceLocation": {"end": -1, "file": "01_01_Forwarder.sol", "start": -1}, "type": "Warning"}], "sources": {"01_01_Forwarder.sol": {"id": 0}}}