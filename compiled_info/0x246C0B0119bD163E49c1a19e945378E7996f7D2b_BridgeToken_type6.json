{"contracts": {"BridgeToken.sol": {"Address": {"abi": [], "devdoc": {"details": "Collection of functions related to the address type", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"BridgeToken.sol\":3863:11609  library Address {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"BridgeToken.sol\":3863:11609  library Address {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206a4f62b9389ddc1f66085618439ede4d26a3303ca2f9150a7831f508e7a215e164736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212206a4f62b9389ddc1f66085618439ede4d26a3303ca2f9150a7831f508e7a215e164736f6c63430008180033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x4F62B9389DDC1F66085618 NUMBER SWAP15 0xDE 0x4D 0x26 LOG3 ADDRESS EXTCODECOPY LOG2 0xF9 ISZERO EXP PUSH25 0x31F508E7A215E164736F6C6343000818003300000000000000 ", "sourceMap": "3863:7746:0:-:0;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "5f80fdfea26469706673582212206a4f62b9389ddc1f66085618439ede4d26a3303ca2f9150a7831f508e7a215e164736f6c63430008180033", "opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x4F62B9389DDC1F66085618 NUMBER SWAP15 0xDE 0x4D 0x26 LOG3 ADDRESS EXTCODECOPY LOG2 0xF9 ISZERO EXP PUSH25 0x31F508E7A215E164736F6C6343000818003300000000000000 ", "sourceMap": "3863:7746:0:-:0;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BridgeToken.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"BridgeToken.sol\":{\"keccak256\":\"0xdb7f67d524a580fb7b6e5160f64bab80e7b45a18aa585b871fcab18bd7c68965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9067631158ff20982ce54b5f874f20ba205e17823e676f19a7b59fab79666e84\",\"dweb:/ipfs/QmZvZGr9SpASznPLeoX37jSntB4NvRxef2hJZVeA3efVe6\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "BeaconProxy": {"abi": [{"inputs": [{"internalType": "address", "name": "beacon", "type": "address"}, {"internalType": "bytes", "name": "data", "type": "bytes"}], "stateMutability": "payable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "previousAdmin", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newAdmin", "type": "address"}], "name": "AdminChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "beacon", "type": "address"}], "name": "BeaconUpgraded", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "implementation", "type": "address"}], "name": "Upgraded", "type": "event"}, {"stateMutability": "payable", "type": "fallback"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"details": "This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._", "events": {"AdminChanged(address,address)": {"details": "Emitted when the admin account has changed."}, "BeaconUpgraded(address)": {"details": "Emitted when the beacon is upgraded."}, "Upgraded(address)": {"details": "Emitted when the implementation is upgraded."}}, "kind": "dev", "methods": {"constructor": {"details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."}}, "version": 1}, "evm": {"assembly": "    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  mstore(0x40, 0x80)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  swap2\n  tag_15\n  dup3\n  tag_2\n  jump\t// in\ntag_15:\n  0x80\n  codecopy\n  0x40\n  dup2\n  0x80\n  add\n  swap2\n  slt\n  tag_25\n  jumpi\n  tag_18\n  tag_4\n  jump\t// in\ntag_18:\n  mload(0xa0)\n  swap2\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  tag_25\n  jumpi\n  dup2\n  0x9f\n  dup5\n  add\n  slt\n  iszero\n  tag_25\n  jumpi\n  dup3\n  0x80\n  add\n  mload\n  swap3\n  tag_23\n  dup5\n  tag_5\n  jump\t// in\ntag_23:\n  swap3\n  tag_24\n  mload(0x40)\n  swap5\n  dup6\n  tag_3\n  jump\t// in\ntag_24:\n  dup5\n  dup5\n  mstore\n  0xa0\n  dup6\n  dup4\n  add\n  add\n  gt\n  tag_25\n  jumpi\n  tag_27\n  swap4\n  tag_28\n  swap2\n  0xa0\n  0x20\n  dup7\n  add\n  swap2\n  add\n  tag_6\n  jump\t// in\ntag_28:\n  tag_7\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_25:\n  0x00\n  dup1\n  revert\ntag_1:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  0x80\n  0x1f\n  swap2\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_29\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_29:\n  tag_1\n  jump\t// in\ntag_3:\n  0x1f\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_29\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_4:\n  mload(0x80)\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_25\n  jumpi\n  jump\t// out\ntag_5:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_29\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\ntag_6:\n  0x00\ntag_37:\n  dup4\n  dup2\n  lt\n  tag_38\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  add\n  mstore\n  jump\t// out\ntag_38:\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_37)\n    /* \"BridgeToken.sol\":21588:21793  constructor(address beacon, bytes memory data) payable {... */\ntag_7:\n  swap1\n    /* \"BridgeToken.sol\":4740:4801  assembly {... */\n  dup2\n  extcodesize\n    /* \"BridgeToken.sol\":4817:4825  size > 0 */\n  iszero\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  tag_40\n  jumpi\n  mload(0x40)\n  shl(0xe0, 0x5c60da1b)\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  dup1\n  dup3\n  mstore\n  0x20\n  swap4\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  swap1\n  swap3\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap2\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  dup6\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  dup3\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  0x04\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  dup2\n  dup7\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  gas\n  staticcall\n  swap2\n  dup3\n  iszero\n  tag_52\n  jumpi\n    /* \"BridgeToken.sol\":19946:20004  StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon */\n  tag_44\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  swap3\n    /* \"BridgeToken.sol\":19786:19936  require(... */\n  tag_45\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  swap2\n  0x00\n  swap2\n  tag_46\n  jumpi\n    /* \"BridgeToken.sol\":21588:21793  constructor(address beacon, bytes memory data) payable {... */\ntag_47:\n    /* \"BridgeToken.sol\":4740:4801  assembly {... */\n  pop\n  extcodesize\n    /* \"BridgeToken.sol\":4817:4825  size > 0 */\n  iszero\n  iszero\n    /* \"BridgeToken.sol\":19786:19936  require(... */\n  tag_10\n  jump\t// in\ntag_45:\n    /* \"BridgeToken.sol\":19189:19255  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  jump\n    /* \"BridgeToken.sol\":19946:20004  StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon */\ntag_44:\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  mload(0x40)\n    /* \"BridgeToken.sol\":20486:20511  BeaconUpgraded(newBeacon) */\n  swap3\n  dup2\n  0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e\n  0x00\n  dup1\n  log2\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  dup3\n  mload\n    /* \"BridgeToken.sol\":20525:20540  data.length > 0 */\n  iszero\n  dup1\n  iszero\n    /* \"BridgeToken.sol\":20525:20553  data.length > 0 || forceCall */\n  swap1\n  tag_48\n  jumpi\n    /* \"BridgeToken.sol\":21588:21793  constructor(address beacon, bytes memory data) payable {... */\ntag_49:\n    /* \"BridgeToken.sol\":20521:20651  if (data.length > 0 || forceCall) {... */\n  tag_50\n  jumpi\n    /* \"BridgeToken.sol\":21588:21793  constructor(address beacon, bytes memory data) payable {... */\ntag_51:\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"BridgeToken.sol\":20521:20651  if (data.length > 0 || forceCall) {... */\ntag_50:\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  0x04\n    /* \"BridgeToken.sol\":20598:20633  IBeacon(newBeacon).implementation() */\n  dup5\n  dup7\n  swap4\n  dup2\n  swap4\n  dup3\n  mstore\n  gas\n  staticcall\n  swap2\n  dup3\n  iszero\n  tag_52\n  jumpi\n    /* \"BridgeToken.sol\":10038:10115  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_54\n    /* \"BridgeToken.sol\":20598:20633  IBeacon(newBeacon).implementation() */\n  swap4\n  0x00\n  swap4\n  tag_55\n  jumpi\n    /* \"BridgeToken.sol\":20521:20651  if (data.length > 0 || forceCall) {... */\ntag_56:\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  pop\n  pop\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"BridgeToken.sol\":10038:10115  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap2\n  tag_13\n  jump\t// in\ntag_54:\n  pop\n    /* \"BridgeToken.sol\":20521:20651  if (data.length > 0 || forceCall) {... */\n  0x00\n  dup1\n  dup1\n  dup1\n  dup1\n  jump(tag_51)\n    /* \"BridgeToken.sol\":20598:20633  IBeacon(newBeacon).implementation() */\ntag_55:\n  tag_58\n  swap3\n  swap4\n  pop\n  dup1\n  returndatasize\n  lt\n  tag_59\n  jumpi\ntag_60:\n  tag_61\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_61:\n  dup2\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_58:\n  swap1\n  0x00\n  dup1\n  jump(tag_56)\ntag_59:\n  pop\n  returndatasize\n  jump(tag_60)\ntag_52:\n  tag_9\n  jump\t// in\n    /* \"BridgeToken.sol\":20525:20553  data.length > 0 || forceCall */\ntag_48:\n  pop\n  0x00\n  jump(tag_49)\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\ntag_46:\n  tag_62\n  swap2\n  pop\n  dup9\n  returndatasize\n  dup11\n  gt\n  tag_59\n  jumpi\n  tag_61\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_62:\n  0x00\n  jump(tag_47)\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\ntag_40:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x25\n  0x24\n  dup3\n  add\n  mstore\n  0x455243313936373a206e657720626561636f6e206973206e6f74206120636f6e\n  0x44\n  dup3\n  add\n  mstore\n  shl(0xda, 0x1d1c9858dd)\n  0x64\n  dup3\n  add\n  mstore\n  0x84\n  swap1\n  revert\ntag_8:\n  swap1\n  dup2\n  0x20\n  swap2\n  sub\n  slt\n  tag_25\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  dup2\n  sub\n  tag_25\n  jumpi\n  swap1\n  jump\t// out\ntag_9:\n  mload(0x40)\n  returndatasize\n  0x00\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\ntag_10:\n  iszero\n  tag_70\n  jumpi\n  jump\t// out\ntag_70:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x30\n  0x24\n  dup3\n  add\n  mstore\n  0x455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069\n  0x44\n  dup3\n  add\n  mstore\n  shl(0x82, 0x1cc81b9bdd08184818dbdb9d1c9858dd)\n  0x64\n  dup3\n  add\n  mstore\n  0x84\n  swap1\n  revert\ntag_12:\n  mload(0x40)\n  swap1\n  0x60\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_29\n  jumpi\n  0x40\n  mstore\n  0x27\n  dup3\n  mstore\n  shl(0xca, 0x0819985a5b1959)\n  0x40\n  dup4\n  0x416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c\n  0x20\n  dup3\n  add\n  mstore\n  add\n  mstore\n  jump\t// out\n    /* \"BridgeToken.sol\":10308:10695  function functionDelegateCall(... */\ntag_13:\n  swap2\n  swap1\n    /* \"BridgeToken.sol\":4740:4801  assembly {... */\n  dup3\n  extcodesize\n    /* \"BridgeToken.sol\":4817:4825  size > 0 */\n  iszero\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  tag_74\n  jumpi\n  0x00\n    /* \"BridgeToken.sol\":10595:10620  target.delegatecall(data) */\n  dup2\n    /* \"BridgeToken.sol\":10637:10688  verifyCallResult(success, returndata, errorMessage) */\n  tag_76\n    /* \"BridgeToken.sol\":10595:10620  target.delegatecall(data) */\n  swap5\n  0x20\n  dup4\n  swap5\n  mload\n  swap3\n  add\n  swap1\n  gas\n  delegatecall\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  jumpi(tag_77, iszero(returndatasize))\n  returndatasize\n  swap1\n  tag_79\n  dup3\n  tag_5\n  jump\t// in\ntag_79:\n  swap2\n  tag_80\n  mload(0x40)\n  swap4\n  dup5\n  tag_3\n  jump\t// in\ntag_80:\n  dup3\n  mstore\n  returndatasize\n  0x00\n    /* \"BridgeToken.sol\":10595:10620  target.delegatecall(data) */\n  0x20\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  dup5\n  add\n  returndatacopy\n    /* \"BridgeToken.sol\":10637:10688  verifyCallResult(success, returndata, errorMessage) */\n  tag_14\n  jump\t// in\ntag_76:\n    /* \"BridgeToken.sol\":10308:10695  function functionDelegateCall(... */\n  swap1\n  jump\t// out\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\ntag_77:\n  0x60\n  swap1\n    /* \"BridgeToken.sol\":10637:10688  verifyCallResult(success, returndata, errorMessage) */\n  tag_14\n  jump\t// in\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\ntag_74:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x26\n  0x24\n  dup3\n  add\n  mstore\n  0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n  0x44\n  dup3\n  add\n  mstore\n  shl(0xd2, 0x1b9d1c9858dd)\n  0x64\n  dup3\n  add\n  mstore\n  0x84\n  swap1\n  revert\n    /* \"BridgeToken.sol\":10915:11607  function verifyCallResult(... */\ntag_14:\n  swap1\n  swap2\n  swap1\n    /* \"BridgeToken.sol\":11085:11601  if (success) {... */\n  iszero\n  tag_82\n  jumpi\n    /* \"BridgeToken.sol\":11112:11129  return returndata */\n  pop\n  swap1\n  jump\t// out\n    /* \"BridgeToken.sol\":11085:11601  if (success) {... */\ntag_82:\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  dup2\n  mload\n    /* \"BridgeToken.sol\":11230:11251  returndata.length > 0 */\n  iszero\n    /* \"BridgeToken.sol\":11230:11247  returndata.length */\n  tag_84\n  jumpi\n    /* \"BridgeToken.sol\":11364:11518  assembly {... */\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"BridgeToken.sol\":11226:11591  if (returndata.length > 0) {... */\ntag_84:\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  0x44\n  mload(0x40)\n  dup1\n  swap3\n  shl(0xe5, 0x461bcd)\n    /* \"BridgeToken.sol\":11556:11576  revert(errorMessage) */\n  dup3\n  mstore\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  0x20\n    /* \"BridgeToken.sol\":11556:11576  revert(errorMessage) */\n  0x04\n  dup4\n  add\n    /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  mstore\n  tag_86\n  dup2\n  mload\n  dup1\n  swap3\n  dup2\n  0x24\n  dup7\n  add\n  mstore\n  0x20\n  dup7\n  dup7\n  add\n  swap2\n  add\n  tag_6\n  jump\t// in\ntag_86:\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n    /* \"BridgeToken.sol\":11556:11576  revert(errorMessage) */\n  sub\n  add\n  swap1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      calldatasize\n        /* \"BridgeToken.sol\":3323:3386  receive() external payable virtual {... */\n      tag_1\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      jumpi\n        /* \"BridgeToken.sol\":19189:19255  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n      sload(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50)\n      shl(0xe0, 0x5c60da1b)\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      dup3\n      mstore\n      0x20\n      swap1\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      dup3\n      swap1\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      0x04\n      swap1\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_7\n      jumpi\n      0x00\n      swap2\n      tag_9\n      jumpi\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n    tag_10:\n        /* \"BridgeToken.sol\":2877:2894  _implementation() */\n      pop\n      tag_4\n      jump\t// in\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n    tag_9:\n      swap1\n      pop\n      0x20\n      jumpi(tag_11, gt(0x20, returndatasize))\n    tag_12:\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      0x1f\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      dup2\n      dup5\n      lt\n      or\n      tag_13\n      jumpi\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      tag_15\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      swap3\n      0x40\n      mstore\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      add\n      tag_2\n      jump\t// in\n    tag_15:\n      0x00\n      jump(tag_10)\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n    tag_13:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      0x41\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      0x04\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      mstore\n      revert(0x00, 0x24)\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n    tag_11:\n      pop\n      returndatasize\n      jump(tag_12)\n    tag_7:\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"BridgeToken.sol\":2792:2902  function _fallback() internal virtual {... */\n    tag_1:\n        /* \"BridgeToken.sol\":19189:19255  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n      sload(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50)\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      mload(0x40)\n      shl(0xe0, 0x5c60da1b)\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      dup2\n      mstore\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      swap1\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      0x20\n      swap1\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      dup3\n      swap1\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      0x04\n      swap1\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_7\n      jumpi\n      0x00\n      swap2\n      tag_18\n      jumpi\n        /* \"BridgeToken.sol\":2877:2894  _implementation() */\n      pop\n      tag_4\n      jump\t// in\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n    tag_18:\n      0x20\n      swap2\n      pop\n      returndatasize\n      dup3\n      gt\n      tag_20\n      jumpi\n    tag_21:\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      dup3\n      dup5\n      lt\n      or\n      tag_13\n      jumpi\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      tag_15\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      swap3\n      0x40\n      mstore\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      dup2\n      add\n      swap1\n      tag_3\n      jump\t// in\n    tag_20:\n      returndatasize\n      swap2\n      pop\n      jump(tag_21)\n        /* \"BridgeToken.sol\":21106:22712  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n    tag_2:\n      0x20\n      swap1\n      not(0x7f)\n      add\n      slt\n      tag_27\n      jumpi\n      mload(0x80)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_27\n      jumpi\n      swap1\n      jump\t// out\n    tag_27:\n      0x00\n      dup1\n      revert\n    tag_3:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_27\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_27\n      jumpi\n      swap1\n      jump\t// out\n        /* \"BridgeToken.sol\":1418:2313  function _delegate(address implementation) internal virtual {... */\n    tag_4:\n        /* \"BridgeToken.sol\":1488:2307  assembly {... */\n      0x00\n        /* \"BridgeToken.sol\":1418:2313  function _delegate(address implementation) internal virtual {... */\n      dup1\n      swap2\n        /* \"BridgeToken.sol\":1488:2307  assembly {... */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_33\n      jumpi\n      return(0x00, returndatasize)\n    tag_33:\n      revert(0x00, returndatasize)\n\n    auxdata: 0xa2646970667358221220704ce2f1af8b9c91236bd567a2bc8b1b5a2572daa01b350103f4ace4673b121964736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {"abi_decode_address_fromMemory": {"entryPoint": 260, "id": null, "parameterSlots": 0, "returnSlots": 1}, "abi_decode_tuple_address_fromMemory": {"entryPoint": 775, "id": null, "parameterSlots": 2, "returnSlots": 1}, "array_allocation_size_bytes": {"entryPoint": 282, "id": null, "parameterSlots": 1, "returnSlots": 1}, "constructor_BeaconProxy": {"entryPoint": 342, "id": 797, "parameterSlots": 2, "returnSlots": 0}, "copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {"entryPoint": 918, "id": null, "parameterSlots": 0, "returnSlots": 1}, "copy_memory_to_memory_with_cleanup": {"entryPoint": 309, "id": null, "parameterSlots": 3, "returnSlots": 0}, "finalize_allocation": {"entryPoint": 225, "id": null, "parameterSlots": 2, "returnSlots": 0}, "finalize_allocation_1843": {"entryPoint": 182, "id": null, "parameterSlots": 1, "returnSlots": 0}, "fun_functionDelegateCall": {"entryPoint": 1007, "id": 324, "parameterSlots": 3, "returnSlots": 1}, "fun_verifyCallResult": {"entryPoint": 1172, "id": 355, "parameterSlots": 3, "returnSlots": 1}, "panic_error_0x41": {"entryPoint": 162, "id": null, "parameterSlots": 0, "returnSlots": 0}, "require_helper_stringliteral_f95f": {"entryPoint": 817, "id": null, "parameterSlots": 1, "returnSlots": 0}, "revert_forward": {"entryPoint": 806, "id": null, "parameterSlots": 0, "returnSlots": 0}, "update_storage_value_offsett_address_to_address": {"entryPoint": null, "id": null, "parameterSlots": 1, "returnSlots": 0}}, "generatedSources": [], "linkReferences": {}, "object": "60806040526106e38038038091610015826100b6565b608039604081608001911261009e5761002c610104565b60a05191906001600160401b03831161009e5781609f8401121561009e578260800151926100598461011a565b9261006760405194856100e1565b84845260a0858301011161009e5761008f9361008a9160a0602086019101610135565b610156565b6040516101f490816104ef8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176100dc57604052565b6100a2565b601f909101601f19168101906001600160401b038211908210176100dc57604052565b608051906001600160a01b038216820361009e57565b6001600160401b0381116100dc57601f01601f191660200190565b5f5b8381106101465750505f910152565b8181015183820152602001610137565b90813b156102b457604051635c60da1b60e01b8082526020939092916001600160a01b038216918582600481865afa91821561028b576101e4926101a4915f91610297575b503b1515610331565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b03909216919091179055565b60405192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e5f80a2825115801590610290575b610224575b5050505050565b6004848693819382525afa91821561028b57610251935f9361025c575b505061024b610396565b916103ef565b505f8080808061021d565b61027c929350803d10610284575b61027481836100e1565b810190610307565b905f80610241565b503d61026a565b610326565b505f610218565b6102ae9150883d8a116102845761027481836100e1565b5f61019b565b60405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b9081602091031261009e57516001600160a01b038116810361009e5790565b6040513d5f823e3d90fd5b1561033857565b60405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b60405190606082016001600160401b038111838210176100dc5760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15610440575f816104359460208394519201905af43d15610438573d906104198261011a565b9161042760405193846100e1565b82523d5f602084013e610494565b90565b606090610494565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b909190156104a0575090565b8151156104b05750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526104e08151809281602486015260208686019101610135565b601f01601f19168101030190fdfe608080604052366100c3577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b8575f9161005f575b506101a1565b905060203d6020116100b1575b601f8101601f191682019167ffffffffffffffff83118184101761009d57610097926040520161015c565b5f610059565b634e487b7160e01b5f52604160045260245ffd5b503d61006c565b6040513d5f823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b8575f9161011b57506101a1565b602091503d8211610154575b601f8201601f191681019167ffffffffffffffff83118284101761009d5761009792604052810190610182565b3d9150610127565b602090607f19011261017e576080516001600160a01b038116810361017e5790565b5f80fd5b9081602091031261017e57516001600160a01b038116810361017e5790565b5f8091368280378136915af43d5f803e156101ba573d5ff35b3d5ffdfea2646970667358221220704ce2f1af8b9c91236bd567a2bc8b1b5a2572daa01b350103f4ace4673b121964736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x6E3 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x15 DUP3 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x80 CODECOPY PUSH1 0x40 DUP2 PUSH1 0x80 ADD SWAP2 SLT PUSH2 0x9E JUMPI PUSH2 0x2C PUSH2 0x104 JUMP JUMPDEST PUSH1 0xA0 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x9E JUMPI DUP2 PUSH1 0x9F DUP5 ADD SLT ISZERO PUSH2 0x9E JUMPI DUP3 PUSH1 0x80 ADD MLOAD SWAP3 PUSH2 0x59 DUP5 PUSH2 0x11A JUMP JUMPDEST SWAP3 PUSH2 0x67 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xE1 JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH1 0xA0 DUP6 DUP4 ADD ADD GT PUSH2 0x9E JUMPI PUSH2 0x8F SWAP4 PUSH2 0x8A SWAP2 PUSH1 0xA0 PUSH1 0x20 DUP7 ADD SWAP2 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP1 DUP2 PUSH2 0x4EF DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xDC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xDC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x9E JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xDC JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x146 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP6 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x28B JUMPI PUSH2 0x1E4 SWAP3 PUSH2 0x1A4 SWAP2 PUSH0 SWAP2 PUSH2 0x297 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x331 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP2 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x290 JUMPI JUMPDEST PUSH2 0x224 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP5 DUP7 SWAP4 DUP2 SWAP4 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x28B JUMPI PUSH2 0x251 SWAP4 PUSH0 SWAP4 PUSH2 0x25C JUMPI JUMPDEST POP POP PUSH2 0x24B PUSH2 0x396 JUMP JUMPDEST SWAP2 PUSH2 0x3EF JUMP JUMPDEST POP PUSH0 DUP1 DUP1 DUP1 DUP1 PUSH2 0x21D JUMP JUMPDEST PUSH2 0x27C SWAP3 SWAP4 POP DUP1 RETURNDATASIZE LT PUSH2 0x284 JUMPI JUMPDEST PUSH2 0x274 DUP2 DUP4 PUSH2 0xE1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x307 JUMP JUMPDEST SWAP1 PUSH0 DUP1 PUSH2 0x241 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x26A JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST POP PUSH0 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x2AE SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x284 JUMPI PUSH2 0x274 DUP2 DUP4 PUSH2 0xE1 JUMP JUMPDEST PUSH0 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x9E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x9E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x338 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0xDC JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x440 JUMPI PUSH0 DUP2 PUSH2 0x435 SWAP5 PUSH1 0x20 DUP4 SWAP5 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x438 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x419 DUP3 PUSH2 0x11A JUMP JUMPDEST SWAP2 PUSH2 0x427 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xE1 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x494 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x4A0 JUMPI POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x4B0 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x4E0 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x135 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xC3 JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB8 JUMPI PUSH0 SWAP2 PUSH2 0x5F JUMPI JUMPDEST POP PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x9D JUMPI PUSH2 0x97 SWAP3 PUSH1 0x40 MSTORE ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 PUSH2 0x59 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB8 JUMPI PUSH0 SWAP2 PUSH2 0x11B JUMPI POP PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x20 SWAP2 POP RETURNDATASIZE DUP3 GT PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0x9D JUMPI PUSH2 0x97 SWAP3 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x182 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x17E JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x17E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x17E JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 SWAP2 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0x1BA JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x4CE2F1AF8B9C91236BD567A2BC8B1B5A25 PUSH19 0xDAA01B350103F4ACE4673B121964736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "21106:1606:0:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;21106:1606:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;-1:-1:-1;21106:1606:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21106:1606:0;;;;-1:-1:-1;;;;;21106:1606:0;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;-1:-1:-1;;21106:1606:0;;;;-1:-1:-1;;;;;21106:1606:0;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;21106:1606:0;;;;;;:::o;:::-;-1:-1:-1;;;;;21106:1606:0;;;;;;-1:-1:-1;;21106:1606:0;;;;:::o;:::-;;;;;;;;-1:-1:-1;;21106:1606:0;;;;:::o;:::-;;;;;;;;;;;;;21588:205;;4740:61;;4817:8;21106:1606;;;;-1:-1:-1;;;19826:35:0;;;;;21106:1606;;;-1:-1:-1;;;;;21106:1606:0;;;19826:35;21106:1606;19826:35;21106:1606;;19826:35;;;;;;;19946:58;19826:35;19786:150;19826:35;-1:-1:-1;19826:35:0;;;21588:205;4740:61;;4817:8;;19786:150;:::i;:::-;19189:66;21106:1606;;-1:-1:-1;;;;;;21106:1606:0;-1:-1:-1;;;;;21106:1606:0;;;;;;;;;;19946:58;21106:1606;;20486:25;;;-1:-1:-1;20486:25:0;;21106:1606;;20525:15;;;:28;;;21588:205;20521:130;;21588:205;;;;;;:::o;20521:130::-;19826:35;20598;;;;;;;;;;;;;;10038:77;20598:35;-1:-1:-1;20598:35:0;;;20521:130;21106:1606;;;;:::i;:::-;10038:77;;:::i;:::-;;20521:130;;;;;;;20598:35;;;;;;;-1:-1:-1;20598:35:0;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;20525:28::-;;-1:-1:-1;20525:28:0;;19826:35;;;;;;;;;;;;;;:::i;:::-;;;;21106:1606;;;-1:-1:-1;;;21106:1606:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;21106:1606:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21106:1606:0;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;21106:1606:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;21106:1606:0;;;;;;;;;;;;;;-1:-1:-1;;;;;21106:1606:0;;;;;;;;;;;;;-1:-1:-1;;;21106:1606:0;;;;;;;;;:::o;10308:387::-;;;4740:61;;4817:8;21106:1606;;-1:-1:-1;10595:25:0;10637:51;10595:25;;;;;;;;;;21106:1606;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;10595:25:0;21106:1606;;;10637:51;:::i;:::-;10308:387;:::o;21106:1606::-;;;10637:51;:::i;21106:1606::-;;;-1:-1:-1;;;21106:1606:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;21106:1606:0;;;;;;;10915:692;;;;11085:516;;;11112:17;;:::o;11085:516::-;21106:1606;;11230:21;:17;;11364:154;;;;;;;11226:365;21106:1606;;;;;;;;11556:20;;21106:1606;11556:20;;;21106:1606;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;21106:1606:0;;;11556:20;;;"}, "deployedBytecode": {"functionDebugData": {"abi_decode_address_fromMemory": {"entryPoint": 386, "id": null, "parameterSlots": 2, "returnSlots": 1}, "abi_decode_address_fromMemory_676": {"entryPoint": 348, "id": null, "parameterSlots": 1, "returnSlots": 1}, "fun_delegate": {"entryPoint": 417, "id": 19, "parameterSlots": 1, "returnSlots": 0}, "fun_fallback": {"entryPoint": 195, "id": 38, "parameterSlots": 0, "returnSlots": 0}}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608080604052366100c3577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b8575f9161005f575b506101a1565b905060203d6020116100b1575b601f8101601f191682019167ffffffffffffffff83118184101761009d57610097926040520161015c565b5f610059565b634e487b7160e01b5f52604160045260245ffd5b503d61006c565b6040513d5f823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b8575f9161011b57506101a1565b602091503d8211610154575b601f8201601f191681019167ffffffffffffffff83118284101761009d5761009792604052810190610182565b3d9150610127565b602090607f19011261017e576080516001600160a01b038116810361017e5790565b5f80fd5b9081602091031261017e57516001600160a01b038116810361017e5790565b5f8091368280378136915af43d5f803e156101ba573d5ff35b3d5ffdfea2646970667358221220704ce2f1af8b9c91236bd567a2bc8b1b5a2572daa01b350103f4ace4673b121964736f6c63430008180033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xC3 JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB8 JUMPI PUSH0 SWAP2 PUSH2 0x5F JUMPI JUMPDEST POP PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x9D JUMPI PUSH2 0x97 SWAP3 PUSH1 0x40 MSTORE ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 PUSH2 0x59 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB8 JUMPI PUSH0 SWAP2 PUSH2 0x11B JUMPI POP PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x20 SWAP2 POP RETURNDATASIZE DUP3 GT PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0x9D JUMPI PUSH2 0x97 SWAP3 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x182 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x17E JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x17E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x17E JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 SWAP2 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0x1BA JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x4CE2F1AF8B9C91236BD567A2BC8B1B5A25 PUSH19 0xDAA01B350103F4ACE4673B121964736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "21106:1606:0:-:0;;;;;3323:63;21106:1606;19189:66;;-1:-1:-1;;;22154:38:0;;;;21106:1606;;22154:38;;21106:1606;;-1:-1:-1;;;;;21106:1606:0;22154:38;;;;;;;-1:-1:-1;22154:38:0;;;21106:1606;2877:17;;:::i;22154:38::-;;;;;;;;;;21106:1606;;;-1:-1:-1;;21106:1606:0;;;;;;;;;;;;;22154:38;21106:1606;;;22154:38;;:::i;:::-;;;;21106:1606;;;;-1:-1:-1;21106:1606:0;;22154:38;21106:1606;;-1:-1:-1;21106:1606:0;22154:38;;;;;;21106:1606;;;-1:-1:-1;21106:1606:0;;;;;2792:110;19189:66;;21106:1606;;-1:-1:-1;;;22154:38:0;;21106:1606;22154:38;;21106:1606;;22154:38;;21106:1606;;-1:-1:-1;;;;;21106:1606:0;22154:38;;;;;;;-1:-1:-1;22154:38:0;;;2877:17;;:::i;22154:38::-;;;-1:-1:-1;22154:38:0;;;;;;21106:1606;;;-1:-1:-1;;21106:1606:0;;;;;;;;;;;;;22154:38;21106:1606;;;22154:38;;;;:::i;:::-;;;-1:-1:-1;22154:38:0;;21106:1606;;;;;;;;;;;-1:-1:-1;;;;;21106:1606:0;;;;;;;:::o;:::-;-1:-1:-1;21106:1606:0;;;;;;;;;;;;-1:-1:-1;;;;;21106:1606:0;;;;;;;:::o;1418:895::-;1488:819;1418:895;;1488:819;;;;;;;;;;;;;;;;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BridgeToken.sol\":\"BeaconProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"BridgeToken.sol\":{\"keccak256\":\"0xdb7f67d524a580fb7b6e5160f64bab80e7b45a18aa585b871fcab18bd7c68965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9067631158ff20982ce54b5f874f20ba205e17823e676f19a7b59fab79666e84\",\"dweb:/ipfs/QmZvZGr9SpASznPLeoX37jSntB4NvRxef2hJZVeA3efVe6\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "BridgeToken": {"abi": [{"inputs": [{"internalType": "address", "name": "beacon", "type": "address"}, {"internalType": "bytes", "name": "data", "type": "bytes"}], "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "previousAdmin", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newAdmin", "type": "address"}], "name": "AdminChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "beacon", "type": "address"}], "name": "BeaconUpgraded", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "implementation", "type": "address"}], "name": "Upgraded", "type": "event"}, {"stateMutability": "payable", "type": "fallback"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"events": {"AdminChanged(address,address)": {"details": "Emitted when the admin account has changed."}, "BeaconUpgraded(address)": {"details": "Emitted when the beacon is upgraded."}, "Upgraded(address)": {"details": "Emitted when the implementation is upgraded."}}, "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_27, callvalue)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  swap2\n  tag_17\n  dup3\n  tag_2\n  jump\t// in\ntag_17:\n  0x80\n  codecopy\n  0x40\n  dup2\n  0x80\n  add\n  swap2\n  slt\n  tag_27\n  jumpi\n  tag_20\n  tag_4\n  jump\t// in\ntag_20:\n  mload(0xa0)\n  swap2\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  tag_27\n  jumpi\n  dup2\n  0x9f\n  dup5\n  add\n  slt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  0x80\n  add\n  mload\n  swap3\n  tag_25\n  dup5\n  tag_5\n  jump\t// in\ntag_25:\n  swap3\n  tag_26\n  mload(0x40)\n  swap5\n  dup6\n  tag_3\n  jump\t// in\ntag_26:\n  dup5\n  dup5\n  mstore\n  0xa0\n  dup6\n  dup4\n  add\n  add\n  gt\n  tag_27\n  jumpi\n    /* \"BridgeToken.sol\":22850:22931  constructor(address beacon, bytes memory data) BeaconProxy(beacon, data) {... */\n  tag_29\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  swap4\n  tag_30\n  swap2\n  0xa0\n  0x20\n  dup7\n  add\n  swap2\n  add\n  tag_6\n  jump\t// in\ntag_30:\n    /* \"BridgeToken.sol\":22850:22931  constructor(address beacon, bytes memory data) BeaconProxy(beacon, data) {... */\n  tag_7\n  jump\t// in\ntag_29:\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_27:\n  0x00\n  dup1\n  revert\ntag_1:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  0x80\n  0x1f\n  swap2\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_31\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_31:\n  tag_1\n  jump\t// in\ntag_3:\n  0x1f\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_31\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_4:\n  mload(0x80)\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_27\n  jumpi\n  jump\t// out\ntag_5:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_31\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\ntag_6:\n  0x00\ntag_39:\n  dup4\n  dup2\n  lt\n  tag_40\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  add\n  mstore\n  jump\t// out\ntag_40:\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_39)\n    /* \"BridgeToken.sol\":21588:21793  constructor(address beacon, bytes memory data) payable {... */\ntag_7:\n  swap1\n    /* \"BridgeToken.sol\":4740:4801  assembly {... */\n  dup2\n  extcodesize\n    /* \"BridgeToken.sol\":4817:4825  size > 0 */\n  iszero\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  tag_42\n  jumpi\n  mload(0x40)\n  shl(0xe0, 0x5c60da1b)\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  dup1\n  dup3\n  mstore\n  0x20\n  swap4\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  swap1\n  swap3\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap2\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  dup6\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  dup3\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  0x04\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  dup2\n  dup7\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  gas\n  staticcall\n  swap2\n  dup3\n  iszero\n  tag_54\n  jumpi\n    /* \"BridgeToken.sol\":19946:20004  StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon */\n  tag_46\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  swap3\n    /* \"BridgeToken.sol\":19786:19936  require(... */\n  tag_47\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  swap2\n  0x00\n  swap2\n  tag_48\n  jumpi\n    /* \"BridgeToken.sol\":21588:21793  constructor(address beacon, bytes memory data) payable {... */\ntag_49:\n    /* \"BridgeToken.sol\":4740:4801  assembly {... */\n  pop\n  extcodesize\n    /* \"BridgeToken.sol\":4817:4825  size > 0 */\n  iszero\n  iszero\n    /* \"BridgeToken.sol\":19786:19936  require(... */\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"BridgeToken.sol\":19189:19255  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  jump\n    /* \"BridgeToken.sol\":19946:20004  StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon */\ntag_46:\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  mload(0x40)\n    /* \"BridgeToken.sol\":20486:20511  BeaconUpgraded(newBeacon) */\n  swap3\n  dup2\n  0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e\n  0x00\n  dup1\n  log2\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  dup3\n  mload\n    /* \"BridgeToken.sol\":20525:20540  data.length > 0 */\n  iszero\n  dup1\n  iszero\n    /* \"BridgeToken.sol\":20525:20553  data.length > 0 || forceCall */\n  swap1\n  tag_50\n  jumpi\n    /* \"BridgeToken.sol\":21588:21793  constructor(address beacon, bytes memory data) payable {... */\ntag_51:\n    /* \"BridgeToken.sol\":20521:20651  if (data.length > 0 || forceCall) {... */\n  tag_52\n  jumpi\n    /* \"BridgeToken.sol\":21588:21793  constructor(address beacon, bytes memory data) payable {... */\ntag_53:\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"BridgeToken.sol\":20521:20651  if (data.length > 0 || forceCall) {... */\ntag_52:\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\n  0x04\n    /* \"BridgeToken.sol\":20598:20633  IBeacon(newBeacon).implementation() */\n  dup5\n  dup7\n  swap4\n  dup2\n  swap4\n  dup3\n  mstore\n  gas\n  staticcall\n  swap2\n  dup3\n  iszero\n  tag_54\n  jumpi\n    /* \"BridgeToken.sol\":10038:10115  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_56\n    /* \"BridgeToken.sol\":20598:20633  IBeacon(newBeacon).implementation() */\n  swap4\n  0x00\n  swap4\n  tag_57\n  jumpi\n    /* \"BridgeToken.sol\":20521:20651  if (data.length > 0 || forceCall) {... */\ntag_58:\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  pop\n  pop\n  tag_59\n  tag_12\n  jump\t// in\ntag_59:\n    /* \"BridgeToken.sol\":10038:10115  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap2\n  tag_13\n  jump\t// in\ntag_56:\n  pop\n    /* \"BridgeToken.sol\":20521:20651  if (data.length > 0 || forceCall) {... */\n  0x00\n  dup1\n  dup1\n  dup1\n  dup1\n  jump(tag_53)\n    /* \"BridgeToken.sol\":20598:20633  IBeacon(newBeacon).implementation() */\ntag_57:\n  tag_60\n  swap3\n  swap4\n  pop\n  dup1\n  returndatasize\n  lt\n  tag_61\n  jumpi\ntag_62:\n  tag_63\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_63:\n  dup2\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_60:\n  swap1\n  0x00\n  dup1\n  jump(tag_58)\ntag_61:\n  pop\n  returndatasize\n  jump(tag_62)\ntag_54:\n  tag_9\n  jump\t// in\n    /* \"BridgeToken.sol\":20525:20553  data.length > 0 || forceCall */\ntag_50:\n  pop\n  0x00\n  jump(tag_51)\n    /* \"BridgeToken.sol\":19826:19861  IBeacon(newBeacon).implementation() */\ntag_48:\n  tag_64\n  swap2\n  pop\n  dup9\n  returndatasize\n  dup11\n  gt\n  tag_61\n  jumpi\n  tag_63\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_64:\n  0x00\n  jump(tag_49)\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\ntag_42:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x25\n  0x24\n  dup3\n  add\n  mstore\n  0x455243313936373a206e657720626561636f6e206973206e6f74206120636f6e\n  0x44\n  dup3\n  add\n  mstore\n  shl(0xda, 0x1d1c9858dd)\n  0x64\n  dup3\n  add\n  mstore\n  0x84\n  swap1\n  revert\ntag_8:\n  swap1\n  dup2\n  0x20\n  swap2\n  sub\n  slt\n  tag_27\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  dup2\n  sub\n  tag_27\n  jumpi\n  swap1\n  jump\t// out\ntag_9:\n  mload(0x40)\n  returndatasize\n  0x00\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\ntag_10:\n  iszero\n  tag_72\n  jumpi\n  jump\t// out\ntag_72:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x30\n  0x24\n  dup3\n  add\n  mstore\n  0x455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069\n  0x44\n  dup3\n  add\n  mstore\n  shl(0x82, 0x1cc81b9bdd08184818dbdb9d1c9858dd)\n  0x64\n  dup3\n  add\n  mstore\n  0x84\n  swap1\n  revert\ntag_12:\n  mload(0x40)\n  swap1\n  0x60\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_31\n  jumpi\n  0x40\n  mstore\n  0x27\n  dup3\n  mstore\n  shl(0xca, 0x0819985a5b1959)\n  0x40\n  dup4\n  0x416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c\n  0x20\n  dup3\n  add\n  mstore\n  add\n  mstore\n  jump\t// out\n    /* \"BridgeToken.sol\":10308:10695  function functionDelegateCall(... */\ntag_13:\n  swap2\n  swap1\n    /* \"BridgeToken.sol\":4740:4801  assembly {... */\n  dup3\n  extcodesize\n    /* \"BridgeToken.sol\":4817:4825  size > 0 */\n  iszero\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  tag_76\n  jumpi\n  0x00\n    /* \"BridgeToken.sol\":10595:10620  target.delegatecall(data) */\n  dup2\n    /* \"BridgeToken.sol\":10637:10688  verifyCallResult(success, returndata, errorMessage) */\n  tag_78\n    /* \"BridgeToken.sol\":10595:10620  target.delegatecall(data) */\n  swap5\n  0x20\n  dup4\n  swap5\n  mload\n  swap3\n  add\n  swap1\n  gas\n  delegatecall\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  jumpi(tag_79, iszero(returndatasize))\n  returndatasize\n  swap1\n  tag_81\n  dup3\n  tag_5\n  jump\t// in\ntag_81:\n  swap2\n  tag_82\n  mload(0x40)\n  swap4\n  dup5\n  tag_3\n  jump\t// in\ntag_82:\n  dup3\n  mstore\n  returndatasize\n  0x00\n    /* \"BridgeToken.sol\":10595:10620  target.delegatecall(data) */\n  0x20\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  dup5\n  add\n  returndatacopy\n    /* \"BridgeToken.sol\":10637:10688  verifyCallResult(success, returndata, errorMessage) */\n  tag_14\n  jump\t// in\ntag_78:\n    /* \"BridgeToken.sol\":10308:10695  function functionDelegateCall(... */\n  swap1\n  jump\t// out\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\ntag_79:\n  0x60\n  swap1\n    /* \"BridgeToken.sol\":10637:10688  verifyCallResult(success, returndata, errorMessage) */\n  tag_14\n  jump\t// in\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\ntag_76:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x26\n  0x24\n  dup3\n  add\n  mstore\n  0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n  0x44\n  dup3\n  add\n  mstore\n  shl(0xd2, 0x1b9d1c9858dd)\n  0x64\n  dup3\n  add\n  mstore\n  0x84\n  swap1\n  revert\n    /* \"BridgeToken.sol\":10915:11607  function verifyCallResult(... */\ntag_14:\n  swap1\n  swap2\n  swap1\n    /* \"BridgeToken.sol\":11085:11601  if (success) {... */\n  iszero\n  tag_84\n  jumpi\n    /* \"BridgeToken.sol\":11112:11129  return returndata */\n  pop\n  swap1\n  jump\t// out\n    /* \"BridgeToken.sol\":11085:11601  if (success) {... */\ntag_84:\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  dup2\n  mload\n    /* \"BridgeToken.sol\":11230:11251  returndata.length > 0 */\n  iszero\n    /* \"BridgeToken.sol\":11230:11247  returndata.length */\n  tag_86\n  jumpi\n    /* \"BridgeToken.sol\":11364:11518  assembly {... */\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"BridgeToken.sol\":11226:11591  if (returndata.length > 0) {... */\ntag_86:\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  0x44\n  mload(0x40)\n  dup1\n  swap3\n  shl(0xe5, 0x461bcd)\n    /* \"BridgeToken.sol\":11556:11576  revert(errorMessage) */\n  dup3\n  mstore\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  0x20\n    /* \"BridgeToken.sol\":11556:11576  revert(errorMessage) */\n  0x04\n  dup4\n  add\n    /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n  mstore\n  tag_88\n  dup2\n  mload\n  dup1\n  swap3\n  dup2\n  0x24\n  dup7\n  add\n  mstore\n  0x20\n  dup7\n  dup7\n  add\n  swap2\n  add\n  tag_6\n  jump\t// in\ntag_88:\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n    /* \"BridgeToken.sol\":11556:11576  revert(errorMessage) */\n  sub\n  add\n  swap1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      calldatasize\n        /* \"BridgeToken.sol\":3323:3386  receive() external payable virtual {... */\n      tag_1\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      jumpi\n        /* \"BridgeToken.sol\":19189:19255  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n      sload(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50)\n      shl(0xe0, 0x5c60da1b)\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      dup3\n      mstore\n      0x20\n      swap1\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      dup3\n      swap1\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      0x04\n      swap1\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_7\n      jumpi\n      0x00\n      swap2\n      tag_9\n      jumpi\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n    tag_10:\n        /* \"BridgeToken.sol\":2877:2894  _implementation() */\n      pop\n      tag_4\n      jump\t// in\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n    tag_9:\n      swap1\n      pop\n      0x20\n      jumpi(tag_11, gt(0x20, returndatasize))\n    tag_12:\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      0x1f\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      dup2\n      dup5\n      lt\n      or\n      tag_13\n      jumpi\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      tag_15\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      swap3\n      0x40\n      mstore\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      add\n      tag_2\n      jump\t// in\n    tag_15:\n      0x00\n      jump(tag_10)\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n    tag_13:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      0x41\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      0x04\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      mstore\n      revert(0x00, 0x24)\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n    tag_11:\n      pop\n      returndatasize\n      jump(tag_12)\n    tag_7:\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"BridgeToken.sol\":2792:2902  function _fallback() internal virtual {... */\n    tag_1:\n        /* \"BridgeToken.sol\":19189:19255  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n      sload(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50)\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      mload(0x40)\n      shl(0xe0, 0x5c60da1b)\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      dup2\n      mstore\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      swap1\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      0x20\n      swap1\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      dup3\n      swap1\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      0x04\n      swap1\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_7\n      jumpi\n      0x00\n      swap2\n      tag_18\n      jumpi\n        /* \"BridgeToken.sol\":2877:2894  _implementation() */\n      pop\n      tag_4\n      jump\t// in\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n    tag_18:\n      0x20\n      swap2\n      pop\n      returndatasize\n      dup3\n      gt\n      tag_20\n      jumpi\n    tag_21:\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      dup3\n      dup5\n      lt\n      or\n      tag_13\n      jumpi\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      tag_15\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n      swap3\n      0x40\n      mstore\n        /* \"BridgeToken.sol\":22154:22192  IBeacon(_getBeacon()).implementation() */\n      dup2\n      add\n      swap1\n      tag_3\n      jump\t// in\n    tag_20:\n      returndatasize\n      swap2\n      pop\n      jump(tag_21)\n        /* \"BridgeToken.sol\":22808:22933  contract BridgeToken is BeaconProxy {... */\n    tag_2:\n      0x20\n      swap1\n      not(0x7f)\n      add\n      slt\n      tag_27\n      jumpi\n      mload(0x80)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_27\n      jumpi\n      swap1\n      jump\t// out\n    tag_27:\n      0x00\n      dup1\n      revert\n    tag_3:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_27\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_27\n      jumpi\n      swap1\n      jump\t// out\n        /* \"BridgeToken.sol\":1418:2313  function _delegate(address implementation) internal virtual {... */\n    tag_4:\n        /* \"BridgeToken.sol\":1488:2307  assembly {... */\n      0x00\n        /* \"BridgeToken.sol\":1418:2313  function _delegate(address implementation) internal virtual {... */\n      dup1\n      swap2\n        /* \"BridgeToken.sol\":1488:2307  assembly {... */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_33\n      jumpi\n      return(0x00, returndatasize)\n    tag_33:\n      revert(0x00, returndatasize)\n\n    auxdata: 0xa2646970667358221220fee0d915e293a4414328221347112e185542f82bf16afc31bce3fd5bc873a57b64736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {"abi_decode_address_fromMemory": {"entryPoint": 265, "id": null, "parameterSlots": 0, "returnSlots": 1}, "abi_decode_tuple_address_fromMemory": {"entryPoint": 780, "id": null, "parameterSlots": 2, "returnSlots": 1}, "array_allocation_size_bytes": {"entryPoint": 287, "id": null, "parameterSlots": 1, "returnSlots": 1}, "constructor_BeaconProxy": {"entryPoint": 347, "id": 797, "parameterSlots": 2, "returnSlots": 0}, "copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {"entryPoint": 923, "id": null, "parameterSlots": 0, "returnSlots": 1}, "copy_memory_to_memory_with_cleanup": {"entryPoint": 314, "id": null, "parameterSlots": 3, "returnSlots": 0}, "finalize_allocation": {"entryPoint": 230, "id": null, "parameterSlots": 2, "returnSlots": 0}, "finalize_allocation_2069": {"entryPoint": 187, "id": null, "parameterSlots": 1, "returnSlots": 0}, "fun_functionDelegateCall": {"entryPoint": 1012, "id": 324, "parameterSlots": 3, "returnSlots": 1}, "fun_verifyCallResult": {"entryPoint": 1177, "id": 355, "parameterSlots": 3, "returnSlots": 1}, "panic_error_0x41": {"entryPoint": 167, "id": null, "parameterSlots": 0, "returnSlots": 0}, "require_helper_stringliteral_f95f": {"entryPoint": 822, "id": null, "parameterSlots": 1, "returnSlots": 0}, "revert_forward": {"entryPoint": 811, "id": null, "parameterSlots": 0, "returnSlots": 0}, "update_storage_value_offsett_address_to_address": {"entryPoint": null, "id": null, "parameterSlots": 1, "returnSlots": 0}}, "generatedSources": [], "linkReferences": {}, "object": "6080604052346100a3576106e8803803809161001a826100bb565b60803960408160800191126100a357610031610109565b60a05191906001600160401b0383116100a35781609f840112156100a35782608001519261005e8461011f565b9261006c60405194856100e6565b84845260a085830101116100a3576100949361008f9160a060208601910161013a565b61015b565b6040516101f490816104f48239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176100e157604052565b6100a7565b601f909101601f19168101906001600160401b038211908210176100e157604052565b608051906001600160a01b03821682036100a357565b6001600160401b0381116100e157601f01601f191660200190565b5f5b83811061014b5750505f910152565b818101518382015260200161013c565b90813b156102b957604051635c60da1b60e01b8082526020939092916001600160a01b038216918582600481865afa918215610290576101e9926101a9915f9161029c575b503b1515610336565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b03909216919091179055565b60405192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e5f80a2825115801590610295575b610229575b5050505050565b6004848693819382525afa91821561029057610256935f93610261575b505061025061039b565b916103f4565b505f80808080610222565b610281929350803d10610289575b61027981836100e6565b81019061030c565b905f80610246565b503d61026f565b61032b565b505f61021d565b6102b39150883d8a116102895761027981836100e6565b5f6101a0565b60405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b908160209103126100a357516001600160a01b03811681036100a35790565b6040513d5f823e3d90fd5b1561033d57565b60405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b60405190606082016001600160401b038111838210176100e15760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15610445575f8161043a9460208394519201905af43d1561043d573d9061041e8261011f565b9161042c60405193846100e6565b82523d5f602084013e610499565b90565b606090610499565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b909190156104a5575090565b8151156104b55750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526104e5815180928160248601526020868601910161013a565b601f01601f19168101030190fdfe608080604052366100c3577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b8575f9161005f575b506101a1565b905060203d6020116100b1575b601f8101601f191682019167ffffffffffffffff83118184101761009d57610097926040520161015c565b5f610059565b634e487b7160e01b5f52604160045260245ffd5b503d61006c565b6040513d5f823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b8575f9161011b57506101a1565b602091503d8211610154575b601f8201601f191681019167ffffffffffffffff83118284101761009d5761009792604052810190610182565b3d9150610127565b602090607f19011261017e576080516001600160a01b038116810361017e5790565b5f80fd5b9081602091031261017e57516001600160a01b038116810361017e5790565b5f8091368280378136915af43d5f803e156101ba573d5ff35b3d5ffdfea2646970667358221220fee0d915e293a4414328221347112e185542f82bf16afc31bce3fd5bc873a57b64736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xA3 JUMPI PUSH2 0x6E8 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1A DUP3 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x80 CODECOPY PUSH1 0x40 DUP2 PUSH1 0x80 ADD SWAP2 SLT PUSH2 0xA3 JUMPI PUSH2 0x31 PUSH2 0x109 JUMP JUMPDEST PUSH1 0xA0 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xA3 JUMPI DUP2 PUSH1 0x9F DUP5 ADD SLT ISZERO PUSH2 0xA3 JUMPI DUP3 PUSH1 0x80 ADD MLOAD SWAP3 PUSH2 0x5E DUP5 PUSH2 0x11F JUMP JUMPDEST SWAP3 PUSH2 0x6C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xE6 JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH1 0xA0 DUP6 DUP4 ADD ADD GT PUSH2 0xA3 JUMPI PUSH2 0x94 SWAP4 PUSH2 0x8F SWAP2 PUSH1 0xA0 PUSH1 0x20 DUP7 ADD SWAP2 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP1 DUP2 PUSH2 0x4F4 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xE1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xE1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE1 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x14B JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP6 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x290 JUMPI PUSH2 0x1E9 SWAP3 PUSH2 0x1A9 SWAP2 PUSH0 SWAP2 PUSH2 0x29C JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x336 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP2 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x295 JUMPI JUMPDEST PUSH2 0x229 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP5 DUP7 SWAP4 DUP2 SWAP4 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x290 JUMPI PUSH2 0x256 SWAP4 PUSH0 SWAP4 PUSH2 0x261 JUMPI JUMPDEST POP POP PUSH2 0x250 PUSH2 0x39B JUMP JUMPDEST SWAP2 PUSH2 0x3F4 JUMP JUMPDEST POP PUSH0 DUP1 DUP1 DUP1 DUP1 PUSH2 0x222 JUMP JUMPDEST PUSH2 0x281 SWAP3 SWAP4 POP DUP1 RETURNDATASIZE LT PUSH2 0x289 JUMPI JUMPDEST PUSH2 0x279 DUP2 DUP4 PUSH2 0xE6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x30C JUMP JUMPDEST SWAP1 PUSH0 DUP1 PUSH2 0x246 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x26F JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST POP PUSH0 PUSH2 0x21D JUMP JUMPDEST PUSH2 0x2B3 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x289 JUMPI PUSH2 0x279 DUP2 DUP4 PUSH2 0xE6 JUMP JUMPDEST PUSH0 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xA3 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xA3 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x33D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0xE1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x445 JUMPI PUSH0 DUP2 PUSH2 0x43A SWAP5 PUSH1 0x20 DUP4 SWAP5 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x43D JUMPI RETURNDATASIZE SWAP1 PUSH2 0x41E DUP3 PUSH2 0x11F JUMP JUMPDEST SWAP2 PUSH2 0x42C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xE6 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x499 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x4A5 JUMPI POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x4B5 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x4E5 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x13A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xC3 JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB8 JUMPI PUSH0 SWAP2 PUSH2 0x5F JUMPI JUMPDEST POP PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x9D JUMPI PUSH2 0x97 SWAP3 PUSH1 0x40 MSTORE ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 PUSH2 0x59 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB8 JUMPI PUSH0 SWAP2 PUSH2 0x11B JUMPI POP PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x20 SWAP2 POP RETURNDATASIZE DUP3 GT PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0x9D JUMPI PUSH2 0x97 SWAP3 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x182 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x17E JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x17E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x17E JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 SWAP2 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0x1BA JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xE0 0xD9 ISZERO 0xE2 SWAP4 LOG4 COINBASE NUMBER 0x28 0x22 SGT SELFBALANCE GT 0x2E XOR SSTORE TIMESTAMP 0xF8 0x2B CALL PUSH11 0xFC31BCE3FD5BC873A57B64 PUSH20 0x6F6C634300081800330000000000000000000000 ", "sourceMap": "22808:125:0:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;22808:125:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;22850:81;22808:125;;;;;;;;;;:::i;:::-;22850:81;:::i;:::-;22808:125;;;;;;;;;;-1:-1:-1;22808:125:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22808:125:0;;;;-1:-1:-1;;;;;22808:125:0;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;-1:-1:-1;;22808:125:0;;;;-1:-1:-1;;;;;22808:125:0;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;22808:125:0;;;;;;:::o;:::-;-1:-1:-1;;;;;22808:125:0;;;;;;-1:-1:-1;;22808:125:0;;;;:::o;:::-;;;;;;;;-1:-1:-1;;22808:125:0;;;;:::o;:::-;;;;;;;;;;;;;21588:205;;4740:61;;4817:8;22808:125;;;;-1:-1:-1;;;19826:35:0;;;;;22808:125;;;-1:-1:-1;;;;;22808:125:0;;;19826:35;22808:125;19826:35;22808:125;;19826:35;;;;;;;19946:58;19826:35;19786:150;19826:35;-1:-1:-1;19826:35:0;;;21588:205;4740:61;;4817:8;;19786:150;:::i;:::-;19189:66;22808:125;;-1:-1:-1;;;;;;22808:125:0;-1:-1:-1;;;;;22808:125:0;;;;;;;;;;19946:58;22808:125;;20486:25;;;-1:-1:-1;20486:25:0;;22808:125;;20525:15;;;:28;;;21588:205;20521:130;;21588:205;;;;;;:::o;20521:130::-;19826:35;20598;;;;;;;;;;;;;;10038:77;20598:35;-1:-1:-1;20598:35:0;;;20521:130;22808:125;;;;:::i;:::-;10038:77;;:::i;:::-;;20521:130;;;;;;;20598:35;;;;;;;-1:-1:-1;20598:35:0;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;20525:28::-;;-1:-1:-1;20525:28:0;;19826:35;;;;;;;;;;;;;;:::i;:::-;;;;22808:125;;;-1:-1:-1;;;22808:125:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;22808:125:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22808:125:0;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;22808:125:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;22808:125:0;;;;;;;;;;;;;;-1:-1:-1;;;;;22808:125:0;;;;;;;;;;;;;-1:-1:-1;;;22808:125:0;;;;;;;;;:::o;10308:387::-;;;4740:61;;4817:8;22808:125;;-1:-1:-1;10595:25:0;10637:51;10595:25;;;;;;;;;;22808:125;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;10595:25:0;22808:125;;;10637:51;:::i;:::-;10308:387;:::o;22808:125::-;;;10637:51;:::i;22808:125::-;;;-1:-1:-1;;;22808:125:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;22808:125:0;;;;;;;10915:692;;;;11085:516;;;11112:17;;:::o;11085:516::-;22808:125;;11230:21;:17;;11364:154;;;;;;;11226:365;22808:125;;;;;;;;11556:20;;22808:125;11556:20;;;22808:125;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;22808:125:0;;;11556:20;;;"}, "deployedBytecode": {"functionDebugData": {"abi_decode_address_fromMemory": {"entryPoint": 386, "id": null, "parameterSlots": 2, "returnSlots": 1}, "abi_decode_address_fromMemory_676": {"entryPoint": 348, "id": null, "parameterSlots": 1, "returnSlots": 1}, "fun_delegate": {"entryPoint": 417, "id": 19, "parameterSlots": 1, "returnSlots": 0}, "fun_fallback": {"entryPoint": 195, "id": 38, "parameterSlots": 0, "returnSlots": 0}}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608080604052366100c3577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b8575f9161005f575b506101a1565b905060203d6020116100b1575b601f8101601f191682019167ffffffffffffffff83118184101761009d57610097926040520161015c565b5f610059565b634e487b7160e01b5f52604160045260245ffd5b503d61006c565b6040513d5f823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b8575f9161011b57506101a1565b602091503d8211610154575b601f8201601f191681019167ffffffffffffffff83118284101761009d5761009792604052810190610182565b3d9150610127565b602090607f19011261017e576080516001600160a01b038116810361017e5790565b5f80fd5b9081602091031261017e57516001600160a01b038116810361017e5790565b5f8091368280378136915af43d5f803e156101ba573d5ff35b3d5ffdfea2646970667358221220fee0d915e293a4414328221347112e185542f82bf16afc31bce3fd5bc873a57b64736f6c63430008180033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xC3 JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB8 JUMPI PUSH0 SWAP2 PUSH2 0x5F JUMPI JUMPDEST POP PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x9D JUMPI PUSH2 0x97 SWAP3 PUSH1 0x40 MSTORE ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 PUSH2 0x59 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB8 JUMPI PUSH0 SWAP2 PUSH2 0x11B JUMPI POP PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x20 SWAP2 POP RETURNDATASIZE DUP3 GT PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0x9D JUMPI PUSH2 0x97 SWAP3 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x182 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x17E JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x17E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x17E JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 SWAP2 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0x1BA JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xE0 0xD9 ISZERO 0xE2 SWAP4 LOG4 COINBASE NUMBER 0x28 0x22 SGT SELFBALANCE GT 0x2E XOR SSTORE TIMESTAMP 0xF8 0x2B CALL PUSH11 0xFC31BCE3FD5BC873A57B64 PUSH20 0x6F6C634300081800330000000000000000000000 ", "sourceMap": "22808:125:0:-:0;;;;;3323:63;22808:125;19189:66;;-1:-1:-1;;;22154:38:0;;;;22808:125;;22154:38;;22808:125;;-1:-1:-1;;;;;22808:125:0;22154:38;;;;;;;-1:-1:-1;22154:38:0;;;22808:125;2877:17;;:::i;22154:38::-;;;;;;;;;;22808:125;;;-1:-1:-1;;22808:125:0;;;;;;;;;;;;;22154:38;22808:125;;;22154:38;;:::i;:::-;;;;22808:125;;;;-1:-1:-1;22808:125:0;;22154:38;22808:125;;-1:-1:-1;22808:125:0;22154:38;;;;;;22808:125;;;-1:-1:-1;22808:125:0;;;;;2792:110;19189:66;;22808:125;;-1:-1:-1;;;22154:38:0;;22808:125;22154:38;;22808:125;;22154:38;;22808:125;;-1:-1:-1;;;;;22808:125:0;22154:38;;;;;;;-1:-1:-1;22154:38:0;;;2877:17;;:::i;22154:38::-;;;-1:-1:-1;22154:38:0;;;;;;22808:125;;;-1:-1:-1;;22808:125:0;;;;;;;;;;;;;22154:38;22808:125;;;22154:38;;;;:::i;:::-;;;-1:-1:-1;22154:38:0;;22808:125;;;;;;;;;;;-1:-1:-1;;;;;22808:125:0;;;;;;;:::o;:::-;-1:-1:-1;22808:125:0;;;;;;;;;;;;-1:-1:-1;;;;;22808:125:0;;;;;;;:::o;1418:895::-;1488:819;1418:895;;1488:819;;;;;;;;;;;;;;;;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BridgeToken.sol\":\"BridgeToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"BridgeToken.sol\":{\"keccak256\":\"0xdb7f67d524a580fb7b6e5160f64bab80e7b45a18aa585b871fcab18bd7c68965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9067631158ff20982ce54b5f874f20ba205e17823e676f19a7b59fab79666e84\",\"dweb:/ipfs/QmZvZGr9SpASznPLeoX37jSntB4NvRxef2hJZVeA3efVe6\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "ERC1967Upgrade": {"abi": [{"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "previousAdmin", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newAdmin", "type": "address"}], "name": "AdminChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "beacon", "type": "address"}], "name": "BeaconUpgraded", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "implementation", "type": "address"}], "name": "Upgraded", "type": "event"}], "devdoc": {"custom:oz-upgrades-unsafe-allow": "delegatecall", "details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._", "events": {"AdminChanged(address,address)": {"details": "Emitted when the admin account has changed."}, "BeaconUpgraded(address)": {"details": "Emitted when the beacon is upgraded."}, "Upgraded(address)": {"details": "Emitted when the implementation is upgraded."}}, "kind": "dev", "methods": {}, "stateVariables": {"_ADMIN_SLOT": {"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."}, "_BEACON_SLOT": {"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."}, "_IMPLEMENTATION_SLOT": {"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."}}, "version": 1}, "evm": {"assembly": "", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BridgeToken.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"BridgeToken.sol\":{\"keccak256\":\"0xdb7f67d524a580fb7b6e5160f64bab80e7b45a18aa585b871fcab18bd7c68965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9067631158ff20982ce54b5f874f20ba205e17823e676f19a7b59fab79666e84\",\"dweb:/ipfs/QmZvZGr9SpASznPLeoX37jSntB4NvRxef2hJZVeA3efVe6\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "IBeacon": {"abi": [{"inputs": [], "name": "implementation", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}], "devdoc": {"details": "This is the interface that {BeaconProxy} expects of its beacon.", "kind": "dev", "methods": {"implementation()": {"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}}, "version": 1}, "evm": {"assembly": "", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BridgeToken.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"BridgeToken.sol\":{\"keccak256\":\"0xdb7f67d524a580fb7b6e5160f64bab80e7b45a18aa585b871fcab18bd7c68965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9067631158ff20982ce54b5f874f20ba205e17823e676f19a7b59fab79666e84\",\"dweb:/ipfs/QmZvZGr9SpASznPLeoX37jSntB4NvRxef2hJZVeA3efVe6\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "Proxy": {"abi": [{"stateMutability": "payable", "type": "fallback"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BridgeToken.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"BridgeToken.sol\":{\"keccak256\":\"0xdb7f67d524a580fb7b6e5160f64bab80e7b45a18aa585b871fcab18bd7c68965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9067631158ff20982ce54b5f874f20ba205e17823e676f19a7b59fab79666e84\",\"dweb:/ipfs/QmZvZGr9SpASznPLeoX37jSntB4NvRxef2hJZVeA3efVe6\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "StorageSlot": {"abi": [], "devdoc": {"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"BridgeToken.sol\":12842:14061  library StorageSlot {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"BridgeToken.sol\":12842:14061  library StorageSlot {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204eb73b63ac990f45f9aa0e537744ddccd8e3e51340a5c909504aa9b51edd6d4664736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212204eb73b63ac990f45f9aa0e537744ddccd8e3e51340a5c909504aa9b51edd6d4664736f6c63430008180033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xB7 EXTCODESIZE PUSH4 0xAC990F45 0xF9 0xAA 0xE MSTORE8 PUSH24 0x44DDCCD8E3E51340A5C909504AA9B51EDD6D4664736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ", "sourceMap": "12842:1219:0:-:0;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "5f80fdfea26469706673582212204eb73b63ac990f45f9aa0e537744ddccd8e3e51340a5c909504aa9b51edd6d4664736f6c63430008180033", "opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xB7 EXTCODESIZE PUSH4 0xAC990F45 0xF9 0xAA 0xE MSTORE8 PUSH24 0x44DDCCD8E3E51340A5C909504AA9B51EDD6D4664736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ", "sourceMap": "12842:1219:0:-:0;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BridgeToken.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"BridgeToken.sol\":{\"keccak256\":\"0xdb7f67d524a580fb7b6e5160f64bab80e7b45a18aa585b871fcab18bd7c68965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9067631158ff20982ce54b5f874f20ba205e17823e676f19a7b59fab79666e84\",\"dweb:/ipfs/QmZvZGr9SpASznPLeoX37jSntB4NvRxef2hJZVeA3efVe6\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}}, "sources": {"BridgeToken.sol": {"id": 0}}}