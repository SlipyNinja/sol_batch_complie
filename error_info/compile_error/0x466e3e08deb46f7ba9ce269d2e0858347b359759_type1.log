Traceback (most recent call last):
  File "/Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/batchCompile.py", line 161, in multi_process_directory
    compiled_sol = compile_contract(path, version, filename, copy.deepcopy(settings))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/batchCompile.py", line 115, in compile_contract
    compiled_sol = compile_standard(setting, allow_paths=path, solc_version=version)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/longfeichen/.env/compile_solidity/lib/python3.12/site-packages/solcx/main.py", line 369, in compile_standard
    raise SolcError(
solcx.exceptions.SolcError: YulException: Variable var__loanId_5735 is 6 slot(s) too deep inside the stack. Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.


> command: `/Users/longfeichen/.solcx/solc-v0.8.18 --standard-json --allow-paths /Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/contracts/0x466e3e08deb46f7ba9ce269d2e0858347b359759`
> return code: `0`
> stdout:
{"contracts":{"10_54_INFTWithDescriptor.sol":{"INFTWithDescriptor":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"descriptor","type":"address"}],"name":"SetDescriptor","type":"event"},{"inputs":[{"internalType":"address","name":"descriptor","type":"address"}],"name":"setDescriptor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"descriptor\",\"type\":\"address\"}],\"name\":\"SetDescriptor\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"descriptor\",\"type\":\"address\"}],\"name\":\"setDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"10_54_INFTWithDescriptor.sol\":\"INFTWithDescriptor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_54_INFTWithDescriptor.sol\":{\"keccak256\":\"0xa65ff18a7c35e3a1d4ced320590e512a5a1ac3b5038529882019344b93dc1a1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15800408246c27da705c6b3fd5f95f1a3cc0d12cee025e5fd74b76687478058\",\"dweb:/ipfs/QmNkNxrxM4fd67JrDD5M1u16WoBVm9fd9fcgPCcUuhiApw\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"11_54_IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"11_54_IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"12_54_IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"12_54_IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"13_54_SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"13_54_SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"13_54_SafeERC20.sol\":{\"keccak256\":\"0xca2a1cce29c95562079d1d1bf5e99dc29e0d64b385a6c92df859d0414ccd908f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42695fb74e355e33ba71507315e16f355fa4001a4d49ff0f4584d4cd465ef184\",\"dweb:/ipfs/QmSEcJojmAVjS6R4i1hixcnhugm3mwXjMf5CPrBB8HjhSX\"]},\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"14_54_ERC721Holder.sol":{"ERC721Holder":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"14_54_ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"14_54_ERC721Holder.sol\":{\"keccak256\":\"0xfc46c4f762239615d31ba45ae92094fc71c49bd6c7fb59ccec38dd285f101602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88324c85c20335b973fa97f152e64d6ea1f42af3ce57079baae898a0195db633\",\"dweb:/ipfs/QmPsqm7knfFhJi7bzdbRsZRxRy2aNmzHfhzyFiQDD4PUtH\"]},\"21_54_IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"15_54_ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"15_54_ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"15_54_ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"16_54_Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"16_54_Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"16_54_Ownable.sol\":{\"keccak256\":\"0x66a03d4cf54f75978905db625064e129580ba7bca0c8d68d259c6f2f80fd55ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7f4fe6aef097c1ae907579edeb3467de23abf6e7797ce10fec8e3829de56e45\",\"dweb:/ipfs/QmUUDV6KJ9Lsz7rzZqicgbqUxAugfwhBxpVUrNvQMFwNz3\"]},\"22_54_Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"17_54_DirectLoanFixedOffer.sol":{"DirectLoanFixedOffer":{"abi":[{"inputs":[{"internalType":"address","name":"_admin","type":"address"},{"internalType":"address","name":"_nftfiHub","type":"address"},{"internalType":"address[]","name":"_permittedErc20s","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"newAdminFee","type":"uint16"}],"name":"AdminFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"erc20Contract","type":"address"},{"indexed":false,"internalType":"bool","name":"isPermitted","type":"bool"}],"name":"ERC20Permit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"loanId","type":"uint32"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"indexed":false,"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loanMaturityDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loanLiquidationDate","type":"uint256"},{"indexed":false,"internalType":"address","name":"nftCollateralContract","type":"address"}],"name":"LoanLiquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"loanId","type":"uint32"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"indexed":false,"internalType":"uint32","name":"newLoanDuration","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"newMaximumRepaymentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"renegotiationFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"renegotiationAdminFee","type":"uint256"}],"name":"LoanRenegotiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"loanId","type":"uint32"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"indexed":false,"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountPaidToLender","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"adminFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"revenueShare","type":"uint256"},{"indexed":false,"internalType":"address","name":"revenueSharePartner","type":"address"},{"indexed":false,"internalType":"address","name":"nftCollateralContract","type":"address"},{"indexed":false,"internalType":"address","name":"loanERC20Denomination","type":"address"}],"name":"LoanRepaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"loanId","type":"uint32"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"nftCollateralWrapper","type":"address"},{"internalType":"uint64","name":"loanStartTime","type":"uint64"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"address","name":"borrower","type":"address"}],"indexed":false,"internalType":"struct LoanData.LoanTerms","name":"loanTerms","type":"tuple"},{"components":[{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"uint16","name":"revenueShareInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"}],"indexed":false,"internalType":"struct LoanData.LoanExtras","name":"loanExtras","type":"tuple"}],"name":"LoanStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newMaximumLoanDuration","type":"uint256"}],"name":"MaximumLoanDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"HUNDRED_PERCENT","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LOAN_COORDINATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LOAN_TYPE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"address","name":"referrer","type":"address"}],"internalType":"struct LoanData.Offer","name":"_offer","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"},{"components":[{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"}],"internalType":"struct LoanData.BorrowerSettings","name":"_borrowerSettings","type":"tuple"}],"name":"acceptOffer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"adminFeeInBasisPoints","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"cancelLoanCommitmentBeforeLoanHasBegun","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"drainERC1155Airdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"drainERC20Airdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"drainERC721Airdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_erc20","type":"address"}],"name":"getERC20Permit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"getPayoffAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"getWhetherNonceHasBeenUsedForUser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hub","outputs":[{"internalType":"contract INftfiHub","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"liquidateOverdueLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"loanIdToLoan","outputs":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"nftCollateralWrapper","type":"address"},{"internalType":"uint64","name":"loanStartTime","type":"uint64"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"address","name":"borrower","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"loanIdToLoanExtras","outputs":[{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"uint16","name":"revenueShareInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"loanRepaidOrLiquidated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maximumLoanDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"mintObligationReceipt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"payBackLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_nftAirdrop","type":"address"},{"internalType":"uint256","name":"_nftAirdropId","type":"uint256"},{"internalType":"bool","name":"_is1155","type":"bool"},{"internalType":"uint256","name":"_nftAirdropAmount","type":"uint256"}],"name":"pullAirdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"uint32","name":"_newLoanDuration","type":"uint32"},{"internalType":"uint256","name":"_newMaximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"_renegotiationFee","type":"uint256"},{"internalType":"uint256","name":"_lenderNonce","type":"uint256"},{"internalType":"uint256","name":"_expiry","type":"uint256"},{"internalType":"bytes","name":"_lenderSignature","type":"bytes"}],"name":"renegotiateLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_erc20","type":"address"},{"internalType":"bool","name":"_permit","type":"bool"}],"name":"setERC20Permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_erc20s","type":"address[]"},{"internalType":"bool[]","name":"_permits","type":"bool[]"}],"name":"setERC20Permits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_newAdminFeeInBasisPoints","type":"uint16"}],"name":"updateAdminFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newMaximumLoanDuration","type":"uint256"}],"name":"updateMaximumLoanDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"wrapCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"NFTfi","events":{"AdminFeeUpdated(uint16)":{"params":{"newAdminFee":"- The new admin fee measured in basis points. This is a percent of the interest paid upon a loan's completion that go to the contract admins."}},"ERC20Permit(address,bool)":{"params":{"erc20Contract":"- Address of the ERC20 contract.","isPermitted":"- Signals ERC20 permit."}},"LoanLiquidated(uint32,address,address,uint256,uint256,uint256,uint256,address)":{"params":{"borrower":"- The address of the borrower.","lender":"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.","loanId":"- A unique identifier for this particular loan, sourced from the Loan Coordinator.","loanLiquidationDate":"- The unix time (measured in seconds) that liquidation occurred.","loanMaturityDate":"- The unix time (measured in seconds) that the loan became due and was eligible for liquidation.","loanPrincipalAmount":"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.","nftCollateralContract":"- The ERC721 contract of the NFT collateral","nftCollateralId":"- The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan."}},"LoanRenegotiated(uint32,address,address,uint32,uint256,uint256,uint256)":{"params":{"loanId":"- The unique identifier for the loan to be renegotiated","newLoanDuration":"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.","newMaximumRepaymentAmount":"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.","renegotiationAdminFee":"renegotiationFee admin portion based on determined by adminFeeInBasisPoints","renegotiationFee":"Agreed upon fee in loan denomination that borrower pays for the lender for the renegotiation, has to be paid with an ERC20 transfer loanERC20Denomination token, uses transfer from, frontend will have to propmt an erc20 approve for this from the borrower to the lender"}},"LoanRepaid(uint32,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address)":{"params":{"adminFee":"The amount of interest paid to the contract admins, measured in the smalled units of loanERC20Denomination and determined by adminFeeInBasisPoints. This amount never exceeds the amount of interest earned.","amountPaidToLender":"The amount of ERC20 that the borrower paid to the lender, measured in the smalled units of loanERC20Denomination.","borrower":"- The address of the borrower.","lender":"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.","loanERC20Denomination":"- The ERC20 contract of the currency being used as principal/interest for this loan.","loanId":"- A unique identifier for this particular loan, sourced from the Loan Coordinator.","loanPrincipalAmount":"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.","nftCollateralContract":"- The ERC721 contract of the NFT collateral","nftCollateralId":"- The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan.","revenueShare":"The amount taken from admin fee amount shared with the partner.","revenueSharePartner":"- The address of the partner that will receive the revenue share."}},"LoanStarted(uint32,address,address,(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address),(address,uint16,uint16))":{"params":{"borrower":"- The address of the borrower.","lender":"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.","loanId":"- A unique identifier for this particular loan, sourced from the Loan Coordinator."}},"MaximumLoanDurationUpdated(uint256)":{"params":{"newMaximumLoanDuration":"- The new maximum duration."}},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"acceptOffer((uint256,uint256,uint256,address,uint32,uint16,address,address),(uint256,uint256,address,bytes),(address,uint16))":{"params":{"_borrowerSettings":"- Some extra parameters that the borrower needs to set when accepting an offer.","_offer":"- The offer made by the lender.","_signature":"- The components of the lender's signature."}},"cancelLoanCommitmentBeforeLoanHasBegun(uint256)":{"params":{"_nonce":"- User nonce"}},"constructor":{"details":"Sets `hub` and permitted erc20-s","params":{"_admin":"- Initial admin of this contract.","_nftfiHub":"- NFTfiHub address","_permittedErc20s":"- list of permitted ERC20 token contract addresses"}},"drainERC1155Airdrop(address,uint256,address)":{"params":{"_receiver":"- receiver of the token","_tokenAddress":"- address of the token contract for the token to be sent out","_tokenId":"- id token to be sent out"}},"drainERC20Airdrop(address,address)":{"params":{"_receiver":"- receiver of the token","_tokenAddress":"- address of the token contract for the token to be sent out"}},"drainERC721Airdrop(address,uint256,address)":{"params":{"_receiver":"- receiver of the token","_tokenAddress":"- address of the token contract for the token to be sent out","_tokenId":"- id token to be sent out"}},"getERC20Permit(address)":{"params":{"_erc20":"- The address of the erc20 contract."},"returns":{"_0":"Returns whether the erc20 is permitted"}},"getPayoffAmount(uint32)":{"params":{"_loanId":"A unique identifier for this particular loan, sourced from the Loan Coordinator."},"returns":{"_0":"The amount of the specified ERC20 currency required to pay back this loan, measured in the smallest unit of the specified ERC20 currency."}},"getWhetherNonceHasBeenUsedForUser(address,uint256)":{"params":{"_nonce":"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.","_user":"- The address of the user. This function works for both lenders and borrowers alike."},"returns":{"_0":"A bool representing whether or not this nonce has been used for this user."}},"liquidateOverdueLoan(uint32)":{"params":{"_loanId":"A unique identifier for this particular loan, sourced from the Loan Coordinator."}},"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated.","returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated.","returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if allowed"}},"onERC721Received(address,address,uint256,bytes)":{"details":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"Triggers stopped state. Requirements: - Only the owner can call this method. - The contract must not be paused."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"payBackLoan(uint32)":{"params":{"_loanId":"A unique identifier for this particular loan, sourced from the Loan Coordinator."}},"pullAirdrop(uint32,address,bytes,address,uint256,bool,uint256)":{"params":{"_data":"- function selector to be called on the airdropping contract","_is1155":"-","_loanId":"-","_nftAirdrop":"- address of the used claiming nft in the drop","_nftAirdropAmount":"- amount in case of 1155","_nftAirdropId":"- id of the used claiming nft in the drop","_target":"- address of the airdropping contract"}},"renegotiateLoan(uint32,uint32,uint256,uint256,uint256,uint256,bytes)":{"details":"makes possible to change loan duration and max repayment amount, loan duration even can be extended if loan was expired but not liquidated.","params":{"_expiry":"- The date when the renegotiation offer expires","_lenderNonce":"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.","_lenderSignature":"- The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters: - _loanId - _newLoanDuration - _newMaximumRepaymentAmount - _lender - _expiry  - address of this contract - chainId","_loanId":"- The unique identifier for the loan to be renegotiated","_newLoanDuration":"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.","_newMaximumRepaymentAmount":"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.","_renegotiationFee":"Agreed upon fee in ether that borrower pays for the lender for the renegitiation"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setERC20Permit(address,bool)":{"params":{"_erc20":"- The address of the ERC20 currency whose permit list status changed.","_permit":"- The new status of whether the currency is permitted or not."}},"setERC20Permits(address[],bool[])":{"params":{"_erc20s":"- The addresses of the ERC20 currencies whose permit list status changed.","_permits":"- The new statuses of whether the currency is permitted or not."}},"supportsInterface(bytes4)":{"details":"Checks whether this contract implements the interface defined by `interfaceId`.","params":{"_interfaceId":"Id of the interface"},"returns":{"_0":"true if this contract implements the interface"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{"details":"Returns to normal state. Requirements: - Only the owner can call this method. - The contract must be paused."},"updateAdminFee(uint16)":{"params":{"_newAdminFeeInBasisPoints":"- The new admin fee measured in basis points. This is a percent of the interest paid upon a loan's completion that go to the contract admins."}},"updateMaximumLoanDuration(uint256)":{"params":{"_newMaximumLoanDuration":"- The new maximum loan duration, measured in seconds."}},"wrapCollateral(uint32)":{"params":{"_loanId":"-"}}},"title":"DirectLoanFixed","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftfiHub\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_permittedErc20s\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newAdminFee\",\"type\":\"uint16\"}],\"name\":\"AdminFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20Contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPermitted\",\"type\":\"bool\"}],\"name\":\"ERC20Permit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"loanId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanMaturityDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanLiquidationDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"loanId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newLoanDuration\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaximumRepaymentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"renegotiationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"renegotiationAdminFee\",\"type\":\"uint256\"}],\"name\":\"LoanRenegotiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"loanId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaidToLender\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"adminFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revenueShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"loanId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"nftCollateralWrapper\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"loanStartTime\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct LoanData.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"revenueShareInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct LoanData.LoanExtras\",\"name\":\"loanExtras\",\"type\":\"tuple\"}],\"name\":\"LoanStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaximumLoanDuration\",\"type\":\"uint256\"}],\"name\":\"MaximumLoanDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOAN_COORDINATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOAN_TYPE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"}],\"internalType\":\"struct LoanData.BorrowerSettings\",\"name\":\"_borrowerSettings\",\"type\":\"tuple\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminFeeInBasisPoints\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"cancelLoanCommitmentBeforeLoanHasBegun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"drainERC1155Airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"drainERC20Airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"drainERC721Airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"getERC20Permit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"getPayoffAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getWhetherNonceHasBeenUsedForUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract INftfiHub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"liquidateOverdueLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"loanIdToLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"nftCollateralWrapper\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"loanStartTime\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"loanIdToLoanExtras\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"revenueShareInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"loanRepaidOrLiquidated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumLoanDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"mintObligationReceipt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"payBackLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_nftAirdrop\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftAirdropId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_is1155\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_nftAirdropAmount\",\"type\":\"uint256\"}],\"name\":\"pullAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_newLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_newMaximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_renegotiationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lenderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_lenderSignature\",\"type\":\"bytes\"}],\"name\":\"renegotiateLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_permit\",\"type\":\"bool\"}],\"name\":\"setERC20Permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_erc20s\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_permits\",\"type\":\"bool[]\"}],\"name\":\"setERC20Permits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newAdminFeeInBasisPoints\",\"type\":\"uint16\"}],\"name\":\"updateAdminFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaximumLoanDuration\",\"type\":\"uint256\"}],\"name\":\"updateMaximumLoanDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"wrapCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"events\":{\"AdminFeeUpdated(uint16)\":{\"params\":{\"newAdminFee\":\"- The new admin fee measured in basis points. This is a percent of the interest paid upon a loan's completion that go to the contract admins.\"}},\"ERC20Permit(address,bool)\":{\"params\":{\"erc20Contract\":\"- Address of the ERC20 contract.\",\"isPermitted\":\"- Signals ERC20 permit.\"}},\"LoanLiquidated(uint32,address,address,uint256,uint256,uint256,uint256,address)\":{\"params\":{\"borrower\":\"- The address of the borrower.\",\"lender\":\"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.\",\"loanId\":\"- A unique identifier for this particular loan, sourced from the Loan Coordinator.\",\"loanLiquidationDate\":\"- The unix time (measured in seconds) that liquidation occurred.\",\"loanMaturityDate\":\"- The unix time (measured in seconds) that the loan became due and was eligible for liquidation.\",\"loanPrincipalAmount\":\"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.\",\"nftCollateralContract\":\"- The ERC721 contract of the NFT collateral\",\"nftCollateralId\":\"- The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan.\"}},\"LoanRenegotiated(uint32,address,address,uint32,uint256,uint256,uint256)\":{\"params\":{\"loanId\":\"- The unique identifier for the loan to be renegotiated\",\"newLoanDuration\":\"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.\",\"newMaximumRepaymentAmount\":\"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.\",\"renegotiationAdminFee\":\"renegotiationFee admin portion based on determined by adminFeeInBasisPoints\",\"renegotiationFee\":\"Agreed upon fee in loan denomination that borrower pays for the lender for the renegotiation, has to be paid with an ERC20 transfer loanERC20Denomination token, uses transfer from, frontend will have to propmt an erc20 approve for this from the borrower to the lender\"}},\"LoanRepaid(uint32,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address)\":{\"params\":{\"adminFee\":\"The amount of interest paid to the contract admins, measured in the smalled units of loanERC20Denomination and determined by adminFeeInBasisPoints. This amount never exceeds the amount of interest earned.\",\"amountPaidToLender\":\"The amount of ERC20 that the borrower paid to the lender, measured in the smalled units of loanERC20Denomination.\",\"borrower\":\"- The address of the borrower.\",\"lender\":\"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.\",\"loanERC20Denomination\":\"- The ERC20 contract of the currency being used as principal/interest for this loan.\",\"loanId\":\"- A unique identifier for this particular loan, sourced from the Loan Coordinator.\",\"loanPrincipalAmount\":\"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.\",\"nftCollateralContract\":\"- The ERC721 contract of the NFT collateral\",\"nftCollateralId\":\"- The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan.\",\"revenueShare\":\"The amount taken from admin fee amount shared with the partner.\",\"revenueSharePartner\":\"- The address of the partner that will receive the revenue share.\"}},\"LoanStarted(uint32,address,address,(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address),(address,uint16,uint16))\":{\"params\":{\"borrower\":\"- The address of the borrower.\",\"lender\":\"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.\",\"loanId\":\"- A unique identifier for this particular loan, sourced from the Loan Coordinator.\"}},\"MaximumLoanDurationUpdated(uint256)\":{\"params\":{\"newMaximumLoanDuration\":\"- The new maximum duration.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOffer((uint256,uint256,uint256,address,uint32,uint16,address,address),(uint256,uint256,address,bytes),(address,uint16))\":{\"params\":{\"_borrowerSettings\":\"- Some extra parameters that the borrower needs to set when accepting an offer.\",\"_offer\":\"- The offer made by the lender.\",\"_signature\":\"- The components of the lender's signature.\"}},\"cancelLoanCommitmentBeforeLoanHasBegun(uint256)\":{\"params\":{\"_nonce\":\"- User nonce\"}},\"constructor\":{\"details\":\"Sets `hub` and permitted erc20-s\",\"params\":{\"_admin\":\"- Initial admin of this contract.\",\"_nftfiHub\":\"- NFTfiHub address\",\"_permittedErc20s\":\"- list of permitted ERC20 token contract addresses\"}},\"drainERC1155Airdrop(address,uint256,address)\":{\"params\":{\"_receiver\":\"- receiver of the token\",\"_tokenAddress\":\"- address of the token contract for the token to be sent out\",\"_tokenId\":\"- id token to be sent out\"}},\"drainERC20Airdrop(address,address)\":{\"params\":{\"_receiver\":\"- receiver of the token\",\"_tokenAddress\":\"- address of the token contract for the token to be sent out\"}},\"drainERC721Airdrop(address,uint256,address)\":{\"params\":{\"_receiver\":\"- receiver of the token\",\"_tokenAddress\":\"- address of the token contract for the token to be sent out\",\"_tokenId\":\"- id token to be sent out\"}},\"getERC20Permit(address)\":{\"params\":{\"_erc20\":\"- The address of the erc20 contract.\"},\"returns\":{\"_0\":\"Returns whether the erc20 is permitted\"}},\"getPayoffAmount(uint32)\":{\"params\":{\"_loanId\":\"A unique identifier for this particular loan, sourced from the Loan Coordinator.\"},\"returns\":{\"_0\":\"The amount of the specified ERC20 currency required to pay back this loan, measured in the smallest unit of the specified ERC20 currency.\"}},\"getWhetherNonceHasBeenUsedForUser(address,uint256)\":{\"params\":{\"_nonce\":\"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.\",\"_user\":\"- The address of the user. This function works for both lenders and borrowers alike.\"},\"returns\":{\"_0\":\"A bool representing whether or not this nonce has been used for this user.\"}},\"liquidateOverdueLoan(uint32)\":{\"params\":{\"_loanId\":\"A unique identifier for this particular loan, sourced from the Loan Coordinator.\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated.\",\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated.\",\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if allowed\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Triggers stopped state. Requirements: - Only the owner can call this method. - The contract must not be paused.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payBackLoan(uint32)\":{\"params\":{\"_loanId\":\"A unique identifier for this particular loan, sourced from the Loan Coordinator.\"}},\"pullAirdrop(uint32,address,bytes,address,uint256,bool,uint256)\":{\"params\":{\"_data\":\"- function selector to be called on the airdropping contract\",\"_is1155\":\"-\",\"_loanId\":\"-\",\"_nftAirdrop\":\"- address of the used claiming nft in the drop\",\"_nftAirdropAmount\":\"- amount in case of 1155\",\"_nftAirdropId\":\"- id of the used claiming nft in the drop\",\"_target\":\"- address of the airdropping contract\"}},\"renegotiateLoan(uint32,uint32,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"makes possible to change loan duration and max repayment amount, loan duration even can be extended if loan was expired but not liquidated.\",\"params\":{\"_expiry\":\"- The date when the renegotiation offer expires\",\"_lenderNonce\":\"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.\",\"_lenderSignature\":\"- The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters: - _loanId - _newLoanDuration - _newMaximumRepaymentAmount - _lender - _expiry  - address of this contract - chainId\",\"_loanId\":\"- The unique identifier for the loan to be renegotiated\",\"_newLoanDuration\":\"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.\",\"_newMaximumRepaymentAmount\":\"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.\",\"_renegotiationFee\":\"Agreed upon fee in ether that borrower pays for the lender for the renegitiation\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setERC20Permit(address,bool)\":{\"params\":{\"_erc20\":\"- The address of the ERC20 currency whose permit list status changed.\",\"_permit\":\"- The new status of whether the currency is permitted or not.\"}},\"setERC20Permits(address[],bool[])\":{\"params\":{\"_erc20s\":\"- The addresses of the ERC20 currencies whose permit list status changed.\",\"_permits\":\"- The new statuses of whether the currency is permitted or not.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Checks whether this contract implements the interface defined by `interfaceId`.\",\"params\":{\"_interfaceId\":\"Id of the interface\"},\"returns\":{\"_0\":\"true if this contract implements the interface\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Returns to normal state. Requirements: - Only the owner can call this method. - The contract must be paused.\"},\"updateAdminFee(uint16)\":{\"params\":{\"_newAdminFeeInBasisPoints\":\"- The new admin fee measured in basis points. This is a percent of the interest paid upon a loan's completion that go to the contract admins.\"}},\"updateMaximumLoanDuration(uint256)\":{\"params\":{\"_newMaximumLoanDuration\":\"- The new maximum loan duration, measured in seconds.\"}},\"wrapCollateral(uint32)\":{\"params\":{\"_loanId\":\"-\"}}},\"title\":\"DirectLoanFixed\",\"version\":1},\"userdoc\":{\"events\":{\"AdminFeeUpdated(uint16)\":{\"notice\":\"This event is fired whenever the admins change the percent of interest rates earned that they charge as a fee. Note that newAdminFee can never exceed 10,000, since the fee is measured in basis points.\"},\"ERC20Permit(address,bool)\":{\"notice\":\"This event is fired whenever the admin sets a ERC20 permit.\"},\"LoanLiquidated(uint32,address,address,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"This event is fired whenever a lender liquidates an outstanding loan that is owned to them that has exceeded its duration. The lender receives the underlying NFT collateral, and the borrower no longer needs to repay the loan principal-plus-interest.\"},\"LoanRenegotiated(uint32,address,address,uint32,uint256,uint256,uint256)\":{\"notice\":\"This event is fired when some of the terms of a loan are being renegotiated.\"},\"LoanRepaid(uint32,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address)\":{\"notice\":\"This event is fired whenever a borrower successfully repays their loan, paying principal-plus-interest-minus-fee to the lender in loanERC20Denomination, paying fee to owner in loanERC20Denomination, and receiving their NFT collateral back.\"},\"LoanStarted(uint32,address,address,(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address),(address,uint16,uint16))\":{\"notice\":\"This event is fired whenever a borrower begins a loan by calling NFTfi.beginLoan(), which can only occur after both the lender and borrower have approved their ERC721 and ERC20 contracts to use NFTfi, and when they both have signed off-chain messages that agree on the terms of the loan.\"},\"MaximumLoanDurationUpdated(uint256)\":{\"notice\":\"This event is fired whenever the admins change the maximum duration of any loan started for this loan type.\"}},\"kind\":\"user\",\"methods\":{\"acceptOffer((uint256,uint256,uint256,address,uint32,uint16,address,address),(uint256,uint256,address,bytes),(address,uint16))\":{\"notice\":\"This function is called by the borrower when accepting a lender's offer to begin a loan.\"},\"adminFeeInBasisPoints()\":{\"notice\":\"The percentage of interest earned by lenders on this platform that is taken by the contract admin's as a fee, measured in basis points (hundreths of a percent). The max allowed value is 10000.\"},\"cancelLoanCommitmentBeforeLoanHasBegun(uint256)\":{\"notice\":\"This function can be called by either a lender or a borrower to cancel all off-chain orders that they have signed that contain this nonce. If the off-chain orders were created correctly, there should only be one off-chain order that contains this nonce at all. The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes. First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.\"},\"drainERC1155Airdrop(address,uint256,address)\":{\"notice\":\"used by the owner account to be able to drain ERC1155 tokens received as airdrops for the locked  collateral NFT-s\"},\"drainERC20Airdrop(address,address)\":{\"notice\":\"used by the owner account to be able to drain ERC20 tokens received as airdrops for the locked  collateral NFT-s\"},\"drainERC721Airdrop(address,uint256,address)\":{\"notice\":\"used by the owner account to be able to drain ERC721 tokens received as airdrops for the locked  collateral NFT-s\"},\"getERC20Permit(address)\":{\"notice\":\"This function can be called by anyone to get the permit associated with the erc20 contract.\"},\"getPayoffAmount(uint32)\":{\"notice\":\"This function can be used to view the current quantity of the ERC20 currency used in the specified loan required by the borrower to repay their loan, measured in the smallest unit of the ERC20 currency.\"},\"getWhetherNonceHasBeenUsedForUser(address,uint256)\":{\"notice\":\"This function can be used to view whether a particular nonce for a particular user has already been used, either from a successful loan or a cancelled off-chain order.\"},\"liquidateOverdueLoan(uint32)\":{\"notice\":\"This function is called by a lender once a loan has finished its duration and the borrower still has not repaid. The lender can call this function to seize the underlying NFT collateral, although the lender gives up all rights to the principal-plus-collateral by doing so. This function is purposefully not pausable in order to prevent an attack where the contract admin's pause the contract and hold hostage the NFT's that are still within it. We intentionally allow anybody to call this function, although only the lender will end up receiving the seized collateral. We are exploring the possbility of incentivizing users to call this function by using some of the admin funds.\"},\"loanIdToLoan(uint32)\":{\"notice\":\"A mapping from a loan's identifier to the loan's details, represted by the loan struct.\"},\"loanRepaidOrLiquidated(uint32)\":{\"notice\":\"A mapping tracking whether a loan has either been repaid or liquidated. This prevents an attacker trying to repay or liquidate the same loan twice.\"},\"maximumLoanDuration()\":{\"notice\":\"The maximum duration of any loan started for this loan type, measured in seconds. This is both a sanity-check for borrowers and an upper limit on how long admins will have to support v1 of this contract if they eventually deprecate it, as well as a check to ensure that the loan duration never exceeds the space alotted for it in the loan struct.\"},\"payBackLoan(uint32)\":{\"notice\":\"This function is called by a anyone to repay a loan. It can be called at any time after the loan has begun and before loan expiry.. The caller will pay a pro-rata portion of their interest if the loan is paid off early and the loan is pro-rated type, but the complete repayment amount if it is fixed type. The the borrower (current owner of the obligation note) will get the collaterl NFT back. This function is purposefully not pausable in order to prevent an attack where the contract admin's pause the contract and hold hostage the NFT's that are still within it.\"},\"pullAirdrop(uint32,address,bytes,address,uint256,bool,uint256)\":{\"notice\":\"this function initiates a flashloan to pull an airdrop from a tartget contract\"},\"setERC20Permit(address,bool)\":{\"notice\":\"This function can be called by admins to change the permitted status of an ERC20 currency. This includes both adding an ERC20 currency to the permitted list and removing it.\"},\"setERC20Permits(address[],bool[])\":{\"notice\":\"This function can be called by admins to change the permitted status of a batch of ERC20 currency. This includes both adding an ERC20 currency to the permitted list and removing it.\"},\"updateAdminFee(uint16)\":{\"notice\":\"This function can be called by admins to change the percent of interest rates earned that they charge as a fee. Note that newAdminFee can never exceed 10,000, since the fee is measured in basis points.\"},\"updateMaximumLoanDuration(uint256)\":{\"notice\":\"This function can be called by admins to change the maximumLoanDuration. Note that they can never change maximumLoanDuration to be greater than UINT32_MAX, since that's the maximum space alotted for the duration in the loan struct.\"},\"wrapCollateral(uint32)\":{\"notice\":\"this function creates a proxy contract wrapping the collateral to be able to catch an expected airdrop\"}},\"notice\":\"Main contract for NFTfi Direct Loans Fixed Type. This contract manages the ability to create NFT-backed peer-to-peer loans of type Fixed (agreed to be a fixed-repayment loan) where the borrower pays the maximumRepaymentAmount regardless of whether they repay early or not. There are two ways to commence an NFT-backed loan: a. The borrower accepts a lender's offer by calling `acceptOffer`.   1. the borrower calls nftContract.approveAll(NFTfi), approving the NFTfi contract to move their NFT's on their be1alf.   2. the lender calls erc20Contract.approve(NFTfi), allowing NFTfi to move the lender's ERC20 tokens on their behalf.   3. the lender signs an off-chain message, proposing its offer terms.   4. the borrower calls `acceptOffer` to accept these terms and enter into the loan. The NFT is stored in the contract, the borrower receives the loan principal in the specified ERC20 currency, the lender receives an NFTfi promissory note (in ERC721 form) that represents the rights to either the principal-plus-interest, or the underlying NFT collateral if the borrower does not pay back in time, and the borrower receives obligation receipt (in ERC721 form) that gives them the right to pay back the loan and get the collateral back. b. The lender accepts a borrowe's binding terms by calling `acceptListing`.   1. the borrower calls nftContract.approveAll(NFTfi), approving the NFTfi contract to move their NFT's on their be1alf.   2. the lender calls erc20Contract.approve(NFTfi), allowing NFTfi to move the lender's ERC20 tokens on their behalf.   3. the borrower signs an off-chain message, proposing its binding terms.   4. the lender calls `acceptListing` with an offer matching the binding terms and enter into the loan. The NFT is stored in the contract, the borrower receives the loan principal in the specified ERC20 currency, the lender receives an NFTfi promissory note (in ERC721 form) that represents the rights to either the principal-plus-interest, or the underlying NFT collateral if the borrower does not pay back in time, and the borrower receives obligation receipt (in ERC721 form) that gives them the right to pay back the loan and get the collateral back. The lender can freely transfer and trade this ERC721 promissory note as they wish, with the knowledge that transferring the ERC721 promissory note tranfsers the rights to principal-plus-interest and/or collateral, and that they will no longer have a claim on the loan. The ERC721 promissory note itself represents that claim. The borrower can freely transfer and trade this ERC721 obligaiton receipt as they wish, with the knowledge that transferring the ERC721 obligaiton receipt tranfsers the rights right to pay back the loan and get the collateral back. A loan may end in one of two ways: - First, a borrower may call NFTfi.payBackLoan() and pay back the loan plus interest at any time, in which case they receive their NFT back in the same transaction. - Second, if the loan's duration has passed and the loan has not been paid back yet, a lender can call NFTfi.liquidateOverdueLoan(), in which case they receive the underlying NFT collateral and forfeit the rights to the principal-plus-interest, which the borrower now keeps.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"17_54_DirectLoanFixedOffer.sol\":\"DirectLoanFixedOffer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"13_54_SafeERC20.sol\":{\"keccak256\":\"0xca2a1cce29c95562079d1d1bf5e99dc29e0d64b385a6c92df859d0414ccd908f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42695fb74e355e33ba71507315e16f355fa4001a4d49ff0f4584d4cd465ef184\",\"dweb:/ipfs/QmSEcJojmAVjS6R4i1hixcnhugm3mwXjMf5CPrBB8HjhSX\"]},\"14_54_ERC721Holder.sol\":{\"keccak256\":\"0xfc46c4f762239615d31ba45ae92094fc71c49bd6c7fb59ccec38dd285f101602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88324c85c20335b973fa97f152e64d6ea1f42af3ce57079baae898a0195db633\",\"dweb:/ipfs/QmPsqm7knfFhJi7bzdbRsZRxRy2aNmzHfhzyFiQDD4PUtH\"]},\"15_54_ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"16_54_Ownable.sol\":{\"keccak256\":\"0x66a03d4cf54f75978905db625064e129580ba7bca0c8d68d259c6f2f80fd55ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7f4fe6aef097c1ae907579edeb3467de23abf6e7797ce10fec8e3829de56e45\",\"dweb:/ipfs/QmUUDV6KJ9Lsz7rzZqicgbqUxAugfwhBxpVUrNvQMFwNz3\"]},\"17_54_DirectLoanFixedOffer.sol\":{\"keccak256\":\"0x347fd4d0a64ae2797ecbe74ee9c910d01bb1ba1fd3906ab74caada443e6a9308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02bff137e27f2e721a541560a542dbdc547edd84a04d417d6c25127677f04a0b\",\"dweb:/ipfs/QmP7P3REtWQTSiS5WWVJEi5N4QJoVQhkQjxgmTAmLR2iuA\"]},\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"21_54_IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"22_54_Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"23_54_DirectLoanBaseMinimal.sol\":{\"keccak256\":\"0x06acbc1c87f98307ad47e2a9dd17ca23b6436a4a002fec8601bdb275f3fff883\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93994b2402c73020e8d9ef87b549d986fafe69dc0b1a9e9b1bf99f8638fd2a3b\",\"dweb:/ipfs/QmfL8u6qjsSejFWGZRbYE1yJQWYAtPpERfxYF6yW3aog2i\"]},\"24_54_ContractKeys.sol\":{\"keccak256\":\"0xbc0e88b96be83469df452dabdf456b2af3e38875b649406fd0b2b6e59c5667ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b120aa2d95a217f6f96f2ab0ac26a5efaef020ef9b5f6a460c208cb91f0249a\",\"dweb:/ipfs/QmSwbSfSNJN84GrRtvPcHvffKVK8jmtVNSDBExArPsSabu\"]},\"25_54_IDirectLoanBase.sol\":{\"keccak256\":\"0x7510a1b6566c11856fcf7307b5765f07fba194f5617758d85d84f5a121271ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d958d1866dc96349fdb6164aa9d6774841b968e921c7c5fc77cbd0640fb18f98\",\"dweb:/ipfs/QmNmATtAkfEU5hLmLsiEUvFXuhHEqFqeYMKXAzdN91WGzr\"]},\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]},\"27_54_LoanChecksAndCalculations.sol\":{\"keccak256\":\"0xae79ec552bc5ef00278d8f82acbc9bbdcab110a8531ce24cd03967b42c24e560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfad4dd2ce5148000fc776025e9f41d16053ba9c1f9e8b265f49cb2c90203a7f\",\"dweb:/ipfs/QmV6TTAHY4WeUYUVSBJuaDeMoTsGXny6FCh9jZ2gRBwDyE\"]},\"28_54_LoanAirdropUtils.sol\":{\"keccak256\":\"0x3410d63bfd045c86b16fc4ddf446f46ccb606257fee2aa83ddde7000924b279b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571c3fca1368ef5bc6b8e5b8502affa2099e5a0b9a163c5c9dde5369b77a6e3a\",\"dweb:/ipfs/QmPXMDTc3KFmcJZaDbNyDhCkTyUpkocwnkhLSdDBxu1jTg\"]},\"29_54_BaseLoan.sol\":{\"keccak256\":\"0xc2b67aaa818d9746e0cfb4a1e11d2993d63ec0c91822fc922a625cc374b7bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b2b4f4bfb81e63f10568a557d5fe69ed73587dd2c6562f761be64a62101e559\",\"dweb:/ipfs/QmYo8mJnPtpzxudEdRHufBs1eCEwKc1uv3b51BuoqFoBsC\"]},\"30_54_NftReceiver.sol\":{\"keccak256\":\"0x29fc615d267899a88ac3c717b460942ef2c4d85288b5489de67571ee28287d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66fd330a2b95c6bf4e8866a51191cdf3f667f7262339365c706595f0cfa4681\",\"dweb:/ipfs/QmQMZpVFTtitHWaJ3F7jUDreHu5tLAc8kf8miXYhF5K7Ba\"]},\"31_54_NFTfiSigningUtils.sol\":{\"keccak256\":\"0x6c6de3b7ccf316d289c8c28ae23755bca14021853cc28d569cc2a8775e8f1844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9772e2685c0e4cdc6ba45515531991d21b8ab9dbfe80a287be7edf99e91f60dc\",\"dweb:/ipfs/QmbgYwCySqAgiTJCyz29VTxRkY9HdooqKVVP5niCpyhPiH\"]},\"32_54_INftfiHub.sol\":{\"keccak256\":\"0xc784578474998dabaff4116fdd3520c92dd10e7c8d98e415f2239f9d96c8a1a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f70642c1d2664910240ac14b4f8b717d02bac324f7fb3afbdb0dd46effab93d\",\"dweb:/ipfs/QmPpQZTErwXAGVGMeP7xbnUrb2Foak7DonfhwEpKwniuL3\"]},\"33_54_IDirectLoanCoordinator.sol\":{\"keccak256\":\"0x0576d6bd283b2ff48f0afbad951b7d8f051dfc85bbe69b5525be80173df72de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a187fd0527531a1a7bce926ed60a75cf012869761c9b82c8c4acf39ba1b287\",\"dweb:/ipfs/QmTdFNC3kqAifHQc46fW12QfsLNdzsnBC5CFeS8KU4UdJP\"]},\"34_54_INftWrapper.sol\":{\"keccak256\":\"0x64df547c2d3ed2f6720b24844ffba086f175643edcf0b38f0d060cf19637b245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac45e66d50666604434ebcb37f8d9041f2070f935eeec1769b19e49707bfde84\",\"dweb:/ipfs/QmNj2JEFSs4Qzpi8DLvhaqkW3VX9z5pgGXVApuJFCMmDkR\"]},\"35_54_IPermittedPartners.sol\":{\"keccak256\":\"0x72398dc42a7522e77cfa9c4fdfe02f338846ff4b2d2c92985185cf8edfa550f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://febaab9458f9ba5d9c46272d297df5d9f97b78a032782364db008d8ae6d26898\",\"dweb:/ipfs/QmQujERQZbdJ6TbMNAHEeBy5UyM7EcCi8vvuuNUTXwRseT\"]},\"36_54_IPermittedERC20s.sol\":{\"keccak256\":\"0x23fa01735d0fbc2d2c96cbd2171ce5ad1da3122f08ec26b5a90607d9355ab2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80dd001c15c67fa8bb152963b54a41a6adbed412633da9aa72d8dd7722f8f89\",\"dweb:/ipfs/Qmdc3RBLfgMxFBA4yyyjixFged1jXhhoqKxMWa8mDM6jCR\"]},\"37_54_IPermittedNFTs.sol\":{\"keccak256\":\"0xa3ffd2942d166f4d1f8ab21e47dce086b4d01a8b4b5c6692c98e4a26b2b0f99b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f1a9230d3f5104c3e424c02d8798aa46e8a422a47e6fb03df9014162b88f6a5\",\"dweb:/ipfs/QmdLZauWzizG1aKnHrsPb7XSJtwkC8xkqgvxDpazhMr2kQ\"]},\"38_54_IERC1155.sol\":{\"keccak256\":\"0xe206a36fdb3bf0821851840643cb7880a048d947c16492a956367ebae14276a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a566c130fa49a5e6f6c423c257bbdbfeb9675a4f47ea977f4153cf6e3cf47b36\",\"dweb:/ipfs/QmbCXsbNxewkBw3dGYYVYnrAEfvbDkta9Wy9bbGu77KWi2\"]},\"39_54_IAirdropFlashLoan.sol\":{\"keccak256\":\"0x11ac93c6deedf1453b2257883c016d959a8215c9af53c5c31c342c1224b26f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412de44dd11ecefeac5412fa1e2e524d3826982056782c0ba873bda71047128b\",\"dweb:/ipfs/QmR6EdmViHhcGLXbCG5XQ6v7KPMDdWGr7xUkewHtXA74t9\"]},\"40_54_IAirdropReceiverFactory.sol\":{\"keccak256\":\"0xebb81248214ef956da9dff274331ce1a0cd02dc7286684d05ff9c6f242ee5996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb8c20789a9144de8076ca2c0969bc11d90d1a499a8282a42f35a98e07ab53db\",\"dweb:/ipfs/QmeivxsVs7d76JHa46P7JhTG3pFspyu8FZEj8GKUkz2xCL\"]},\"41_54_Pausable.sol\":{\"keccak256\":\"0x9347635dec691e4e18a54bb998ac5e26f5d413b0ac6625a5a87450c7cca85a7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef64d3936ac7fd4fbef75689b0ad0f822dd28ca90927566b043a797592c2819\",\"dweb:/ipfs/QmaYS6NAMkRJD5FnpNxiUNQE18Dds5QujgtU4enXs4nz3U\"]},\"42_54_IERC1155Receiver.sol\":{\"keccak256\":\"0x386464933922eac8150883805363cf9358f409208cdc26b332093d0d1da55973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e495f41079bca08f9663e62fd0c4ae03387566268d05c12c7c726fe0e10b26a4\",\"dweb:/ipfs/QmWC37FqzP18iN5N1tXwhS8E9t3XWuc78jS4ad31i14D1w\"]},\"43_54_IBundleBuilder.sol\":{\"keccak256\":\"0xf9b3ebf0cb17621198973d3885b8fcefb200ac7a2f3dc613b0316e21adc8a48c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306f336537c3a6cf636ca68fc1062659b57739a2a962b58f38e9388541287aac\",\"dweb:/ipfs/QmX2NkYjLkMK7Ux1Lw9yVTVoXfTbhRRB1A6u4s1uF6mmpc\"]},\"44_54_SignatureChecker.sol\":{\"keccak256\":\"0x2d56b73dd8e2f6b1954e8a24ddc0ad1ff2f4988b5571d2c5b6b4b4ff988f9053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40057c8d5eb79a23a1509088ca8e6b4b257e1874f67d499d08b5399aca3bc8f1\",\"dweb:/ipfs/QmYRyz1dEimDJNJLbmvAuX3ptmXR9xqVG9WqrjwdKpiAd1\"]},\"45_54_ECDSA.sol\":{\"keccak256\":\"0xbc991a1cf357ce19480831a40792c814238a3b5458134703682abd8aa39719fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2e3313add3a233ad2d1e9b65cb7c0296bdbe159c6d631da2b1d027b4954926\",\"dweb:/ipfs/QmT8bVda92mptimLgonyq28qENq4sRgy6K3v118CvZcKdP\"]},\"46_54_IERC1271.sol\":{\"keccak256\":\"0x14351164423eade7f2dbac5ca9ab8aeded8694f3b2d7a9e0114a2b3b6558198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7588d5d5a23ccdccfb39eb015939560bdc26fd11efb7e5ff8af23f5a3ce8b003\",\"dweb:/ipfs/QmRuohtRJYDoFGazYwbcbz557HzmQDWuW9phW6Cm8tQhwN\"]}},\"version\":1}","userdoc":{"events":{"AdminFeeUpdated(uint16)":{"notice":"This event is fired whenever the admins change the percent of interest rates earned that they charge as a fee. Note that newAdminFee can never exceed 10,000, since the fee is measured in basis points."},"ERC20Permit(address,bool)":{"notice":"This event is fired whenever the admin sets a ERC20 permit."},"LoanLiquidated(uint32,address,address,uint256,uint256,uint256,uint256,address)":{"notice":"This event is fired whenever a lender liquidates an outstanding loan that is owned to them that has exceeded its duration. The lender receives the underlying NFT collateral, and the borrower no longer needs to repay the loan principal-plus-interest."},"LoanRenegotiated(uint32,address,address,uint32,uint256,uint256,uint256)":{"notice":"This event is fired when some of the terms of a loan are being renegotiated."},"LoanRepaid(uint32,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address)":{"notice":"This event is fired whenever a borrower successfully repays their loan, paying principal-plus-interest-minus-fee to the lender in loanERC20Denomination, paying fee to owner in loanERC20Denomination, and receiving their NFT collateral back."},"LoanStarted(uint32,address,address,(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address),(address,uint16,uint16))":{"notice":"This event is fired whenever a borrower begins a loan by calling NFTfi.beginLoan(), which can only occur after both the lender and borrower have approved their ERC721 and ERC20 contracts to use NFTfi, and when they both have signed off-chain messages that agree on the terms of the loan."},"MaximumLoanDurationUpdated(uint256)":{"notice":"This event is fired whenever the admins change the maximum duration of any loan started for this loan type."}},"kind":"user","methods":{"acceptOffer((uint256,uint256,uint256,address,uint32,uint16,address,address),(uint256,uint256,address,bytes),(address,uint16))":{"notice":"This function is called by the borrower when accepting a lender's offer to begin a loan."},"adminFeeInBasisPoints()":{"notice":"The percentage of interest earned by lenders on this platform that is taken by the contract admin's as a fee, measured in basis points (hundreths of a percent). The max allowed value is 10000."},"cancelLoanCommitmentBeforeLoanHasBegun(uint256)":{"notice":"This function can be called by either a lender or a borrower to cancel all off-chain orders that they have signed that contain this nonce. If the off-chain orders were created correctly, there should only be one off-chain order that contains this nonce at all. The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes. First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce."},"drainERC1155Airdrop(address,uint256,address)":{"notice":"used by the owner account to be able to drain ERC1155 tokens received as airdrops for the locked  collateral NFT-s"},"drainERC20Airdrop(address,address)":{"notice":"used by the owner account to be able to drain ERC20 tokens received as airdrops for the locked  collateral NFT-s"},"drainERC721Airdrop(address,uint256,address)":{"notice":"used by the owner account to be able to drain ERC721 tokens received as airdrops for the locked  collateral NFT-s"},"getERC20Permit(address)":{"notice":"This function can be called by anyone to get the permit associated with the erc20 contract."},"getPayoffAmount(uint32)":{"notice":"This function can be used to view the current quantity of the ERC20 currency used in the specified loan required by the borrower to repay their loan, measured in the smallest unit of the ERC20 currency."},"getWhetherNonceHasBeenUsedForUser(address,uint256)":{"notice":"This function can be used to view whether a particular nonce for a particular user has already been used, either from a successful loan or a cancelled off-chain order."},"liquidateOverdueLoan(uint32)":{"notice":"This function is called by a lender once a loan has finished its duration and the borrower still has not repaid. The lender can call this function to seize the underlying NFT collateral, although the lender gives up all rights to the principal-plus-collateral by doing so. This function is purposefully not pausable in order to prevent an attack where the contract admin's pause the contract and hold hostage the NFT's that are still within it. We intentionally allow anybody to call this function, although only the lender will end up receiving the seized collateral. We are exploring the possbility of incentivizing users to call this function by using some of the admin funds."},"loanIdToLoan(uint32)":{"notice":"A mapping from a loan's identifier to the loan's details, represted by the loan struct."},"loanRepaidOrLiquidated(uint32)":{"notice":"A mapping tracking whether a loan has either been repaid or liquidated. This prevents an attacker trying to repay or liquidate the same loan twice."},"maximumLoanDuration()":{"notice":"The maximum duration of any loan started for this loan type, measured in seconds. This is both a sanity-check for borrowers and an upper limit on how long admins will have to support v1 of this contract if they eventually deprecate it, as well as a check to ensure that the loan duration never exceeds the space alotted for it in the loan struct."},"payBackLoan(uint32)":{"notice":"This function is called by a anyone to repay a loan. It can be called at any time after the loan has begun and before loan expiry.. The caller will pay a pro-rata portion of their interest if the loan is paid off early and the loan is pro-rated type, but the complete repayment amount if it is fixed type. The the borrower (current owner of the obligation note) will get the collaterl NFT back. This function is purposefully not pausable in order to prevent an attack where the contract admin's pause the contract and hold hostage the NFT's that are still within it."},"pullAirdrop(uint32,address,bytes,address,uint256,bool,uint256)":{"notice":"this function initiates a flashloan to pull an airdrop from a tartget contract"},"setERC20Permit(address,bool)":{"notice":"This function can be called by admins to change the permitted status of an ERC20 currency. This includes both adding an ERC20 currency to the permitted list and removing it."},"setERC20Permits(address[],bool[])":{"notice":"This function can be called by admins to change the permitted status of a batch of ERC20 currency. This includes both adding an ERC20 currency to the permitted list and removing it."},"updateAdminFee(uint16)":{"notice":"This function can be called by admins to change the percent of interest rates earned that they charge as a fee. Note that newAdminFee can never exceed 10,000, since the fee is measured in basis points."},"updateMaximumLoanDuration(uint256)":{"notice":"This function can be called by admins to change the maximumLoanDuration. Note that they can never change maximumLoanDuration to be greater than UINT32_MAX, since that's the maximum space alotted for the duration in the loan struct."},"wrapCollateral(uint32)":{"notice":"this function creates a proxy contract wrapping the collateral to be able to catch an expected airdrop"}},"notice":"Main contract for NFTfi Direct Loans Fixed Type. This contract manages the ability to create NFT-backed peer-to-peer loans of type Fixed (agreed to be a fixed-repayment loan) where the borrower pays the maximumRepaymentAmount regardless of whether they repay early or not. There are two ways to commence an NFT-backed loan: a. The borrower accepts a lender's offer by calling `acceptOffer`.   1. the borrower calls nftContract.approveAll(NFTfi), approving the NFTfi contract to move their NFT's on their be1alf.   2. the lender calls erc20Contract.approve(NFTfi), allowing NFTfi to move the lender's ERC20 tokens on their behalf.   3. the lender signs an off-chain message, proposing its offer terms.   4. the borrower calls `acceptOffer` to accept these terms and enter into the loan. The NFT is stored in the contract, the borrower receives the loan principal in the specified ERC20 currency, the lender receives an NFTfi promissory note (in ERC721 form) that represents the rights to either the principal-plus-interest, or the underlying NFT collateral if the borrower does not pay back in time, and the borrower receives obligation receipt (in ERC721 form) that gives them the right to pay back the loan and get the collateral back. b. The lender accepts a borrowe's binding terms by calling `acceptListing`.   1. the borrower calls nftContract.approveAll(NFTfi), approving the NFTfi contract to move their NFT's on their be1alf.   2. the lender calls erc20Contract.approve(NFTfi), allowing NFTfi to move the lender's ERC20 tokens on their behalf.   3. the borrower signs an off-chain message, proposing its binding terms.   4. the lender calls `acceptListing` with an offer matching the binding terms and enter into the loan. The NFT is stored in the contract, the borrower receives the loan principal in the specified ERC20 currency, the lender receives an NFTfi promissory note (in ERC721 form) that represents the rights to either the principal-plus-interest, or the underlying NFT collateral if the borrower does not pay back in time, and the borrower receives obligation receipt (in ERC721 form) that gives them the right to pay back the loan and get the collateral back. The lender can freely transfer and trade this ERC721 promissory note as they wish, with the knowledge that transferring the ERC721 promissory note tranfsers the rights to principal-plus-interest and/or collateral, and that they will no longer have a claim on the loan. The ERC721 promissory note itself represents that claim. The borrower can freely transfer and trade this ERC721 obligaiton receipt as they wish, with the knowledge that transferring the ERC721 obligaiton receipt tranfsers the rights right to pay back the loan and get the collateral back. A loan may end in one of two ways: - First, a borrower may call NFTfi.payBackLoan() and pay back the loan plus interest at any time, in which case they receive their NFT back in the same transaction. - Second, if the loan's duration has passed and the loan has not been paid back yet, a lender can call NFTfi.liquidateOverdueLoan(), in which case they receive the underlying NFT collateral and forfeit the rights to the principal-plus-interest, which the borrower now keeps.","version":1}}},"18_54_IMigrationBase.sol":{"IMigrationBase":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"flushToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_pause","type":"bool"}],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":{"details":"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"flushToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"18_54_IMigrationBase.sol\":\"IMigrationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_54_INFTWithDescriptor.sol\":{\"keccak256\":\"0xa65ff18a7c35e3a1d4ced320590e512a5a1ac3b5038529882019344b93dc1a1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15800408246c27da705c6b3fd5f95f1a3cc0d12cee025e5fd74b76687478058\",\"dweb:/ipfs/QmNkNxrxM4fd67JrDD5M1u16WoBVm9fd9fcgPCcUuhiApw\"]},\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"18_54_IMigrationBase.sol\":{\"keccak256\":\"0xf9e59cf6ced499affc327b3fac756fde2b96b445f869f0e9148321bdc7c18f8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f32feaa36b7e71ade223e5d1b7ff5404e60a4c2fa4ed3266bc49793502f6b5ef\",\"dweb:/ipfs/QmWtzUMCPAf5uN2hhb32vvUCyxRazaX3qTQWVqCgsV7dj3\"]},\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"47_54_IOriginationController.sol\":{\"keccak256\":\"0xe791f5f520f1cb15a1c76bb084cce0ac6cf83edf22b4c512f2b76c5758c97300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf5f43c86562ab9ee8d325b33ad4b45a88a48089e3c607cce0f8859973b00686\",\"dweb:/ipfs/QmUaoEfuaW71te4xW2YiqcZNP71udWqbdd1LdFj4B5FDWf\"]},\"48_54_IFeeController.sol\":{\"keccak256\":\"0x52504aacf04a9d98a7ba0629e876a08b48c689c448d4380cc463766b502a93c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e36510694ee9e01200bd6e6dd59399d614dede55c29ddf6ba918f9d791a744\",\"dweb:/ipfs/QmVnBaAednJhiCvNoAjcTYXSxxXYt658J9RyT4ZALckSYH\"]},\"49_54_IFlashLoanRecipient.sol\":{\"keccak256\":\"0x012004ae1b59c16147d2f89a620d914b502b13375deb50c38449260a40d64b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b199641646072175d469e8fb90dd2c421be9dc69c805691cac58c0f1694f75\",\"dweb:/ipfs/QmYaNPY6Zyoy9xFnYRSd21uCq1QyxdrSdAEPwfH4PVUt39\"]},\"50_54_ILoanCoreV2.sol\":{\"keccak256\":\"0x58368297ba52881f19049fd73e17427b2123f8bb0ea49436bb6746bd158525b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44251f9ab1cd8fedf12e98711105bc991740a021b39c7a0200433e12c291de13\",\"dweb:/ipfs/QmWVqGQmEUkW2ft5Ey3YvxbAC7eiPoCdZqBtkdZgaBMFzw\"]},\"51_54_IRepaymentControllerV2.sol\":{\"keccak256\":\"0xbd66b6924203761384439ba6ca64afeab9b02028f5d8845b4824c7dc14bea889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ffc27e038dd979b277725babfebc627bdb0f7542c0113c8f190c7584e6af29\",\"dweb:/ipfs/QmeoVVzPbcG8i1RrbXd27DGSBWANdH9DqhAQMPv3fUxgp4\"]},\"52_54_LoanLibraryV2.sol\":{\"keccak256\":\"0xaa2cc2ea7a284f5a1f99ffb855af5094f9373de393d670976b49ac4f25e2fdf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cac05113832b5711f442c3dfb04a3bfe8e5bd7368b81b04ee98f15eb6dec91a\",\"dweb:/ipfs/QmVu6NbKYs3z1LXAHD9YJibUcEQC3qZdM2mQBpcgE57SPE\"]},\"53_54_IPromissoryNoteV2.sol\":{\"keccak256\":\"0x580cfeff24e6dc6daa3400ed6ca0f88d471529dcc2db4c0cb2aafc96ea8cce4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76707f9b622ed47dd57d2c272720f7a29ead966b1cfdf04e5df9ade27845418\",\"dweb:/ipfs/Qma831Nq8ZngeaebhehQcGY1ibp9RQfXf9u4ynBQfMH7Ws\"]},\"54_54_IFeeControllerV2.sol\":{\"keccak256\":\"0x7529f71f5b551f705356b9a949407fc9cbe7b60d554f016a5cb005a2d0ce7e8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79d237e8526da576557d0353154e2f13e6e5fffe3807eb2eab52c67bfaccae3\",\"dweb:/ipfs/QmeTvhxJMqSFRHuwgd44s41pBRkXaqgPBzgX1ocA9dAKGX\"]},\"6_54_ILoanCore.sol\":{\"keccak256\":\"0xc5993fe6e7dd4826897f1866f2a35ccb7b0cb5894b9df04b1872d0ff1b197261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fa76832ad15227f30919d41326f0749cfceac7b0ab67d8f944cba8af7921e\",\"dweb:/ipfs/QmdjZTDT7Hs6rBwJy6BFB5fGc9taabSxmk9ERPSm9XEEd8\"]},\"7_54_LoanLibrary.sol\":{\"keccak256\":\"0xd743e4c985ac20b24c724eb4a06c6ce129d92eb781ab86db7927a0ee2665b77a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0abc0f22341bf88f4427dc707bdd717e3664e6d067f564892347336dc097b9\",\"dweb:/ipfs/QmcGszcBq13arGxkBKX9mga8cqWCiVhiw5XpCanaxh8qeS\"]},\"8_54_IPromissoryNote.sol\":{\"keccak256\":\"0xed6dd50ea09b63ae6e88141ad4bd69c4b291de7fc5148b8b94b56c962d53905f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af3e913a5130ab73499a61db0055b8e008d11f4d69e4b914fbefe07deaf074a0\",\"dweb:/ipfs/QmVSBKHRRaDDRXFWVQYazqbinxPtCjXSVbt6BMmkZ21rVa\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"19_54_IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"19_54_IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"1_54_LP1MigrationWithItems.sol":{"LP1MigrationWithItems":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"_vault","type":"address"},{"components":[{"internalType":"contract IFeeController","name":"feeControllerV3","type":"address"},{"internalType":"contract IOriginationController","name":"originationControllerV3","type":"address"},{"internalType":"contract ILoanCore","name":"loanCoreV3","type":"address"},{"internalType":"contract IERC721","name":"borrowerNoteV3","type":"address"}],"internalType":"struct LP1MigrationBase.OperationContracts","name":"_opContracts","type":"tuple"},{"components":[{"internalType":"address","name":"directLoanFixedOffer","type":"address"},{"internalType":"address","name":"loanCoordinator","type":"address"}],"internalType":"struct LP1MigrationBase.LP1Deployment[]","name":"_deployments","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"borrower","type":"address"}],"name":"MR_CallerNotBorrower","type":"error"},{"inputs":[{"internalType":"uint256","name":"oldCollateralId","type":"uint256"},{"internalType":"uint256","name":"v3CollateralId","type":"uint256"}],"name":"MR_CollateralIdMismatch","type":"error"},{"inputs":[{"internalType":"address","name":"oldCollateral","type":"address"},{"internalType":"address","name":"v3Collateral","type":"address"}],"name":"MR_CollateralMismatch","type":"error"},{"inputs":[{"internalType":"address","name":"oldCurrency","type":"address"},{"internalType":"address","name":"v3Currency","type":"address"}],"name":"MR_CurrencyMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"leftoverPrincipal","type":"uint256"},{"internalType":"uint256","name":"needFromBorrower","type":"uint256"}],"name":"MR_FundsConflict","type":"error"},{"inputs":[{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"allowance","type":"uint256"}],"name":"MR_InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"name":"MR_InsufficientFunds","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MR_NotCollateralOwner","type":"error"},{"inputs":[],"name":"MR_Paused","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"lendingPool","type":"address"}],"name":"MR_UnknownCaller","type":"error"},{"inputs":[{"internalType":"address","name":"borrower","type":"address"}],"name":"R_BorrowerNotReset","type":"error"},{"inputs":[],"name":"R_StateAlreadySet","type":"error"},{"inputs":[{"internalType":"address","name":"providedBorrower","type":"address"},{"internalType":"address","name":"cachedBorrower","type":"address"}],"name":"R_UnknownBorrower","type":"error"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"R_ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"oldLoanId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newLoanId","type":"uint256"}],"name":"Migration","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"VAULT","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrower","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrowerNote","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"deployments","outputs":[{"internalType":"address","name":"directLoanFixedOffer","type":"address"},{"internalType":"address","name":"loanCoordinator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeController","outputs":[{"internalType":"contract IFeeController","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"flushToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"loanCore","outputs":[{"internalType":"contract ILoanCore","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"},{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"newLoanTerms","type":"tuple"},{"internalType":"address","name":"lender","type":"address"},{"internalType":"uint160","name":"nonce","type":"uint160"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LP1MigrationBase.Signature","name":"sig","type":"tuple"},{"components":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"verifier","type":"address"}],"internalType":"struct LoanLibrary.Predicate[]","name":"itemPredicates","type":"tuple[]"},{"internalType":"enum LP1MigrationBase.LoanType","name":"loanType","type":"uint8"}],"name":"migrateLoanWithItems","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"originationController","outputs":[{"internalType":"contract IOriginationController","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_pause","type":"bool"}],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"Non-Fungible Technologies, Inc. This contract is used to migrate a loan from the other lending protocolss to the Arcade V3 lending protocol. The migration mechanism takes out a flash loan for the maximumRepaymentAmount of the old loan from Balancer pool, repays the old loan, and starts a new loan on V3. This migratiion contract can be used with an items signature signed by a lender. This contract only works with ERC721 collateral.","errors":{"MR_CallerNotBorrower(address,address)":[{"params":{"borrower":"Holder of the obligationReceiptToken address","caller":"The address of the caller."}}],"MR_CollateralIdMismatch(uint256,uint256)":[{"params":{"oldCollateralId":"The old collateral token ID for the old loan.","v3CollateralId":"The V3 collateral token ID."}}],"MR_CollateralMismatch(address,address)":[{"params":{"oldCollateral":"The collateral token address for the old loan.","v3Collateral":"The V3 collateral token address."}}],"MR_CurrencyMismatch(address,address)":[{"params":{"oldCurrency":"The payable currency address for the old loan.","v3Currency":"The V3 payable currency address."}}],"MR_FundsConflict(uint256,uint256)":[{"params":{"leftoverPrincipal":"The leftover principal from the V3 loan.","needFromBorrower":"The amount needed from the borrower to cover the difference."}}],"MR_InsufficientAllowance(address,uint256,uint256)":[{"params":{"allowance":"Current allowance of the borrower.","amount":"The difference amount.","borrower":"The address of the borrower."}}],"MR_InsufficientFunds(address,uint256,uint256)":[{"params":{"amount":"The difference amount.","balance":"Current balance of the borrower.","borrower":"The address of the borrower."}}],"MR_NotCollateralOwner(address)":[{"params":{"owner":"The owner of the collateral token."}}],"MR_UnknownCaller(address,address)":[{"params":{"caller":"The address of the caller.","lendingPool":"Expected address of the flash loan provider."}}],"R_BorrowerNotReset(address)":[{"params":{"borrower":"The borrower address."}}],"R_UnknownBorrower(address,address)":[{"params":{"cachedBorrower":"Borrower address saved in the rollover contract.","providedBorrower":"Borrower address passed in the flash loan operation data."}}],"R_ZeroAddress(string)":[{"params":{"name":"The name of the contract."}}]},"kind":"dev","methods":{"migrateLoanWithItems(uint256,(uint256,uint256,address,uint96,uint256,address,uint96,bytes32),address,uint160,(uint8,bytes32,bytes32),(bytes,address)[],uint8)":{"params":{"itemPredicates":"The item predicates specified by lender for new loan.","lender":"The address of the lender.","loanId":"The ID of the LP1 loan to be migrated.","newLoanTerms":"The terms of the new loan.","nonce":"The nonce for the signature.","sig":"The signature for new loan."}},"onERC721Received(address,address,uint256,bytes)":{"details":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."},"owner()":{"details":"Returns the address of the current owner."},"pause(bool)":{"details":"This function is only to be used if a vulnerability is found or the contract      is no longer being used.","params":{"_pause":"The state to set the contract to."}},"receiveFlashLoan(address[],uint256[],uint256[],bytes)":{"details":"The caller of this function must be the lending pool.","params":{"amounts":"The amount that was borrowed in Flash Loan.","assets":"The ERC20 address that was borrowed in Flash Loan.","feeAmounts":"The fees that are due to the lending pool.","params":"The data to be executed after receiving Flash Loan."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"LP1MigrationWithItems","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"_vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IFeeController\",\"name\":\"feeControllerV3\",\"type\":\"address\"},{\"internalType\":\"contract IOriginationController\",\"name\":\"originationControllerV3\",\"type\":\"address\"},{\"internalType\":\"contract ILoanCore\",\"name\":\"loanCoreV3\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"borrowerNoteV3\",\"type\":\"address\"}],\"internalType\":\"struct LP1MigrationBase.OperationContracts\",\"name\":\"_opContracts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"directLoanFixedOffer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanCoordinator\",\"type\":\"address\"}],\"internalType\":\"struct LP1MigrationBase.LP1Deployment[]\",\"name\":\"_deployments\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"MR_CallerNotBorrower\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oldCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v3CollateralId\",\"type\":\"uint256\"}],\"name\":\"MR_CollateralIdMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"v3Collateral\",\"type\":\"address\"}],\"name\":\"MR_CollateralMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"v3Currency\",\"type\":\"address\"}],\"name\":\"MR_CurrencyMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leftoverPrincipal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needFromBorrower\",\"type\":\"uint256\"}],\"name\":\"MR_FundsConflict\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"MR_InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"MR_InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MR_NotCollateralOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MR_Paused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPool\",\"type\":\"address\"}],\"name\":\"MR_UnknownCaller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"R_BorrowerNotReset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"R_StateAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"providedBorrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cachedBorrower\",\"type\":\"address\"}],\"name\":\"R_UnknownBorrower\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"R_ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldLoanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLoanId\",\"type\":\"uint256\"}],\"name\":\"Migration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VAULT\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowerNote\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployments\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"directLoanFixedOffer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanCoordinator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"internalType\":\"contract IFeeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"flushToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loanCore\",\"outputs\":[{\"internalType\":\"contract ILoanCore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"newLoanTerms\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct LP1MigrationBase.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"internalType\":\"struct LoanLibrary.Predicate[]\",\"name\":\"itemPredicates\",\"type\":\"tuple[]\"},{\"internalType\":\"enum LP1MigrationBase.LoanType\",\"name\":\"loanType\",\"type\":\"uint8\"}],\"name\":\"migrateLoanWithItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"originationController\",\"outputs\":[{\"internalType\":\"contract IOriginationController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Non-Fungible Technologies, Inc. This contract is used to migrate a loan from the other lending protocolss to the Arcade V3 lending protocol. The migration mechanism takes out a flash loan for the maximumRepaymentAmount of the old loan from Balancer pool, repays the old loan, and starts a new loan on V3. This migratiion contract can be used with an items signature signed by a lender. This contract only works with ERC721 collateral.\",\"errors\":{\"MR_CallerNotBorrower(address,address)\":[{\"params\":{\"borrower\":\"Holder of the obligationReceiptToken address\",\"caller\":\"The address of the caller.\"}}],\"MR_CollateralIdMismatch(uint256,uint256)\":[{\"params\":{\"oldCollateralId\":\"The old collateral token ID for the old loan.\",\"v3CollateralId\":\"The V3 collateral token ID.\"}}],\"MR_CollateralMismatch(address,address)\":[{\"params\":{\"oldCollateral\":\"The collateral token address for the old loan.\",\"v3Collateral\":\"The V3 collateral token address.\"}}],\"MR_CurrencyMismatch(address,address)\":[{\"params\":{\"oldCurrency\":\"The payable currency address for the old loan.\",\"v3Currency\":\"The V3 payable currency address.\"}}],\"MR_FundsConflict(uint256,uint256)\":[{\"params\":{\"leftoverPrincipal\":\"The leftover principal from the V3 loan.\",\"needFromBorrower\":\"The amount needed from the borrower to cover the difference.\"}}],\"MR_InsufficientAllowance(address,uint256,uint256)\":[{\"params\":{\"allowance\":\"Current allowance of the borrower.\",\"amount\":\"The difference amount.\",\"borrower\":\"The address of the borrower.\"}}],\"MR_InsufficientFunds(address,uint256,uint256)\":[{\"params\":{\"amount\":\"The difference amount.\",\"balance\":\"Current balance of the borrower.\",\"borrower\":\"The address of the borrower.\"}}],\"MR_NotCollateralOwner(address)\":[{\"params\":{\"owner\":\"The owner of the collateral token.\"}}],\"MR_UnknownCaller(address,address)\":[{\"params\":{\"caller\":\"The address of the caller.\",\"lendingPool\":\"Expected address of the flash loan provider.\"}}],\"R_BorrowerNotReset(address)\":[{\"params\":{\"borrower\":\"The borrower address.\"}}],\"R_UnknownBorrower(address,address)\":[{\"params\":{\"cachedBorrower\":\"Borrower address saved in the rollover contract.\",\"providedBorrower\":\"Borrower address passed in the flash loan operation data.\"}}],\"R_ZeroAddress(string)\":[{\"params\":{\"name\":\"The name of the contract.\"}}]},\"kind\":\"dev\",\"methods\":{\"migrateLoanWithItems(uint256,(uint256,uint256,address,uint96,uint256,address,uint96,bytes32),address,uint160,(uint8,bytes32,bytes32),(bytes,address)[],uint8)\":{\"params\":{\"itemPredicates\":\"The item predicates specified by lender for new loan.\",\"lender\":\"The address of the lender.\",\"loanId\":\"The ID of the LP1 loan to be migrated.\",\"newLoanTerms\":\"The terms of the new loan.\",\"nonce\":\"The nonce for the signature.\",\"sig\":\"The signature for new loan.\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(bool)\":{\"details\":\"This function is only to be used if a vulnerability is found or the contract      is no longer being used.\",\"params\":{\"_pause\":\"The state to set the contract to.\"}},\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"The caller of this function must be the lending pool.\",\"params\":{\"amounts\":\"The amount that was borrowed in Flash Loan.\",\"assets\":\"The ERC20 address that was borrowed in Flash Loan.\",\"feeAmounts\":\"The fees that are due to the lending pool.\",\"params\":\"The data to be executed after receiving Flash Loan.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"LP1MigrationWithItems\",\"version\":1},\"userdoc\":{\"errors\":{\"MR_CallerNotBorrower(address,address)\":[{\"notice\":\"Only the holder of the obligationReceiptToken can migrate their loan.\"}],\"MR_CollateralIdMismatch(uint256,uint256)\":[{\"notice\":\"The LP1 and V3 collateral token IDs must be the same.\"}],\"MR_CollateralMismatch(address,address)\":[{\"notice\":\"The LP1 and V3 collateral tokens must be the same.\"}],\"MR_CurrencyMismatch(address,address)\":[{\"notice\":\"The LP1 and V3 payable currency tokens must be the same so that the flash loan can         be repaid.\"}],\"MR_FundsConflict(uint256,uint256)\":[{\"notice\":\"An accounting check to verify that either the leftover V3 loan principal is         zero or the amount needed from the borrower to cover any difference is zero.         Either there is leftover principal that needs to be sent to the borrower, or         the borrower needs to send funds to cover the difference between the LP1 repayment         amount and the new V3 loan principal minus any fees.\"}],\"MR_InsufficientAllowance(address,uint256,uint256)\":[{\"notice\":\"The allowance of the borrower to the V3 migration contract is insufficient          to repay the difference between the LP1 loan and the V3 loan principal minus fees.\"}],\"MR_InsufficientFunds(address,uint256,uint256)\":[{\"notice\":\"The balance of the borrower is insufficient to repay the difference between         the loan and the V3 loan principal minus fees.\"}],\"MR_NotCollateralOwner(address)\":[{\"notice\":\"After repaying the LP1 loan, the LP1 -> V3 migration contract must be the owner of         the collateral token.\"}],\"MR_Paused()\":[{\"notice\":\"Contract is paused, migration operations are blocked.\"}],\"MR_UnknownCaller(address,address)\":[{\"notice\":\"The flash loan callback caller is not recognized. The caller must be the flash         loan provider.\"}],\"R_BorrowerNotReset(address)\":[{\"notice\":\"The borrower state must be address(0) to initiate a rollover sequence.\"}],\"R_StateAlreadySet()\":[{\"notice\":\"The rollover contract is already in the specified pause state.\"}],\"R_UnknownBorrower(address,address)\":[{\"notice\":\"The borrower address saved in the rollover contract is not the same as the         borrower address provided in the flash loan operation data. The initiator of         the flash loan must be the rollover contract.\"}],\"R_ZeroAddress(string)\":[{\"notice\":\"Cannot pass the zero address as an argument.\"}]},\"kind\":\"user\",\"methods\":{\"borrower()\":{\"notice\":\"State variable used for checking the inheriting contract initiated the flash         loan. When a rollover function is called the borrowers address is cached here         and checked against the opData in the flash loan callback.\"},\"deployments(uint256)\":{\"notice\":\"V3 lending protocol contract references\"},\"flushToken(address,address)\":{\"notice\":\"Function to be used by the contract owner to withdraw any ERC20 tokens that         are sent to the contract and get stuck.\"},\"migrateLoanWithItems(uint256,(uint256,uint256,address,uint96,uint256,address,uint96,bytes32),address,uint160,(uint8,bytes32,bytes32),(bytes,address)[],uint8)\":{\"notice\":\"Mirage a loan from LP1 to V3 using an items signature. Validates new         loan terms against the old terms. Takes out Flash Loan for maximumRepaymentAmount,         repays old loan, and starts new loan on V3.\"},\"pause(bool)\":{\"notice\":\"Function to be used by the contract owner to pause the contract.\"},\"paused()\":{\"notice\":\"state variable for pausing the contract\"},\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"notice\":\"Callback function for flash loan.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1_54_LP1MigrationWithItems.sol\":\"LP1MigrationWithItems\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_54_INFTWithDescriptor.sol\":{\"keccak256\":\"0xa65ff18a7c35e3a1d4ced320590e512a5a1ac3b5038529882019344b93dc1a1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15800408246c27da705c6b3fd5f95f1a3cc0d12cee025e5fd74b76687478058\",\"dweb:/ipfs/QmNkNxrxM4fd67JrDD5M1u16WoBVm9fd9fcgPCcUuhiApw\"]},\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"13_54_SafeERC20.sol\":{\"keccak256\":\"0xca2a1cce29c95562079d1d1bf5e99dc29e0d64b385a6c92df859d0414ccd908f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42695fb74e355e33ba71507315e16f355fa4001a4d49ff0f4584d4cd465ef184\",\"dweb:/ipfs/QmSEcJojmAVjS6R4i1hixcnhugm3mwXjMf5CPrBB8HjhSX\"]},\"14_54_ERC721Holder.sol\":{\"keccak256\":\"0xfc46c4f762239615d31ba45ae92094fc71c49bd6c7fb59ccec38dd285f101602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88324c85c20335b973fa97f152e64d6ea1f42af3ce57079baae898a0195db633\",\"dweb:/ipfs/QmPsqm7knfFhJi7bzdbRsZRxRy2aNmzHfhzyFiQDD4PUtH\"]},\"15_54_ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"16_54_Ownable.sol\":{\"keccak256\":\"0x66a03d4cf54f75978905db625064e129580ba7bca0c8d68d259c6f2f80fd55ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7f4fe6aef097c1ae907579edeb3467de23abf6e7797ce10fec8e3829de56e45\",\"dweb:/ipfs/QmUUDV6KJ9Lsz7rzZqicgbqUxAugfwhBxpVUrNvQMFwNz3\"]},\"17_54_DirectLoanFixedOffer.sol\":{\"keccak256\":\"0x347fd4d0a64ae2797ecbe74ee9c910d01bb1ba1fd3906ab74caada443e6a9308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02bff137e27f2e721a541560a542dbdc547edd84a04d417d6c25127677f04a0b\",\"dweb:/ipfs/QmP7P3REtWQTSiS5WWVJEi5N4QJoVQhkQjxgmTAmLR2iuA\"]},\"18_54_IMigrationBase.sol\":{\"keccak256\":\"0xf9e59cf6ced499affc327b3fac756fde2b96b445f869f0e9148321bdc7c18f8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f32feaa36b7e71ade223e5d1b7ff5404e60a4c2fa4ed3266bc49793502f6b5ef\",\"dweb:/ipfs/QmWtzUMCPAf5uN2hhb32vvUCyxRazaX3qTQWVqCgsV7dj3\"]},\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"1_54_LP1MigrationWithItems.sol\":{\"keccak256\":\"0xecf6da4ef0be3fe9cd15e3cfb8599080d2b0ac9188236519845c25d92bac6a4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ca3e35a6e87b726cfec267046cc06ddbb0247c6b3cd3e60ec320ea50d63005\",\"dweb:/ipfs/QmXvaQdnLaSjKXgosnLhLatLWCBYFe4DJ4ZWVGfNBRiQ4A\"]},\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"21_54_IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"22_54_Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"23_54_DirectLoanBaseMinimal.sol\":{\"keccak256\":\"0x06acbc1c87f98307ad47e2a9dd17ca23b6436a4a002fec8601bdb275f3fff883\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93994b2402c73020e8d9ef87b549d986fafe69dc0b1a9e9b1bf99f8638fd2a3b\",\"dweb:/ipfs/QmfL8u6qjsSejFWGZRbYE1yJQWYAtPpERfxYF6yW3aog2i\"]},\"24_54_ContractKeys.sol\":{\"keccak256\":\"0xbc0e88b96be83469df452dabdf456b2af3e38875b649406fd0b2b6e59c5667ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b120aa2d95a217f6f96f2ab0ac26a5efaef020ef9b5f6a460c208cb91f0249a\",\"dweb:/ipfs/QmSwbSfSNJN84GrRtvPcHvffKVK8jmtVNSDBExArPsSabu\"]},\"25_54_IDirectLoanBase.sol\":{\"keccak256\":\"0x7510a1b6566c11856fcf7307b5765f07fba194f5617758d85d84f5a121271ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d958d1866dc96349fdb6164aa9d6774841b968e921c7c5fc77cbd0640fb18f98\",\"dweb:/ipfs/QmNmATtAkfEU5hLmLsiEUvFXuhHEqFqeYMKXAzdN91WGzr\"]},\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]},\"27_54_LoanChecksAndCalculations.sol\":{\"keccak256\":\"0xae79ec552bc5ef00278d8f82acbc9bbdcab110a8531ce24cd03967b42c24e560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfad4dd2ce5148000fc776025e9f41d16053ba9c1f9e8b265f49cb2c90203a7f\",\"dweb:/ipfs/QmV6TTAHY4WeUYUVSBJuaDeMoTsGXny6FCh9jZ2gRBwDyE\"]},\"28_54_LoanAirdropUtils.sol\":{\"keccak256\":\"0x3410d63bfd045c86b16fc4ddf446f46ccb606257fee2aa83ddde7000924b279b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571c3fca1368ef5bc6b8e5b8502affa2099e5a0b9a163c5c9dde5369b77a6e3a\",\"dweb:/ipfs/QmPXMDTc3KFmcJZaDbNyDhCkTyUpkocwnkhLSdDBxu1jTg\"]},\"29_54_BaseLoan.sol\":{\"keccak256\":\"0xc2b67aaa818d9746e0cfb4a1e11d2993d63ec0c91822fc922a625cc374b7bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b2b4f4bfb81e63f10568a557d5fe69ed73587dd2c6562f761be64a62101e559\",\"dweb:/ipfs/QmYo8mJnPtpzxudEdRHufBs1eCEwKc1uv3b51BuoqFoBsC\"]},\"2_54_IMigrationWithItems.sol\":{\"keccak256\":\"0x58bbd12f52dee0bc38974c546b877dbe5b6680129083b013532b2793d0d07252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fada659622855363a13008d5533036131cd7d19f3406528e598928653e0aefca\",\"dweb:/ipfs/QmSN896tkJp7aCFfh4jpdBditFXQoPXP1iHCbui4rmVPyX\"]},\"30_54_NftReceiver.sol\":{\"keccak256\":\"0x29fc615d267899a88ac3c717b460942ef2c4d85288b5489de67571ee28287d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66fd330a2b95c6bf4e8866a51191cdf3f667f7262339365c706595f0cfa4681\",\"dweb:/ipfs/QmQMZpVFTtitHWaJ3F7jUDreHu5tLAc8kf8miXYhF5K7Ba\"]},\"31_54_NFTfiSigningUtils.sol\":{\"keccak256\":\"0x6c6de3b7ccf316d289c8c28ae23755bca14021853cc28d569cc2a8775e8f1844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9772e2685c0e4cdc6ba45515531991d21b8ab9dbfe80a287be7edf99e91f60dc\",\"dweb:/ipfs/QmbgYwCySqAgiTJCyz29VTxRkY9HdooqKVVP5niCpyhPiH\"]},\"32_54_INftfiHub.sol\":{\"keccak256\":\"0xc784578474998dabaff4116fdd3520c92dd10e7c8d98e415f2239f9d96c8a1a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f70642c1d2664910240ac14b4f8b717d02bac324f7fb3afbdb0dd46effab93d\",\"dweb:/ipfs/QmPpQZTErwXAGVGMeP7xbnUrb2Foak7DonfhwEpKwniuL3\"]},\"33_54_IDirectLoanCoordinator.sol\":{\"keccak256\":\"0x0576d6bd283b2ff48f0afbad951b7d8f051dfc85bbe69b5525be80173df72de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a187fd0527531a1a7bce926ed60a75cf012869761c9b82c8c4acf39ba1b287\",\"dweb:/ipfs/QmTdFNC3kqAifHQc46fW12QfsLNdzsnBC5CFeS8KU4UdJP\"]},\"34_54_INftWrapper.sol\":{\"keccak256\":\"0x64df547c2d3ed2f6720b24844ffba086f175643edcf0b38f0d060cf19637b245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac45e66d50666604434ebcb37f8d9041f2070f935eeec1769b19e49707bfde84\",\"dweb:/ipfs/QmNj2JEFSs4Qzpi8DLvhaqkW3VX9z5pgGXVApuJFCMmDkR\"]},\"35_54_IPermittedPartners.sol\":{\"keccak256\":\"0x72398dc42a7522e77cfa9c4fdfe02f338846ff4b2d2c92985185cf8edfa550f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://febaab9458f9ba5d9c46272d297df5d9f97b78a032782364db008d8ae6d26898\",\"dweb:/ipfs/QmQujERQZbdJ6TbMNAHEeBy5UyM7EcCi8vvuuNUTXwRseT\"]},\"36_54_IPermittedERC20s.sol\":{\"keccak256\":\"0x23fa01735d0fbc2d2c96cbd2171ce5ad1da3122f08ec26b5a90607d9355ab2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80dd001c15c67fa8bb152963b54a41a6adbed412633da9aa72d8dd7722f8f89\",\"dweb:/ipfs/Qmdc3RBLfgMxFBA4yyyjixFged1jXhhoqKxMWa8mDM6jCR\"]},\"37_54_IPermittedNFTs.sol\":{\"keccak256\":\"0xa3ffd2942d166f4d1f8ab21e47dce086b4d01a8b4b5c6692c98e4a26b2b0f99b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f1a9230d3f5104c3e424c02d8798aa46e8a422a47e6fb03df9014162b88f6a5\",\"dweb:/ipfs/QmdLZauWzizG1aKnHrsPb7XSJtwkC8xkqgvxDpazhMr2kQ\"]},\"38_54_IERC1155.sol\":{\"keccak256\":\"0xe206a36fdb3bf0821851840643cb7880a048d947c16492a956367ebae14276a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a566c130fa49a5e6f6c423c257bbdbfeb9675a4f47ea977f4153cf6e3cf47b36\",\"dweb:/ipfs/QmbCXsbNxewkBw3dGYYVYnrAEfvbDkta9Wy9bbGu77KWi2\"]},\"39_54_IAirdropFlashLoan.sol\":{\"keccak256\":\"0x11ac93c6deedf1453b2257883c016d959a8215c9af53c5c31c342c1224b26f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412de44dd11ecefeac5412fa1e2e524d3826982056782c0ba873bda71047128b\",\"dweb:/ipfs/QmR6EdmViHhcGLXbCG5XQ6v7KPMDdWGr7xUkewHtXA74t9\"]},\"3_54_LP1MigrationBase.sol\":{\"keccak256\":\"0x671f82e6525525c5615250b0b8d4ad056bd05de8fcbf6442abd8b059159f11ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76dc0c574694f1492744acfd361d63a9688ed354fbf840de91753e398bdaf052\",\"dweb:/ipfs/QmQUWvpH6KQPsWjjRUi7Ffv3Z1eqPiiNLerGxW6EEkez91\"]},\"40_54_IAirdropReceiverFactory.sol\":{\"keccak256\":\"0xebb81248214ef956da9dff274331ce1a0cd02dc7286684d05ff9c6f242ee5996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb8c20789a9144de8076ca2c0969bc11d90d1a499a8282a42f35a98e07ab53db\",\"dweb:/ipfs/QmeivxsVs7d76JHa46P7JhTG3pFspyu8FZEj8GKUkz2xCL\"]},\"41_54_Pausable.sol\":{\"keccak256\":\"0x9347635dec691e4e18a54bb998ac5e26f5d413b0ac6625a5a87450c7cca85a7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef64d3936ac7fd4fbef75689b0ad0f822dd28ca90927566b043a797592c2819\",\"dweb:/ipfs/QmaYS6NAMkRJD5FnpNxiUNQE18Dds5QujgtU4enXs4nz3U\"]},\"42_54_IERC1155Receiver.sol\":{\"keccak256\":\"0x386464933922eac8150883805363cf9358f409208cdc26b332093d0d1da55973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e495f41079bca08f9663e62fd0c4ae03387566268d05c12c7c726fe0e10b26a4\",\"dweb:/ipfs/QmWC37FqzP18iN5N1tXwhS8E9t3XWuc78jS4ad31i14D1w\"]},\"43_54_IBundleBuilder.sol\":{\"keccak256\":\"0xf9b3ebf0cb17621198973d3885b8fcefb200ac7a2f3dc613b0316e21adc8a48c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306f336537c3a6cf636ca68fc1062659b57739a2a962b58f38e9388541287aac\",\"dweb:/ipfs/QmX2NkYjLkMK7Ux1Lw9yVTVoXfTbhRRB1A6u4s1uF6mmpc\"]},\"44_54_SignatureChecker.sol\":{\"keccak256\":\"0x2d56b73dd8e2f6b1954e8a24ddc0ad1ff2f4988b5571d2c5b6b4b4ff988f9053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40057c8d5eb79a23a1509088ca8e6b4b257e1874f67d499d08b5399aca3bc8f1\",\"dweb:/ipfs/QmYRyz1dEimDJNJLbmvAuX3ptmXR9xqVG9WqrjwdKpiAd1\"]},\"45_54_ECDSA.sol\":{\"keccak256\":\"0xbc991a1cf357ce19480831a40792c814238a3b5458134703682abd8aa39719fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2e3313add3a233ad2d1e9b65cb7c0296bdbe159c6d631da2b1d027b4954926\",\"dweb:/ipfs/QmT8bVda92mptimLgonyq28qENq4sRgy6K3v118CvZcKdP\"]},\"46_54_IERC1271.sol\":{\"keccak256\":\"0x14351164423eade7f2dbac5ca9ab8aeded8694f3b2d7a9e0114a2b3b6558198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7588d5d5a23ccdccfb39eb015939560bdc26fd11efb7e5ff8af23f5a3ce8b003\",\"dweb:/ipfs/QmRuohtRJYDoFGazYwbcbz557HzmQDWuW9phW6Cm8tQhwN\"]},\"47_54_IOriginationController.sol\":{\"keccak256\":\"0xe791f5f520f1cb15a1c76bb084cce0ac6cf83edf22b4c512f2b76c5758c97300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf5f43c86562ab9ee8d325b33ad4b45a88a48089e3c607cce0f8859973b00686\",\"dweb:/ipfs/QmUaoEfuaW71te4xW2YiqcZNP71udWqbdd1LdFj4B5FDWf\"]},\"48_54_IFeeController.sol\":{\"keccak256\":\"0x52504aacf04a9d98a7ba0629e876a08b48c689c448d4380cc463766b502a93c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e36510694ee9e01200bd6e6dd59399d614dede55c29ddf6ba918f9d791a744\",\"dweb:/ipfs/QmVnBaAednJhiCvNoAjcTYXSxxXYt658J9RyT4ZALckSYH\"]},\"49_54_IFlashLoanRecipient.sol\":{\"keccak256\":\"0x012004ae1b59c16147d2f89a620d914b502b13375deb50c38449260a40d64b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b199641646072175d469e8fb90dd2c421be9dc69c805691cac58c0f1694f75\",\"dweb:/ipfs/QmYaNPY6Zyoy9xFnYRSd21uCq1QyxdrSdAEPwfH4PVUt39\"]},\"4_54_MigrationErrors.sol\":{\"keccak256\":\"0x94f11ce13a6a0e8607f87d1b635785c4a6514cf982121e26128f412f8bc55d8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e110015db22501869b71f2390260c5d2cefcdc31e9c62d613d5f4a464b723587\",\"dweb:/ipfs/QmPfYarfdYADEzEqVBFdBVqy8anbuVeX4yzR7YK7ped5oq\"]},\"50_54_ILoanCoreV2.sol\":{\"keccak256\":\"0x58368297ba52881f19049fd73e17427b2123f8bb0ea49436bb6746bd158525b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44251f9ab1cd8fedf12e98711105bc991740a021b39c7a0200433e12c291de13\",\"dweb:/ipfs/QmWVqGQmEUkW2ft5Ey3YvxbAC7eiPoCdZqBtkdZgaBMFzw\"]},\"51_54_IRepaymentControllerV2.sol\":{\"keccak256\":\"0xbd66b6924203761384439ba6ca64afeab9b02028f5d8845b4824c7dc14bea889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ffc27e038dd979b277725babfebc627bdb0f7542c0113c8f190c7584e6af29\",\"dweb:/ipfs/QmeoVVzPbcG8i1RrbXd27DGSBWANdH9DqhAQMPv3fUxgp4\"]},\"52_54_LoanLibraryV2.sol\":{\"keccak256\":\"0xaa2cc2ea7a284f5a1f99ffb855af5094f9373de393d670976b49ac4f25e2fdf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cac05113832b5711f442c3dfb04a3bfe8e5bd7368b81b04ee98f15eb6dec91a\",\"dweb:/ipfs/QmVu6NbKYs3z1LXAHD9YJibUcEQC3qZdM2mQBpcgE57SPE\"]},\"53_54_IPromissoryNoteV2.sol\":{\"keccak256\":\"0x580cfeff24e6dc6daa3400ed6ca0f88d471529dcc2db4c0cb2aafc96ea8cce4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76707f9b622ed47dd57d2c272720f7a29ead966b1cfdf04e5df9ade27845418\",\"dweb:/ipfs/Qma831Nq8ZngeaebhehQcGY1ibp9RQfXf9u4ynBQfMH7Ws\"]},\"54_54_IFeeControllerV2.sol\":{\"keccak256\":\"0x7529f71f5b551f705356b9a949407fc9cbe7b60d554f016a5cb005a2d0ce7e8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79d237e8526da576557d0353154e2f13e6e5fffe3807eb2eab52c67bfaccae3\",\"dweb:/ipfs/QmeTvhxJMqSFRHuwgd44s41pBRkXaqgPBzgX1ocA9dAKGX\"]},\"5_54_RolloverErrors.sol\":{\"keccak256\":\"0x020b1c8052b599359ea2ab2a61a00192ef788b1741e8e5e89350b6f58dabb04e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f8debd2a04eebd3fd0b227a34207d440b36742329610b8b91defcad96bba001\",\"dweb:/ipfs/QmSGJS59wY57tWARbegpcN4QzGmwcNZ97R3sysDDwzHGog\"]},\"6_54_ILoanCore.sol\":{\"keccak256\":\"0xc5993fe6e7dd4826897f1866f2a35ccb7b0cb5894b9df04b1872d0ff1b197261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fa76832ad15227f30919d41326f0749cfceac7b0ab67d8f944cba8af7921e\",\"dweb:/ipfs/QmdjZTDT7Hs6rBwJy6BFB5fGc9taabSxmk9ERPSm9XEEd8\"]},\"7_54_LoanLibrary.sol\":{\"keccak256\":\"0xd743e4c985ac20b24c724eb4a06c6ce129d92eb781ab86db7927a0ee2665b77a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0abc0f22341bf88f4427dc707bdd717e3664e6d067f564892347336dc097b9\",\"dweb:/ipfs/QmcGszcBq13arGxkBKX9mga8cqWCiVhiw5XpCanaxh8qeS\"]},\"8_54_IPromissoryNote.sol\":{\"keccak256\":\"0xed6dd50ea09b63ae6e88141ad4bd69c4b291de7fc5148b8b94b56c962d53905f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af3e913a5130ab73499a61db0055b8e008d11f4d69e4b914fbefe07deaf074a0\",\"dweb:/ipfs/QmVSBKHRRaDDRXFWVQYazqbinxPtCjXSVbt6BMmkZ21rVa\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"errors":{"MR_CallerNotBorrower(address,address)":[{"notice":"Only the holder of the obligationReceiptToken can migrate their loan."}],"MR_CollateralIdMismatch(uint256,uint256)":[{"notice":"The LP1 and V3 collateral token IDs must be the same."}],"MR_CollateralMismatch(address,address)":[{"notice":"The LP1 and V3 collateral tokens must be the same."}],"MR_CurrencyMismatch(address,address)":[{"notice":"The LP1 and V3 payable currency tokens must be the same so that the flash loan can         be repaid."}],"MR_FundsConflict(uint256,uint256)":[{"notice":"An accounting check to verify that either the leftover V3 loan principal is         zero or the amount needed from the borrower to cover any difference is zero.         Either there is leftover principal that needs to be sent to the borrower, or         the borrower needs to send funds to cover the difference between the LP1 repayment         amount and the new V3 loan principal minus any fees."}],"MR_InsufficientAllowance(address,uint256,uint256)":[{"notice":"The allowance of the borrower to the V3 migration contract is insufficient          to repay the difference between the LP1 loan and the V3 loan principal minus fees."}],"MR_InsufficientFunds(address,uint256,uint256)":[{"notice":"The balance of the borrower is insufficient to repay the difference between         the loan and the V3 loan principal minus fees."}],"MR_NotCollateralOwner(address)":[{"notice":"After repaying the LP1 loan, the LP1 -> V3 migration contract must be the owner of         the collateral token."}],"MR_Paused()":[{"notice":"Contract is paused, migration operations are blocked."}],"MR_UnknownCaller(address,address)":[{"notice":"The flash loan callback caller is not recognized. The caller must be the flash         loan provider."}],"R_BorrowerNotReset(address)":[{"notice":"The borrower state must be address(0) to initiate a rollover sequence."}],"R_StateAlreadySet()":[{"notice":"The rollover contract is already in the specified pause state."}],"R_UnknownBorrower(address,address)":[{"notice":"The borrower address saved in the rollover contract is not the same as the         borrower address provided in the flash loan operation data. The initiator of         the flash loan must be the rollover contract."}],"R_ZeroAddress(string)":[{"notice":"Cannot pass the zero address as an argument."}]},"kind":"user","methods":{"borrower()":{"notice":"State variable used for checking the inheriting contract initiated the flash         loan. When a rollover function is called the borrowers address is cached here         and checked against the opData in the flash loan callback."},"deployments(uint256)":{"notice":"V3 lending protocol contract references"},"flushToken(address,address)":{"notice":"Function to be used by the contract owner to withdraw any ERC20 tokens that         are sent to the contract and get stuck."},"migrateLoanWithItems(uint256,(uint256,uint256,address,uint96,uint256,address,uint96,bytes32),address,uint160,(uint8,bytes32,bytes32),(bytes,address)[],uint8)":{"notice":"Mirage a loan from LP1 to V3 using an items signature. Validates new         loan terms against the old terms. Takes out Flash Loan for maximumRepaymentAmount,         repays old loan, and starts new loan on V3."},"pause(bool)":{"notice":"Function to be used by the contract owner to pause the contract."},"paused()":{"notice":"state variable for pausing the contract"},"receiveFlashLoan(address[],uint256[],uint256[],bytes)":{"notice":"Callback function for flash loan."}},"version":1}}},"20_54_Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"20_54_Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"21_54_IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"21_54_IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"21_54_IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"22_54_Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"22_54_Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"22_54_Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"23_54_DirectLoanBaseMinimal.sol":{"DirectLoanBaseMinimal":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"newAdminFee","type":"uint16"}],"name":"AdminFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"erc20Contract","type":"address"},{"indexed":false,"internalType":"bool","name":"isPermitted","type":"bool"}],"name":"ERC20Permit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"loanId","type":"uint32"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"indexed":false,"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loanMaturityDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loanLiquidationDate","type":"uint256"},{"indexed":false,"internalType":"address","name":"nftCollateralContract","type":"address"}],"name":"LoanLiquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"loanId","type":"uint32"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"indexed":false,"internalType":"uint32","name":"newLoanDuration","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"newMaximumRepaymentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"renegotiationFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"renegotiationAdminFee","type":"uint256"}],"name":"LoanRenegotiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"loanId","type":"uint32"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"indexed":false,"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountPaidToLender","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"adminFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"revenueShare","type":"uint256"},{"indexed":false,"internalType":"address","name":"revenueSharePartner","type":"address"},{"indexed":false,"internalType":"address","name":"nftCollateralContract","type":"address"},{"indexed":false,"internalType":"address","name":"loanERC20Denomination","type":"address"}],"name":"LoanRepaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"loanId","type":"uint32"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"nftCollateralWrapper","type":"address"},{"internalType":"uint64","name":"loanStartTime","type":"uint64"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"address","name":"borrower","type":"address"}],"indexed":false,"internalType":"struct LoanData.LoanTerms","name":"loanTerms","type":"tuple"},{"components":[{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"uint16","name":"revenueShareInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"}],"indexed":false,"internalType":"struct LoanData.LoanExtras","name":"loanExtras","type":"tuple"}],"name":"LoanStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newMaximumLoanDuration","type":"uint256"}],"name":"MaximumLoanDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"HUNDRED_PERCENT","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LOAN_COORDINATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adminFeeInBasisPoints","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"cancelLoanCommitmentBeforeLoanHasBegun","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"drainERC1155Airdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"drainERC20Airdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"drainERC721Airdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_erc20","type":"address"}],"name":"getERC20Permit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"getPayoffAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"getWhetherNonceHasBeenUsedForUser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hub","outputs":[{"internalType":"contract INftfiHub","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"liquidateOverdueLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"loanIdToLoan","outputs":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"nftCollateralWrapper","type":"address"},{"internalType":"uint64","name":"loanStartTime","type":"uint64"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"address","name":"borrower","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"loanIdToLoanExtras","outputs":[{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"uint16","name":"revenueShareInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"loanRepaidOrLiquidated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maximumLoanDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"mintObligationReceipt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"payBackLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_nftAirdrop","type":"address"},{"internalType":"uint256","name":"_nftAirdropId","type":"uint256"},{"internalType":"bool","name":"_is1155","type":"bool"},{"internalType":"uint256","name":"_nftAirdropAmount","type":"uint256"}],"name":"pullAirdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"uint32","name":"_newLoanDuration","type":"uint32"},{"internalType":"uint256","name":"_newMaximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"_renegotiationFee","type":"uint256"},{"internalType":"uint256","name":"_lenderNonce","type":"uint256"},{"internalType":"uint256","name":"_expiry","type":"uint256"},{"internalType":"bytes","name":"_lenderSignature","type":"bytes"}],"name":"renegotiateLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_erc20","type":"address"},{"internalType":"bool","name":"_permit","type":"bool"}],"name":"setERC20Permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_erc20s","type":"address[]"},{"internalType":"bool[]","name":"_permits","type":"bool[]"}],"name":"setERC20Permits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_newAdminFeeInBasisPoints","type":"uint16"}],"name":"updateAdminFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newMaximumLoanDuration","type":"uint256"}],"name":"updateMaximumLoanDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"wrapCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"NFTfi","events":{"AdminFeeUpdated(uint16)":{"params":{"newAdminFee":"- The new admin fee measured in basis points. This is a percent of the interest paid upon a loan's completion that go to the contract admins."}},"ERC20Permit(address,bool)":{"params":{"erc20Contract":"- Address of the ERC20 contract.","isPermitted":"- Signals ERC20 permit."}},"LoanLiquidated(uint32,address,address,uint256,uint256,uint256,uint256,address)":{"params":{"borrower":"- The address of the borrower.","lender":"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.","loanId":"- A unique identifier for this particular loan, sourced from the Loan Coordinator.","loanLiquidationDate":"- The unix time (measured in seconds) that liquidation occurred.","loanMaturityDate":"- The unix time (measured in seconds) that the loan became due and was eligible for liquidation.","loanPrincipalAmount":"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.","nftCollateralContract":"- The ERC721 contract of the NFT collateral","nftCollateralId":"- The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan."}},"LoanRenegotiated(uint32,address,address,uint32,uint256,uint256,uint256)":{"params":{"loanId":"- The unique identifier for the loan to be renegotiated","newLoanDuration":"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.","newMaximumRepaymentAmount":"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.","renegotiationAdminFee":"renegotiationFee admin portion based on determined by adminFeeInBasisPoints","renegotiationFee":"Agreed upon fee in loan denomination that borrower pays for the lender for the renegotiation, has to be paid with an ERC20 transfer loanERC20Denomination token, uses transfer from, frontend will have to propmt an erc20 approve for this from the borrower to the lender"}},"LoanRepaid(uint32,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address)":{"params":{"adminFee":"The amount of interest paid to the contract admins, measured in the smalled units of loanERC20Denomination and determined by adminFeeInBasisPoints. This amount never exceeds the amount of interest earned.","amountPaidToLender":"The amount of ERC20 that the borrower paid to the lender, measured in the smalled units of loanERC20Denomination.","borrower":"- The address of the borrower.","lender":"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.","loanERC20Denomination":"- The ERC20 contract of the currency being used as principal/interest for this loan.","loanId":"- A unique identifier for this particular loan, sourced from the Loan Coordinator.","loanPrincipalAmount":"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.","nftCollateralContract":"- The ERC721 contract of the NFT collateral","nftCollateralId":"- The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan.","revenueShare":"The amount taken from admin fee amount shared with the partner.","revenueSharePartner":"- The address of the partner that will receive the revenue share."}},"LoanStarted(uint32,address,address,(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address),(address,uint16,uint16))":{"params":{"borrower":"- The address of the borrower.","lender":"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.","loanId":"- A unique identifier for this particular loan, sourced from the Loan Coordinator."}},"MaximumLoanDurationUpdated(uint256)":{"params":{"newMaximumLoanDuration":"- The new maximum duration."}},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"cancelLoanCommitmentBeforeLoanHasBegun(uint256)":{"params":{"_nonce":"- User nonce"}},"constructor":{"details":"Sets `hub`","params":{"_admin":"- Initial admin of this contract.","_loanCoordinatorKey":"-","_nftfiHub":"- NFTfiHub address","_permittedErc20s":"-"}},"drainERC1155Airdrop(address,uint256,address)":{"params":{"_receiver":"- receiver of the token","_tokenAddress":"- address of the token contract for the token to be sent out","_tokenId":"- id token to be sent out"}},"drainERC20Airdrop(address,address)":{"params":{"_receiver":"- receiver of the token","_tokenAddress":"- address of the token contract for the token to be sent out"}},"drainERC721Airdrop(address,uint256,address)":{"params":{"_receiver":"- receiver of the token","_tokenAddress":"- address of the token contract for the token to be sent out","_tokenId":"- id token to be sent out"}},"getERC20Permit(address)":{"params":{"_erc20":"- The address of the erc20 contract."},"returns":{"_0":"Returns whether the erc20 is permitted"}},"getPayoffAmount(uint32)":{"params":{"_loanId":"A unique identifier for this particular loan, sourced from the Loan Coordinator."},"returns":{"_0":"The amount of the specified ERC20 currency required to pay back this loan, measured in the smallest unit of the specified ERC20 currency."}},"getWhetherNonceHasBeenUsedForUser(address,uint256)":{"params":{"_nonce":"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.","_user":"- The address of the user. This function works for both lenders and borrowers alike."},"returns":{"_0":"A bool representing whether or not this nonce has been used for this user."}},"liquidateOverdueLoan(uint32)":{"params":{"_loanId":"A unique identifier for this particular loan, sourced from the Loan Coordinator."}},"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated.","returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated.","returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if allowed"}},"onERC721Received(address,address,uint256,bytes)":{"details":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"Triggers stopped state. Requirements: - Only the owner can call this method. - The contract must not be paused."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"payBackLoan(uint32)":{"params":{"_loanId":"A unique identifier for this particular loan, sourced from the Loan Coordinator."}},"pullAirdrop(uint32,address,bytes,address,uint256,bool,uint256)":{"params":{"_data":"- function selector to be called on the airdropping contract","_is1155":"-","_loanId":"-","_nftAirdrop":"- address of the used claiming nft in the drop","_nftAirdropAmount":"- amount in case of 1155","_nftAirdropId":"- id of the used claiming nft in the drop","_target":"- address of the airdropping contract"}},"renegotiateLoan(uint32,uint32,uint256,uint256,uint256,uint256,bytes)":{"details":"makes possible to change loan duration and max repayment amount, loan duration even can be extended if loan was expired but not liquidated.","params":{"_expiry":"- The date when the renegotiation offer expires","_lenderNonce":"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.","_lenderSignature":"- The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters: - _loanId - _newLoanDuration - _newMaximumRepaymentAmount - _lender - _expiry  - address of this contract - chainId","_loanId":"- The unique identifier for the loan to be renegotiated","_newLoanDuration":"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.","_newMaximumRepaymentAmount":"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.","_renegotiationFee":"Agreed upon fee in ether that borrower pays for the lender for the renegitiation"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setERC20Permit(address,bool)":{"params":{"_erc20":"- The address of the ERC20 currency whose permit list status changed.","_permit":"- The new status of whether the currency is permitted or not."}},"setERC20Permits(address[],bool[])":{"params":{"_erc20s":"- The addresses of the ERC20 currencies whose permit list status changed.","_permits":"- The new statuses of whether the currency is permitted or not."}},"supportsInterface(bytes4)":{"details":"Checks whether this contract implements the interface defined by `interfaceId`.","params":{"_interfaceId":"Id of the interface"},"returns":{"_0":"true if this contract implements the interface"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{"details":"Returns to normal state. Requirements: - Only the owner can call this method. - The contract must be paused."},"updateAdminFee(uint16)":{"params":{"_newAdminFeeInBasisPoints":"- The new admin fee measured in basis points. This is a percent of the interest paid upon a loan's completion that go to the contract admins."}},"updateMaximumLoanDuration(uint256)":{"params":{"_newMaximumLoanDuration":"- The new maximum loan duration, measured in seconds."}},"wrapCollateral(uint32)":{"params":{"_loanId":"-"}}},"stateVariables":{"_escrowTokens":{"details":"keeps track of tokens being held as loan collateral, so we dont allow these to be transferred with the aridrop draining functions"}},"title":"DirectLoanBase","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newAdminFee\",\"type\":\"uint16\"}],\"name\":\"AdminFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20Contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPermitted\",\"type\":\"bool\"}],\"name\":\"ERC20Permit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"loanId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanMaturityDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanLiquidationDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"loanId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newLoanDuration\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaximumRepaymentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"renegotiationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"renegotiationAdminFee\",\"type\":\"uint256\"}],\"name\":\"LoanRenegotiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"loanId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaidToLender\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"adminFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revenueShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"loanId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"nftCollateralWrapper\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"loanStartTime\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct LoanData.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"revenueShareInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct LoanData.LoanExtras\",\"name\":\"loanExtras\",\"type\":\"tuple\"}],\"name\":\"LoanStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaximumLoanDuration\",\"type\":\"uint256\"}],\"name\":\"MaximumLoanDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOAN_COORDINATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminFeeInBasisPoints\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"cancelLoanCommitmentBeforeLoanHasBegun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"drainERC1155Airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"drainERC20Airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"drainERC721Airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"getERC20Permit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"getPayoffAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getWhetherNonceHasBeenUsedForUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract INftfiHub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"liquidateOverdueLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"loanIdToLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"nftCollateralWrapper\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"loanStartTime\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"loanIdToLoanExtras\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"revenueShareInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"loanRepaidOrLiquidated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumLoanDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"mintObligationReceipt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"payBackLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_nftAirdrop\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftAirdropId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_is1155\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_nftAirdropAmount\",\"type\":\"uint256\"}],\"name\":\"pullAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_newLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_newMaximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_renegotiationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lenderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_lenderSignature\",\"type\":\"bytes\"}],\"name\":\"renegotiateLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_permit\",\"type\":\"bool\"}],\"name\":\"setERC20Permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_erc20s\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_permits\",\"type\":\"bool[]\"}],\"name\":\"setERC20Permits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newAdminFeeInBasisPoints\",\"type\":\"uint16\"}],\"name\":\"updateAdminFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaximumLoanDuration\",\"type\":\"uint256\"}],\"name\":\"updateMaximumLoanDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"wrapCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"events\":{\"AdminFeeUpdated(uint16)\":{\"params\":{\"newAdminFee\":\"- The new admin fee measured in basis points. This is a percent of the interest paid upon a loan's completion that go to the contract admins.\"}},\"ERC20Permit(address,bool)\":{\"params\":{\"erc20Contract\":\"- Address of the ERC20 contract.\",\"isPermitted\":\"- Signals ERC20 permit.\"}},\"LoanLiquidated(uint32,address,address,uint256,uint256,uint256,uint256,address)\":{\"params\":{\"borrower\":\"- The address of the borrower.\",\"lender\":\"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.\",\"loanId\":\"- A unique identifier for this particular loan, sourced from the Loan Coordinator.\",\"loanLiquidationDate\":\"- The unix time (measured in seconds) that liquidation occurred.\",\"loanMaturityDate\":\"- The unix time (measured in seconds) that the loan became due and was eligible for liquidation.\",\"loanPrincipalAmount\":\"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.\",\"nftCollateralContract\":\"- The ERC721 contract of the NFT collateral\",\"nftCollateralId\":\"- The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan.\"}},\"LoanRenegotiated(uint32,address,address,uint32,uint256,uint256,uint256)\":{\"params\":{\"loanId\":\"- The unique identifier for the loan to be renegotiated\",\"newLoanDuration\":\"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.\",\"newMaximumRepaymentAmount\":\"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.\",\"renegotiationAdminFee\":\"renegotiationFee admin portion based on determined by adminFeeInBasisPoints\",\"renegotiationFee\":\"Agreed upon fee in loan denomination that borrower pays for the lender for the renegotiation, has to be paid with an ERC20 transfer loanERC20Denomination token, uses transfer from, frontend will have to propmt an erc20 approve for this from the borrower to the lender\"}},\"LoanRepaid(uint32,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address)\":{\"params\":{\"adminFee\":\"The amount of interest paid to the contract admins, measured in the smalled units of loanERC20Denomination and determined by adminFeeInBasisPoints. This amount never exceeds the amount of interest earned.\",\"amountPaidToLender\":\"The amount of ERC20 that the borrower paid to the lender, measured in the smalled units of loanERC20Denomination.\",\"borrower\":\"- The address of the borrower.\",\"lender\":\"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.\",\"loanERC20Denomination\":\"- The ERC20 contract of the currency being used as principal/interest for this loan.\",\"loanId\":\"- A unique identifier for this particular loan, sourced from the Loan Coordinator.\",\"loanPrincipalAmount\":\"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.\",\"nftCollateralContract\":\"- The ERC721 contract of the NFT collateral\",\"nftCollateralId\":\"- The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan.\",\"revenueShare\":\"The amount taken from admin fee amount shared with the partner.\",\"revenueSharePartner\":\"- The address of the partner that will receive the revenue share.\"}},\"LoanStarted(uint32,address,address,(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address),(address,uint16,uint16))\":{\"params\":{\"borrower\":\"- The address of the borrower.\",\"lender\":\"- The address of the lender. The lender can change their address by transferring the NFTfi ERC721 token that they received when the loan began.\",\"loanId\":\"- A unique identifier for this particular loan, sourced from the Loan Coordinator.\"}},\"MaximumLoanDurationUpdated(uint256)\":{\"params\":{\"newMaximumLoanDuration\":\"- The new maximum duration.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"cancelLoanCommitmentBeforeLoanHasBegun(uint256)\":{\"params\":{\"_nonce\":\"- User nonce\"}},\"constructor\":{\"details\":\"Sets `hub`\",\"params\":{\"_admin\":\"- Initial admin of this contract.\",\"_loanCoordinatorKey\":\"-\",\"_nftfiHub\":\"- NFTfiHub address\",\"_permittedErc20s\":\"-\"}},\"drainERC1155Airdrop(address,uint256,address)\":{\"params\":{\"_receiver\":\"- receiver of the token\",\"_tokenAddress\":\"- address of the token contract for the token to be sent out\",\"_tokenId\":\"- id token to be sent out\"}},\"drainERC20Airdrop(address,address)\":{\"params\":{\"_receiver\":\"- receiver of the token\",\"_tokenAddress\":\"- address of the token contract for the token to be sent out\"}},\"drainERC721Airdrop(address,uint256,address)\":{\"params\":{\"_receiver\":\"- receiver of the token\",\"_tokenAddress\":\"- address of the token contract for the token to be sent out\",\"_tokenId\":\"- id token to be sent out\"}},\"getERC20Permit(address)\":{\"params\":{\"_erc20\":\"- The address of the erc20 contract.\"},\"returns\":{\"_0\":\"Returns whether the erc20 is permitted\"}},\"getPayoffAmount(uint32)\":{\"params\":{\"_loanId\":\"A unique identifier for this particular loan, sourced from the Loan Coordinator.\"},\"returns\":{\"_0\":\"The amount of the specified ERC20 currency required to pay back this loan, measured in the smallest unit of the specified ERC20 currency.\"}},\"getWhetherNonceHasBeenUsedForUser(address,uint256)\":{\"params\":{\"_nonce\":\"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.\",\"_user\":\"- The address of the user. This function works for both lenders and borrowers alike.\"},\"returns\":{\"_0\":\"A bool representing whether or not this nonce has been used for this user.\"}},\"liquidateOverdueLoan(uint32)\":{\"params\":{\"_loanId\":\"A unique identifier for this particular loan, sourced from the Loan Coordinator.\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated.\",\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated.\",\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if allowed\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Triggers stopped state. Requirements: - Only the owner can call this method. - The contract must not be paused.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payBackLoan(uint32)\":{\"params\":{\"_loanId\":\"A unique identifier for this particular loan, sourced from the Loan Coordinator.\"}},\"pullAirdrop(uint32,address,bytes,address,uint256,bool,uint256)\":{\"params\":{\"_data\":\"- function selector to be called on the airdropping contract\",\"_is1155\":\"-\",\"_loanId\":\"-\",\"_nftAirdrop\":\"- address of the used claiming nft in the drop\",\"_nftAirdropAmount\":\"- amount in case of 1155\",\"_nftAirdropId\":\"- id of the used claiming nft in the drop\",\"_target\":\"- address of the airdropping contract\"}},\"renegotiateLoan(uint32,uint32,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"makes possible to change loan duration and max repayment amount, loan duration even can be extended if loan was expired but not liquidated.\",\"params\":{\"_expiry\":\"- The date when the renegotiation offer expires\",\"_lenderNonce\":\"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.\",\"_lenderSignature\":\"- The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters: - _loanId - _newLoanDuration - _newMaximumRepaymentAmount - _lender - _expiry  - address of this contract - chainId\",\"_loanId\":\"- The unique identifier for the loan to be renegotiated\",\"_newLoanDuration\":\"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.\",\"_newMaximumRepaymentAmount\":\"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.\",\"_renegotiationFee\":\"Agreed upon fee in ether that borrower pays for the lender for the renegitiation\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setERC20Permit(address,bool)\":{\"params\":{\"_erc20\":\"- The address of the ERC20 currency whose permit list status changed.\",\"_permit\":\"- The new status of whether the currency is permitted or not.\"}},\"setERC20Permits(address[],bool[])\":{\"params\":{\"_erc20s\":\"- The addresses of the ERC20 currencies whose permit list status changed.\",\"_permits\":\"- The new statuses of whether the currency is permitted or not.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Checks whether this contract implements the interface defined by `interfaceId`.\",\"params\":{\"_interfaceId\":\"Id of the interface\"},\"returns\":{\"_0\":\"true if this contract implements the interface\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Returns to normal state. Requirements: - Only the owner can call this method. - The contract must be paused.\"},\"updateAdminFee(uint16)\":{\"params\":{\"_newAdminFeeInBasisPoints\":\"- The new admin fee measured in basis points. This is a percent of the interest paid upon a loan's completion that go to the contract admins.\"}},\"updateMaximumLoanDuration(uint256)\":{\"params\":{\"_newMaximumLoanDuration\":\"- The new maximum loan duration, measured in seconds.\"}},\"wrapCollateral(uint32)\":{\"params\":{\"_loanId\":\"-\"}}},\"stateVariables\":{\"_escrowTokens\":{\"details\":\"keeps track of tokens being held as loan collateral, so we dont allow these to be transferred with the aridrop draining functions\"}},\"title\":\"DirectLoanBase\",\"version\":1},\"userdoc\":{\"events\":{\"AdminFeeUpdated(uint16)\":{\"notice\":\"This event is fired whenever the admins change the percent of interest rates earned that they charge as a fee. Note that newAdminFee can never exceed 10,000, since the fee is measured in basis points.\"},\"ERC20Permit(address,bool)\":{\"notice\":\"This event is fired whenever the admin sets a ERC20 permit.\"},\"LoanLiquidated(uint32,address,address,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"This event is fired whenever a lender liquidates an outstanding loan that is owned to them that has exceeded its duration. The lender receives the underlying NFT collateral, and the borrower no longer needs to repay the loan principal-plus-interest.\"},\"LoanRenegotiated(uint32,address,address,uint32,uint256,uint256,uint256)\":{\"notice\":\"This event is fired when some of the terms of a loan are being renegotiated.\"},\"LoanRepaid(uint32,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address)\":{\"notice\":\"This event is fired whenever a borrower successfully repays their loan, paying principal-plus-interest-minus-fee to the lender in loanERC20Denomination, paying fee to owner in loanERC20Denomination, and receiving their NFT collateral back.\"},\"LoanStarted(uint32,address,address,(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address),(address,uint16,uint16))\":{\"notice\":\"This event is fired whenever a borrower begins a loan by calling NFTfi.beginLoan(), which can only occur after both the lender and borrower have approved their ERC721 and ERC20 contracts to use NFTfi, and when they both have signed off-chain messages that agree on the terms of the loan.\"},\"MaximumLoanDurationUpdated(uint256)\":{\"notice\":\"This event is fired whenever the admins change the maximum duration of any loan started for this loan type.\"}},\"kind\":\"user\",\"methods\":{\"adminFeeInBasisPoints()\":{\"notice\":\"The percentage of interest earned by lenders on this platform that is taken by the contract admin's as a fee, measured in basis points (hundreths of a percent). The max allowed value is 10000.\"},\"cancelLoanCommitmentBeforeLoanHasBegun(uint256)\":{\"notice\":\"This function can be called by either a lender or a borrower to cancel all off-chain orders that they have signed that contain this nonce. If the off-chain orders were created correctly, there should only be one off-chain order that contains this nonce at all. The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes. First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.\"},\"drainERC1155Airdrop(address,uint256,address)\":{\"notice\":\"used by the owner account to be able to drain ERC1155 tokens received as airdrops for the locked  collateral NFT-s\"},\"drainERC20Airdrop(address,address)\":{\"notice\":\"used by the owner account to be able to drain ERC20 tokens received as airdrops for the locked  collateral NFT-s\"},\"drainERC721Airdrop(address,uint256,address)\":{\"notice\":\"used by the owner account to be able to drain ERC721 tokens received as airdrops for the locked  collateral NFT-s\"},\"getERC20Permit(address)\":{\"notice\":\"This function can be called by anyone to get the permit associated with the erc20 contract.\"},\"getPayoffAmount(uint32)\":{\"notice\":\"This function can be used to view the current quantity of the ERC20 currency used in the specified loan required by the borrower to repay their loan, measured in the smallest unit of the ERC20 currency.\"},\"getWhetherNonceHasBeenUsedForUser(address,uint256)\":{\"notice\":\"This function can be used to view whether a particular nonce for a particular user has already been used, either from a successful loan or a cancelled off-chain order.\"},\"liquidateOverdueLoan(uint32)\":{\"notice\":\"This function is called by a lender once a loan has finished its duration and the borrower still has not repaid. The lender can call this function to seize the underlying NFT collateral, although the lender gives up all rights to the principal-plus-collateral by doing so. This function is purposefully not pausable in order to prevent an attack where the contract admin's pause the contract and hold hostage the NFT's that are still within it. We intentionally allow anybody to call this function, although only the lender will end up receiving the seized collateral. We are exploring the possbility of incentivizing users to call this function by using some of the admin funds.\"},\"loanIdToLoan(uint32)\":{\"notice\":\"A mapping from a loan's identifier to the loan's details, represted by the loan struct.\"},\"loanRepaidOrLiquidated(uint32)\":{\"notice\":\"A mapping tracking whether a loan has either been repaid or liquidated. This prevents an attacker trying to repay or liquidate the same loan twice.\"},\"maximumLoanDuration()\":{\"notice\":\"The maximum duration of any loan started for this loan type, measured in seconds. This is both a sanity-check for borrowers and an upper limit on how long admins will have to support v1 of this contract if they eventually deprecate it, as well as a check to ensure that the loan duration never exceeds the space alotted for it in the loan struct.\"},\"payBackLoan(uint32)\":{\"notice\":\"This function is called by a anyone to repay a loan. It can be called at any time after the loan has begun and before loan expiry.. The caller will pay a pro-rata portion of their interest if the loan is paid off early and the loan is pro-rated type, but the complete repayment amount if it is fixed type. The the borrower (current owner of the obligation note) will get the collaterl NFT back. This function is purposefully not pausable in order to prevent an attack where the contract admin's pause the contract and hold hostage the NFT's that are still within it.\"},\"pullAirdrop(uint32,address,bytes,address,uint256,bool,uint256)\":{\"notice\":\"this function initiates a flashloan to pull an airdrop from a tartget contract\"},\"setERC20Permit(address,bool)\":{\"notice\":\"This function can be called by admins to change the permitted status of an ERC20 currency. This includes both adding an ERC20 currency to the permitted list and removing it.\"},\"setERC20Permits(address[],bool[])\":{\"notice\":\"This function can be called by admins to change the permitted status of a batch of ERC20 currency. This includes both adding an ERC20 currency to the permitted list and removing it.\"},\"updateAdminFee(uint16)\":{\"notice\":\"This function can be called by admins to change the percent of interest rates earned that they charge as a fee. Note that newAdminFee can never exceed 10,000, since the fee is measured in basis points.\"},\"updateMaximumLoanDuration(uint256)\":{\"notice\":\"This function can be called by admins to change the maximumLoanDuration. Note that they can never change maximumLoanDuration to be greater than UINT32_MAX, since that's the maximum space alotted for the duration in the loan struct.\"},\"wrapCollateral(uint32)\":{\"notice\":\"this function creates a proxy contract wrapping the collateral to be able to catch an expected airdrop\"}},\"notice\":\"Main contract for NFTfi Direct Loans Type. This contract manages the ability to create NFT-backed peer-to-peer loans. There are two ways to commence an NFT-backed loan: a. The borrower accepts a lender's offer by calling `acceptOffer`.   1. the borrower calls nftContract.approveAll(NFTfi), approving the NFTfi contract to move their NFT's on their be1alf.   2. the lender calls erc20Contract.approve(NFTfi), allowing NFTfi to move the lender's ERC20 tokens on their behalf.   3. the lender signs an off-chain message, proposing its offer terms.   4. the borrower calls `acceptOffer` to accept these terms and enter into the loan. The NFT is stored in the contract, the borrower receives the loan principal in the specified ERC20 currency, the lender receives an NFTfi promissory note (in ERC721 form) that represents the rights to either the principal-plus-interest, or the underlying NFT collateral if the borrower does not pay back in time, and the borrower receives obligation receipt (in ERC721 form) that gives them the right to pay back the loan and get the collateral back. b. The lender accepts a borrowe's binding terms by calling `acceptListing`.   1. the borrower calls nftContract.approveAll(NFTfi), approving the NFTfi contract to move their NFT's on their be1alf.   2. the lender calls erc20Contract.approve(NFTfi), allowing NFTfi to move the lender's ERC20 tokens on their behalf.   3. the borrower signs an off-chain message, proposing its binding terms.   4. the lender calls `acceptListing` with an offer matching the binding terms and enter into the loan. The NFT is stored in the contract, the borrower receives the loan principal in the specified ERC20 currency, the lender receives an NFTfi promissory note (in ERC721 form) that represents the rights to either the principal-plus-interest, or the underlying NFT collateral if the borrower does not pay back in time, and the borrower receives obligation receipt (in ERC721 form) that gives them the right to pay back the loan and get the collateral back. The lender can freely transfer and trade this ERC721 promissory note as they wish, with the knowledge that transferring the ERC721 promissory note tranfsers the rights to principal-plus-interest and/or collateral, and that they will no longer have a claim on the loan. The ERC721 promissory note itself represents that claim. The borrower can freely transfer and trade this ERC721 obligaiton receipt as they wish, with the knowledge that transferring the ERC721 obligaiton receipt tranfsers the rights right to pay back the loan and get the collateral back. A loan may end in one of two ways: - First, a borrower may call NFTfi.payBackLoan() and pay back the loan plus interest at any time, in which case they receive their NFT back in the same transaction. - Second, if the loan's duration has passed and the loan has not been paid back yet, a lender can call NFTfi.liquidateOverdueLoan(), in which case they receive the underlying NFT collateral and forfeit the rights to the principal-plus-interest, which the borrower now keeps. If the loan was created as a ProRated type loan (pro-rata interest loan), then the user only pays the principal plus pro-rata interest if repaid early. However, if the loan was was created as a Fixed type loan (agreed to be a fixed-repayment loan), then the borrower pays the maximumRepaymentAmount regardless of whether they repay early or not.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"23_54_DirectLoanBaseMinimal.sol\":\"DirectLoanBaseMinimal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"13_54_SafeERC20.sol\":{\"keccak256\":\"0xca2a1cce29c95562079d1d1bf5e99dc29e0d64b385a6c92df859d0414ccd908f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42695fb74e355e33ba71507315e16f355fa4001a4d49ff0f4584d4cd465ef184\",\"dweb:/ipfs/QmSEcJojmAVjS6R4i1hixcnhugm3mwXjMf5CPrBB8HjhSX\"]},\"14_54_ERC721Holder.sol\":{\"keccak256\":\"0xfc46c4f762239615d31ba45ae92094fc71c49bd6c7fb59ccec38dd285f101602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88324c85c20335b973fa97f152e64d6ea1f42af3ce57079baae898a0195db633\",\"dweb:/ipfs/QmPsqm7knfFhJi7bzdbRsZRxRy2aNmzHfhzyFiQDD4PUtH\"]},\"15_54_ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"16_54_Ownable.sol\":{\"keccak256\":\"0x66a03d4cf54f75978905db625064e129580ba7bca0c8d68d259c6f2f80fd55ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7f4fe6aef097c1ae907579edeb3467de23abf6e7797ce10fec8e3829de56e45\",\"dweb:/ipfs/QmUUDV6KJ9Lsz7rzZqicgbqUxAugfwhBxpVUrNvQMFwNz3\"]},\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"21_54_IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"22_54_Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"23_54_DirectLoanBaseMinimal.sol\":{\"keccak256\":\"0x06acbc1c87f98307ad47e2a9dd17ca23b6436a4a002fec8601bdb275f3fff883\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93994b2402c73020e8d9ef87b549d986fafe69dc0b1a9e9b1bf99f8638fd2a3b\",\"dweb:/ipfs/QmfL8u6qjsSejFWGZRbYE1yJQWYAtPpERfxYF6yW3aog2i\"]},\"24_54_ContractKeys.sol\":{\"keccak256\":\"0xbc0e88b96be83469df452dabdf456b2af3e38875b649406fd0b2b6e59c5667ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b120aa2d95a217f6f96f2ab0ac26a5efaef020ef9b5f6a460c208cb91f0249a\",\"dweb:/ipfs/QmSwbSfSNJN84GrRtvPcHvffKVK8jmtVNSDBExArPsSabu\"]},\"25_54_IDirectLoanBase.sol\":{\"keccak256\":\"0x7510a1b6566c11856fcf7307b5765f07fba194f5617758d85d84f5a121271ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d958d1866dc96349fdb6164aa9d6774841b968e921c7c5fc77cbd0640fb18f98\",\"dweb:/ipfs/QmNmATtAkfEU5hLmLsiEUvFXuhHEqFqeYMKXAzdN91WGzr\"]},\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]},\"27_54_LoanChecksAndCalculations.sol\":{\"keccak256\":\"0xae79ec552bc5ef00278d8f82acbc9bbdcab110a8531ce24cd03967b42c24e560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfad4dd2ce5148000fc776025e9f41d16053ba9c1f9e8b265f49cb2c90203a7f\",\"dweb:/ipfs/QmV6TTAHY4WeUYUVSBJuaDeMoTsGXny6FCh9jZ2gRBwDyE\"]},\"28_54_LoanAirdropUtils.sol\":{\"keccak256\":\"0x3410d63bfd045c86b16fc4ddf446f46ccb606257fee2aa83ddde7000924b279b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571c3fca1368ef5bc6b8e5b8502affa2099e5a0b9a163c5c9dde5369b77a6e3a\",\"dweb:/ipfs/QmPXMDTc3KFmcJZaDbNyDhCkTyUpkocwnkhLSdDBxu1jTg\"]},\"29_54_BaseLoan.sol\":{\"keccak256\":\"0xc2b67aaa818d9746e0cfb4a1e11d2993d63ec0c91822fc922a625cc374b7bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b2b4f4bfb81e63f10568a557d5fe69ed73587dd2c6562f761be64a62101e559\",\"dweb:/ipfs/QmYo8mJnPtpzxudEdRHufBs1eCEwKc1uv3b51BuoqFoBsC\"]},\"30_54_NftReceiver.sol\":{\"keccak256\":\"0x29fc615d267899a88ac3c717b460942ef2c4d85288b5489de67571ee28287d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66fd330a2b95c6bf4e8866a51191cdf3f667f7262339365c706595f0cfa4681\",\"dweb:/ipfs/QmQMZpVFTtitHWaJ3F7jUDreHu5tLAc8kf8miXYhF5K7Ba\"]},\"31_54_NFTfiSigningUtils.sol\":{\"keccak256\":\"0x6c6de3b7ccf316d289c8c28ae23755bca14021853cc28d569cc2a8775e8f1844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9772e2685c0e4cdc6ba45515531991d21b8ab9dbfe80a287be7edf99e91f60dc\",\"dweb:/ipfs/QmbgYwCySqAgiTJCyz29VTxRkY9HdooqKVVP5niCpyhPiH\"]},\"32_54_INftfiHub.sol\":{\"keccak256\":\"0xc784578474998dabaff4116fdd3520c92dd10e7c8d98e415f2239f9d96c8a1a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f70642c1d2664910240ac14b4f8b717d02bac324f7fb3afbdb0dd46effab93d\",\"dweb:/ipfs/QmPpQZTErwXAGVGMeP7xbnUrb2Foak7DonfhwEpKwniuL3\"]},\"33_54_IDirectLoanCoordinator.sol\":{\"keccak256\":\"0x0576d6bd283b2ff48f0afbad951b7d8f051dfc85bbe69b5525be80173df72de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a187fd0527531a1a7bce926ed60a75cf012869761c9b82c8c4acf39ba1b287\",\"dweb:/ipfs/QmTdFNC3kqAifHQc46fW12QfsLNdzsnBC5CFeS8KU4UdJP\"]},\"34_54_INftWrapper.sol\":{\"keccak256\":\"0x64df547c2d3ed2f6720b24844ffba086f175643edcf0b38f0d060cf19637b245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac45e66d50666604434ebcb37f8d9041f2070f935eeec1769b19e49707bfde84\",\"dweb:/ipfs/QmNj2JEFSs4Qzpi8DLvhaqkW3VX9z5pgGXVApuJFCMmDkR\"]},\"35_54_IPermittedPartners.sol\":{\"keccak256\":\"0x72398dc42a7522e77cfa9c4fdfe02f338846ff4b2d2c92985185cf8edfa550f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://febaab9458f9ba5d9c46272d297df5d9f97b78a032782364db008d8ae6d26898\",\"dweb:/ipfs/QmQujERQZbdJ6TbMNAHEeBy5UyM7EcCi8vvuuNUTXwRseT\"]},\"36_54_IPermittedERC20s.sol\":{\"keccak256\":\"0x23fa01735d0fbc2d2c96cbd2171ce5ad1da3122f08ec26b5a90607d9355ab2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80dd001c15c67fa8bb152963b54a41a6adbed412633da9aa72d8dd7722f8f89\",\"dweb:/ipfs/Qmdc3RBLfgMxFBA4yyyjixFged1jXhhoqKxMWa8mDM6jCR\"]},\"37_54_IPermittedNFTs.sol\":{\"keccak256\":\"0xa3ffd2942d166f4d1f8ab21e47dce086b4d01a8b4b5c6692c98e4a26b2b0f99b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f1a9230d3f5104c3e424c02d8798aa46e8a422a47e6fb03df9014162b88f6a5\",\"dweb:/ipfs/QmdLZauWzizG1aKnHrsPb7XSJtwkC8xkqgvxDpazhMr2kQ\"]},\"38_54_IERC1155.sol\":{\"keccak256\":\"0xe206a36fdb3bf0821851840643cb7880a048d947c16492a956367ebae14276a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a566c130fa49a5e6f6c423c257bbdbfeb9675a4f47ea977f4153cf6e3cf47b36\",\"dweb:/ipfs/QmbCXsbNxewkBw3dGYYVYnrAEfvbDkta9Wy9bbGu77KWi2\"]},\"39_54_IAirdropFlashLoan.sol\":{\"keccak256\":\"0x11ac93c6deedf1453b2257883c016d959a8215c9af53c5c31c342c1224b26f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412de44dd11ecefeac5412fa1e2e524d3826982056782c0ba873bda71047128b\",\"dweb:/ipfs/QmR6EdmViHhcGLXbCG5XQ6v7KPMDdWGr7xUkewHtXA74t9\"]},\"40_54_IAirdropReceiverFactory.sol\":{\"keccak256\":\"0xebb81248214ef956da9dff274331ce1a0cd02dc7286684d05ff9c6f242ee5996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb8c20789a9144de8076ca2c0969bc11d90d1a499a8282a42f35a98e07ab53db\",\"dweb:/ipfs/QmeivxsVs7d76JHa46P7JhTG3pFspyu8FZEj8GKUkz2xCL\"]},\"41_54_Pausable.sol\":{\"keccak256\":\"0x9347635dec691e4e18a54bb998ac5e26f5d413b0ac6625a5a87450c7cca85a7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef64d3936ac7fd4fbef75689b0ad0f822dd28ca90927566b043a797592c2819\",\"dweb:/ipfs/QmaYS6NAMkRJD5FnpNxiUNQE18Dds5QujgtU4enXs4nz3U\"]},\"42_54_IERC1155Receiver.sol\":{\"keccak256\":\"0x386464933922eac8150883805363cf9358f409208cdc26b332093d0d1da55973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e495f41079bca08f9663e62fd0c4ae03387566268d05c12c7c726fe0e10b26a4\",\"dweb:/ipfs/QmWC37FqzP18iN5N1tXwhS8E9t3XWuc78jS4ad31i14D1w\"]},\"43_54_IBundleBuilder.sol\":{\"keccak256\":\"0xf9b3ebf0cb17621198973d3885b8fcefb200ac7a2f3dc613b0316e21adc8a48c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306f336537c3a6cf636ca68fc1062659b57739a2a962b58f38e9388541287aac\",\"dweb:/ipfs/QmX2NkYjLkMK7Ux1Lw9yVTVoXfTbhRRB1A6u4s1uF6mmpc\"]},\"44_54_SignatureChecker.sol\":{\"keccak256\":\"0x2d56b73dd8e2f6b1954e8a24ddc0ad1ff2f4988b5571d2c5b6b4b4ff988f9053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40057c8d5eb79a23a1509088ca8e6b4b257e1874f67d499d08b5399aca3bc8f1\",\"dweb:/ipfs/QmYRyz1dEimDJNJLbmvAuX3ptmXR9xqVG9WqrjwdKpiAd1\"]},\"45_54_ECDSA.sol\":{\"keccak256\":\"0xbc991a1cf357ce19480831a40792c814238a3b5458134703682abd8aa39719fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2e3313add3a233ad2d1e9b65cb7c0296bdbe159c6d631da2b1d027b4954926\",\"dweb:/ipfs/QmT8bVda92mptimLgonyq28qENq4sRgy6K3v118CvZcKdP\"]},\"46_54_IERC1271.sol\":{\"keccak256\":\"0x14351164423eade7f2dbac5ca9ab8aeded8694f3b2d7a9e0114a2b3b6558198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7588d5d5a23ccdccfb39eb015939560bdc26fd11efb7e5ff8af23f5a3ce8b003\",\"dweb:/ipfs/QmRuohtRJYDoFGazYwbcbz557HzmQDWuW9phW6Cm8tQhwN\"]}},\"version\":1}","userdoc":{"events":{"AdminFeeUpdated(uint16)":{"notice":"This event is fired whenever the admins change the percent of interest rates earned that they charge as a fee. Note that newAdminFee can never exceed 10,000, since the fee is measured in basis points."},"ERC20Permit(address,bool)":{"notice":"This event is fired whenever the admin sets a ERC20 permit."},"LoanLiquidated(uint32,address,address,uint256,uint256,uint256,uint256,address)":{"notice":"This event is fired whenever a lender liquidates an outstanding loan that is owned to them that has exceeded its duration. The lender receives the underlying NFT collateral, and the borrower no longer needs to repay the loan principal-plus-interest."},"LoanRenegotiated(uint32,address,address,uint32,uint256,uint256,uint256)":{"notice":"This event is fired when some of the terms of a loan are being renegotiated."},"LoanRepaid(uint32,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address)":{"notice":"This event is fired whenever a borrower successfully repays their loan, paying principal-plus-interest-minus-fee to the lender in loanERC20Denomination, paying fee to owner in loanERC20Denomination, and receiving their NFT collateral back."},"LoanStarted(uint32,address,address,(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address),(address,uint16,uint16))":{"notice":"This event is fired whenever a borrower begins a loan by calling NFTfi.beginLoan(), which can only occur after both the lender and borrower have approved their ERC721 and ERC20 contracts to use NFTfi, and when they both have signed off-chain messages that agree on the terms of the loan."},"MaximumLoanDurationUpdated(uint256)":{"notice":"This event is fired whenever the admins change the maximum duration of any loan started for this loan type."}},"kind":"user","methods":{"adminFeeInBasisPoints()":{"notice":"The percentage of interest earned by lenders on this platform that is taken by the contract admin's as a fee, measured in basis points (hundreths of a percent). The max allowed value is 10000."},"cancelLoanCommitmentBeforeLoanHasBegun(uint256)":{"notice":"This function can be called by either a lender or a borrower to cancel all off-chain orders that they have signed that contain this nonce. If the off-chain orders were created correctly, there should only be one off-chain order that contains this nonce at all. The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes. First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce."},"drainERC1155Airdrop(address,uint256,address)":{"notice":"used by the owner account to be able to drain ERC1155 tokens received as airdrops for the locked  collateral NFT-s"},"drainERC20Airdrop(address,address)":{"notice":"used by the owner account to be able to drain ERC20 tokens received as airdrops for the locked  collateral NFT-s"},"drainERC721Airdrop(address,uint256,address)":{"notice":"used by the owner account to be able to drain ERC721 tokens received as airdrops for the locked  collateral NFT-s"},"getERC20Permit(address)":{"notice":"This function can be called by anyone to get the permit associated with the erc20 contract."},"getPayoffAmount(uint32)":{"notice":"This function can be used to view the current quantity of the ERC20 currency used in the specified loan required by the borrower to repay their loan, measured in the smallest unit of the ERC20 currency."},"getWhetherNonceHasBeenUsedForUser(address,uint256)":{"notice":"This function can be used to view whether a particular nonce for a particular user has already been used, either from a successful loan or a cancelled off-chain order."},"liquidateOverdueLoan(uint32)":{"notice":"This function is called by a lender once a loan has finished its duration and the borrower still has not repaid. The lender can call this function to seize the underlying NFT collateral, although the lender gives up all rights to the principal-plus-collateral by doing so. This function is purposefully not pausable in order to prevent an attack where the contract admin's pause the contract and hold hostage the NFT's that are still within it. We intentionally allow anybody to call this function, although only the lender will end up receiving the seized collateral. We are exploring the possbility of incentivizing users to call this function by using some of the admin funds."},"loanIdToLoan(uint32)":{"notice":"A mapping from a loan's identifier to the loan's details, represted by the loan struct."},"loanRepaidOrLiquidated(uint32)":{"notice":"A mapping tracking whether a loan has either been repaid or liquidated. This prevents an attacker trying to repay or liquidate the same loan twice."},"maximumLoanDuration()":{"notice":"The maximum duration of any loan started for this loan type, measured in seconds. This is both a sanity-check for borrowers and an upper limit on how long admins will have to support v1 of this contract if they eventually deprecate it, as well as a check to ensure that the loan duration never exceeds the space alotted for it in the loan struct."},"payBackLoan(uint32)":{"notice":"This function is called by a anyone to repay a loan. It can be called at any time after the loan has begun and before loan expiry.. The caller will pay a pro-rata portion of their interest if the loan is paid off early and the loan is pro-rated type, but the complete repayment amount if it is fixed type. The the borrower (current owner of the obligation note) will get the collaterl NFT back. This function is purposefully not pausable in order to prevent an attack where the contract admin's pause the contract and hold hostage the NFT's that are still within it."},"pullAirdrop(uint32,address,bytes,address,uint256,bool,uint256)":{"notice":"this function initiates a flashloan to pull an airdrop from a tartget contract"},"setERC20Permit(address,bool)":{"notice":"This function can be called by admins to change the permitted status of an ERC20 currency. This includes both adding an ERC20 currency to the permitted list and removing it."},"setERC20Permits(address[],bool[])":{"notice":"This function can be called by admins to change the permitted status of a batch of ERC20 currency. This includes both adding an ERC20 currency to the permitted list and removing it."},"updateAdminFee(uint16)":{"notice":"This function can be called by admins to change the percent of interest rates earned that they charge as a fee. Note that newAdminFee can never exceed 10,000, since the fee is measured in basis points."},"updateMaximumLoanDuration(uint256)":{"notice":"This function can be called by admins to change the maximumLoanDuration. Note that they can never change maximumLoanDuration to be greater than UINT32_MAX, since that's the maximum space alotted for the duration in the loan struct."},"wrapCollateral(uint32)":{"notice":"this function creates a proxy contract wrapping the collateral to be able to catch an expected airdrop"}},"notice":"Main contract for NFTfi Direct Loans Type. This contract manages the ability to create NFT-backed peer-to-peer loans. There are two ways to commence an NFT-backed loan: a. The borrower accepts a lender's offer by calling `acceptOffer`.   1. the borrower calls nftContract.approveAll(NFTfi), approving the NFTfi contract to move their NFT's on their be1alf.   2. the lender calls erc20Contract.approve(NFTfi), allowing NFTfi to move the lender's ERC20 tokens on their behalf.   3. the lender signs an off-chain message, proposing its offer terms.   4. the borrower calls `acceptOffer` to accept these terms and enter into the loan. The NFT is stored in the contract, the borrower receives the loan principal in the specified ERC20 currency, the lender receives an NFTfi promissory note (in ERC721 form) that represents the rights to either the principal-plus-interest, or the underlying NFT collateral if the borrower does not pay back in time, and the borrower receives obligation receipt (in ERC721 form) that gives them the right to pay back the loan and get the collateral back. b. The lender accepts a borrowe's binding terms by calling `acceptListing`.   1. the borrower calls nftContract.approveAll(NFTfi), approving the NFTfi contract to move their NFT's on their be1alf.   2. the lender calls erc20Contract.approve(NFTfi), allowing NFTfi to move the lender's ERC20 tokens on their behalf.   3. the borrower signs an off-chain message, proposing its binding terms.   4. the lender calls `acceptListing` with an offer matching the binding terms and enter into the loan. The NFT is stored in the contract, the borrower receives the loan principal in the specified ERC20 currency, the lender receives an NFTfi promissory note (in ERC721 form) that represents the rights to either the principal-plus-interest, or the underlying NFT collateral if the borrower does not pay back in time, and the borrower receives obligation receipt (in ERC721 form) that gives them the right to pay back the loan and get the collateral back. The lender can freely transfer and trade this ERC721 promissory note as they wish, with the knowledge that transferring the ERC721 promissory note tranfsers the rights to principal-plus-interest and/or collateral, and that they will no longer have a claim on the loan. The ERC721 promissory note itself represents that claim. The borrower can freely transfer and trade this ERC721 obligaiton receipt as they wish, with the knowledge that transferring the ERC721 obligaiton receipt tranfsers the rights right to pay back the loan and get the collateral back. A loan may end in one of two ways: - First, a borrower may call NFTfi.payBackLoan() and pay back the loan plus interest at any time, in which case they receive their NFT back in the same transaction. - Second, if the loan's duration has passed and the loan has not been paid back yet, a lender can call NFTfi.liquidateOverdueLoan(), in which case they receive the underlying NFT collateral and forfeit the rights to the principal-plus-interest, which the borrower now keeps. If the loan was created as a ProRated type loan (pro-rata interest loan), then the user only pays the principal plus pro-rata interest if repaid early. However, if the loan was was created as a Fixed type loan (agreed to be a fixed-repayment loan), then the borrower pays the maximumRepaymentAmount regardless of whether they repay early or not.","version":1}}},"24_54_ContractKeys.sol":{"ContractKeys":{"abi":[{"inputs":[],"name":"AIRDROP_FACTORY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"AIRDROP_FLASH_LOAN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"AIRDROP_RECEIVER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"AIRDROP_WRAPPER_STRING","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LOAN_REGISTRY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NFTFI_BUNDLER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NFT_TYPE_REGISTRY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMITTED_AIRDROPS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMITTED_BUNDLE_ERC20S","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMITTED_ERC20S","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMITTED_NFTS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMITTED_PARTNERS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMITTED_SNFT_RECEIVER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_key","type":"string"}],"name":"getIdFromStringKey","outputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"pure","type":"function"}],"devdoc":{"author":"NFTfi","details":"Common library for contract keys","kind":"dev","methods":{"getIdFromStringKey(string)":{"params":{"_key":"the string key"},"returns":{"id":"bytes32 representation"}}},"title":"ContractKeys","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AIRDROP_FACTORY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AIRDROP_FLASH_LOAN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AIRDROP_RECEIVER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AIRDROP_WRAPPER_STRING\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOAN_REGISTRY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTFI_BUNDLER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT_TYPE_REGISTRY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMITTED_AIRDROPS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMITTED_BUNDLE_ERC20S\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMITTED_ERC20S\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMITTED_NFTS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMITTED_PARTNERS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMITTED_SNFT_RECEIVER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"getIdFromStringKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Common library for contract keys\",\"kind\":\"dev\",\"methods\":{\"getIdFromStringKey(string)\":{\"params\":{\"_key\":\"the string key\"},\"returns\":{\"id\":\"bytes32 representation\"}}},\"title\":\"ContractKeys\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getIdFromStringKey(string)\":{\"notice\":\"Returns the bytes32 representation of a string\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"24_54_ContractKeys.sol\":\"ContractKeys\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"24_54_ContractKeys.sol\":{\"keccak256\":\"0xbc0e88b96be83469df452dabdf456b2af3e38875b649406fd0b2b6e59c5667ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b120aa2d95a217f6f96f2ab0ac26a5efaef020ef9b5f6a460c208cb91f0249a\",\"dweb:/ipfs/QmSwbSfSNJN84GrRtvPcHvffKVK8jmtVNSDBExArPsSabu\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"getIdFromStringKey(string)":{"notice":"Returns the bytes32 representation of a string"}},"version":1}}},"25_54_IDirectLoanBase.sol":{"IDirectLoanBase":{"abi":[{"inputs":[],"name":"LOAN_COORDINATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adminFeeInBasisPoints","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"getWhetherNonceHasBeenUsedForUser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"loanIdToLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint64","name":"","type":"uint64"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"loanRepaidOrLiquidated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maximumLoanDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LOAN_COORDINATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminFeeInBasisPoints\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getWhetherNonceHasBeenUsedForUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"loanIdToLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"loanRepaidOrLiquidated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumLoanDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"25_54_IDirectLoanBase.sol\":\"IDirectLoanBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"25_54_IDirectLoanBase.sol\":{\"keccak256\":\"0x7510a1b6566c11856fcf7307b5765f07fba194f5617758d85d84f5a121271ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d958d1866dc96349fdb6164aa9d6774841b968e921c7c5fc77cbd0640fb18f98\",\"dweb:/ipfs/QmNmATtAkfEU5hLmLsiEUvFXuhHEqFqeYMKXAzdN91WGzr\"]},\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"26_54_LoanData.sol":{"LoanData":{"abi":[],"devdoc":{"author":"NFTfi","kind":"dev","methods":{},"title":"LoanData","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"NFTfi\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LoanData\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"An interface containg the main Loan struct shared by Direct Loans types.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"26_54_LoanData.sol\":\"LoanData\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"notice":"An interface containg the main Loan struct shared by Direct Loans types.","version":1}}},"27_54_LoanChecksAndCalculations.sol":{"LoanChecksAndCalculations":{"abi":[{"inputs":[{"components":[{"internalType":"uint256","name":"minLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maxLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"minLoanDuration","type":"uint32"},{"internalType":"uint32","name":"maxLoanDuration","type":"uint32"},{"internalType":"uint16","name":"maxInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"address","name":"loanERC20Denomination","type":"address"}],"internalType":"struct LoanData.ListingTerms","name":"_listingTerms","type":"tuple"},{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"address","name":"referrer","type":"address"}],"internalType":"struct LoanData.Offer","name":"_offer","type":"tuple"}],"name":"bindingTermsSanityChecks","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"contract INftfiHub","name":"_hub","type":"INftfiHub"}],"name":"checkLoanIdValidity","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_interestDue","type":"uint256"},{"internalType":"uint256","name":"_adminFeeInBasisPoints","type":"uint256"}],"name":"computeAdminFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"_referralFeeInBasisPoints","type":"uint256"},{"internalType":"address","name":"_referrer","type":"address"}],"name":"computeReferralFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_adminFee","type":"uint256"},{"internalType":"uint256","name":"_revenueShareInBasisPoints","type":"uint256"}],"name":"computeRevenueShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_revenueSharePartner","type":"address"},{"internalType":"contract INftfiHub","name":"_hub","type":"INftfiHub"}],"name":"getRevenueSharePercent","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"contract INftfiHub","name":"_hub","type":"INftfiHub"}],"name":"payBackChecks","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"nftCollateralWrapper","type":"address"},{"internalType":"uint64","name":"loanStartTime","type":"uint64"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"address","name":"borrower","type":"address"}],"internalType":"struct LoanData.LoanTerms","name":"_loan","type":"tuple"},{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"uint32","name":"_newLoanDuration","type":"uint32"},{"internalType":"uint256","name":"_newMaximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"_lenderNonce","type":"uint256"},{"internalType":"contract INftfiHub","name":"_hub","type":"INftfiHub"}],"name":"renegotiationChecks","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"NFTfi","kind":"dev","methods":{"bindingTermsSanityChecks(LoanData.ListingTerms,LoanData.Offer)":{"details":"Performs some validation checks over loan parameters when accepting a listing"},"computeAdminFee(uint256,uint256)":{"params":{"_adminFeeInBasisPoints":"- The percent (measured in basis points) of the interest earned that will be taken as a fee by the contract admins when the loan is repaid. The fee is stored in the loan struct to prevent an attack where the contract admins could adjust the fee right before a loan is repaid, and take all of the interest earned.","_interestDue":"- The amount of interest due, measured in the smallest quantity of the ERC20 currency being used to pay the interest."},"returns":{"_0":"The quantity of ERC20 currency (measured in smalled units of that ERC20 currency) that is due as an admin fee."}},"computeReferralFee(uint256,uint256,address)":{"params":{"_loanPrincipalAmount":"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.","_referralFeeInBasisPoints":"- The percent (measured in basis points) of the loan principal amount that will be taken as a fee to pay to the referrer, 0 if the lender is not paying referral fee.","_referrer":"- The address of the referrer who found the lender matching the listing, Zero address to signal that there is no referrer."},"returns":{"_0":"The quantity of ERC20 currency (measured in smalled units of that ERC20 currency) that should be sent to the referrer."}},"computeRevenueShare(uint256,uint256)":{"params":{"_adminFee":"- The quantity of ERC20 currency (measured in smalled units of that ERC20 currency) that is due as an admin fee.","_revenueShareInBasisPoints":"- The percent (measured in basis points) of the admin fee amount that will be taken as a revenue share for a the partner, at the moment the loan is begun."},"returns":{"_0":"The quantity of ERC20 currency (measured in smalled units of that ERC20 currency) that should be sent to the `revenueSharePartner`."}},"getRevenueSharePercent(address,INftfiHub)":{"details":"Function that the partner is permitted and returns its shared percent.","params":{"_revenueSharePartner":"- Partner's address"},"returns":{"_0":"The revenue share percent for the partner."}},"payBackChecks(uint32,INftfiHub)":{"details":"Function that performs some validation checks before trying to repay a loan","params":{"_loanId":"- The id of the loan being repaid"}},"renegotiationChecks(LoanData.LoanTerms,uint32,uint32,uint256,uint256,INftfiHub)":{"details":"Performs some validation checks before trying to renegotiate a loan. Needed to avoid stack too deep.","params":{"_lenderNonce":"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.","_loan":"- The main Loan Terms struct.","_loanId":"- The unique identifier for the loan to be renegotiated","_newLoanDuration":"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.","_newMaximumRepaymentAmount":"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early."},"returns":{"_0":"Borrower and Lender addresses"}}},"title":"LoanChecksAndCalculations","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"maxInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.ListingTerms\",\"name\":\"_listingTerms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"}],\"name\":\"bindingTermsSanityChecks\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"contract INftfiHub\",\"name\":\"_hub\",\"type\":\"INftfiHub\"}],\"name\":\"checkLoanIdValidity\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_interestDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_adminFeeInBasisPoints\",\"type\":\"uint256\"}],\"name\":\"computeAdminFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referralFeeInBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"computeReferralFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_adminFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revenueShareInBasisPoints\",\"type\":\"uint256\"}],\"name\":\"computeRevenueShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"contract INftfiHub\",\"name\":\"_hub\",\"type\":\"INftfiHub\"}],\"name\":\"getRevenueSharePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"contract INftfiHub\",\"name\":\"_hub\",\"type\":\"INftfiHub\"}],\"name\":\"payBackChecks\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"nftCollateralWrapper\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"loanStartTime\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.LoanTerms\",\"name\":\"_loan\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_newLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_newMaximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lenderNonce\",\"type\":\"uint256\"},{\"internalType\":\"contract INftfiHub\",\"name\":\"_hub\",\"type\":\"INftfiHub\"}],\"name\":\"renegotiationChecks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"kind\":\"dev\",\"methods\":{\"bindingTermsSanityChecks(LoanData.ListingTerms,LoanData.Offer)\":{\"details\":\"Performs some validation checks over loan parameters when accepting a listing\"},\"computeAdminFee(uint256,uint256)\":{\"params\":{\"_adminFeeInBasisPoints\":\"- The percent (measured in basis points) of the interest earned that will be taken as a fee by the contract admins when the loan is repaid. The fee is stored in the loan struct to prevent an attack where the contract admins could adjust the fee right before a loan is repaid, and take all of the interest earned.\",\"_interestDue\":\"- The amount of interest due, measured in the smallest quantity of the ERC20 currency being used to pay the interest.\"},\"returns\":{\"_0\":\"The quantity of ERC20 currency (measured in smalled units of that ERC20 currency) that is due as an admin fee.\"}},\"computeReferralFee(uint256,uint256,address)\":{\"params\":{\"_loanPrincipalAmount\":\"- The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units.\",\"_referralFeeInBasisPoints\":\"- The percent (measured in basis points) of the loan principal amount that will be taken as a fee to pay to the referrer, 0 if the lender is not paying referral fee.\",\"_referrer\":\"- The address of the referrer who found the lender matching the listing, Zero address to signal that there is no referrer.\"},\"returns\":{\"_0\":\"The quantity of ERC20 currency (measured in smalled units of that ERC20 currency) that should be sent to the referrer.\"}},\"computeRevenueShare(uint256,uint256)\":{\"params\":{\"_adminFee\":\"- The quantity of ERC20 currency (measured in smalled units of that ERC20 currency) that is due as an admin fee.\",\"_revenueShareInBasisPoints\":\"- The percent (measured in basis points) of the admin fee amount that will be taken as a revenue share for a the partner, at the moment the loan is begun.\"},\"returns\":{\"_0\":\"The quantity of ERC20 currency (measured in smalled units of that ERC20 currency) that should be sent to the `revenueSharePartner`.\"}},\"getRevenueSharePercent(address,INftfiHub)\":{\"details\":\"Function that the partner is permitted and returns its shared percent.\",\"params\":{\"_revenueSharePartner\":\"- Partner's address\"},\"returns\":{\"_0\":\"The revenue share percent for the partner.\"}},\"payBackChecks(uint32,INftfiHub)\":{\"details\":\"Function that performs some validation checks before trying to repay a loan\",\"params\":{\"_loanId\":\"- The id of the loan being repaid\"}},\"renegotiationChecks(LoanData.LoanTerms,uint32,uint32,uint256,uint256,INftfiHub)\":{\"details\":\"Performs some validation checks before trying to renegotiate a loan. Needed to avoid stack too deep.\",\"params\":{\"_lenderNonce\":\"- The nonce referred to here is not the same as an Ethereum account's nonce. We are referring instead to nonces that are used by both the lender and the borrower when they are first signing off-chain NFTfi orders. These nonces can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce.\",\"_loan\":\"- The main Loan Terms struct.\",\"_loanId\":\"- The unique identifier for the loan to be renegotiated\",\"_newLoanDuration\":\"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.\",\"_newMaximumRepaymentAmount\":\"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.\"},\"returns\":{\"_0\":\"Borrower and Lender addresses\"}}},\"title\":\"LoanChecksAndCalculations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeAdminFee(uint256,uint256)\":{\"notice\":\"A convenience function computing the adminFee taken from a specified quantity of interest.\"},\"computeReferralFee(uint256,uint256,address)\":{\"notice\":\"A convenience function computing the referral fee taken from the loan principal amount to transferr to the referrer.\"},\"computeRevenueShare(uint256,uint256)\":{\"notice\":\"A convenience function computing the revenue share taken from the admin fee to transferr to the permitted partner.\"}},\"notice\":\"Helper library for LoanBase\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"27_54_LoanChecksAndCalculations.sol\":\"LoanChecksAndCalculations\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"24_54_ContractKeys.sol\":{\"keccak256\":\"0xbc0e88b96be83469df452dabdf456b2af3e38875b649406fd0b2b6e59c5667ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b120aa2d95a217f6f96f2ab0ac26a5efaef020ef9b5f6a460c208cb91f0249a\",\"dweb:/ipfs/QmSwbSfSNJN84GrRtvPcHvffKVK8jmtVNSDBExArPsSabu\"]},\"25_54_IDirectLoanBase.sol\":{\"keccak256\":\"0x7510a1b6566c11856fcf7307b5765f07fba194f5617758d85d84f5a121271ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d958d1866dc96349fdb6164aa9d6774841b968e921c7c5fc77cbd0640fb18f98\",\"dweb:/ipfs/QmNmATtAkfEU5hLmLsiEUvFXuhHEqFqeYMKXAzdN91WGzr\"]},\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]},\"27_54_LoanChecksAndCalculations.sol\":{\"keccak256\":\"0xae79ec552bc5ef00278d8f82acbc9bbdcab110a8531ce24cd03967b42c24e560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfad4dd2ce5148000fc776025e9f41d16053ba9c1f9e8b265f49cb2c90203a7f\",\"dweb:/ipfs/QmV6TTAHY4WeUYUVSBJuaDeMoTsGXny6FCh9jZ2gRBwDyE\"]},\"32_54_INftfiHub.sol\":{\"keccak256\":\"0xc784578474998dabaff4116fdd3520c92dd10e7c8d98e415f2239f9d96c8a1a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f70642c1d2664910240ac14b4f8b717d02bac324f7fb3afbdb0dd46effab93d\",\"dweb:/ipfs/QmPpQZTErwXAGVGMeP7xbnUrb2Foak7DonfhwEpKwniuL3\"]},\"33_54_IDirectLoanCoordinator.sol\":{\"keccak256\":\"0x0576d6bd283b2ff48f0afbad951b7d8f051dfc85bbe69b5525be80173df72de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a187fd0527531a1a7bce926ed60a75cf012869761c9b82c8c4acf39ba1b287\",\"dweb:/ipfs/QmTdFNC3kqAifHQc46fW12QfsLNdzsnBC5CFeS8KU4UdJP\"]},\"35_54_IPermittedPartners.sol\":{\"keccak256\":\"0x72398dc42a7522e77cfa9c4fdfe02f338846ff4b2d2c92985185cf8edfa550f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://febaab9458f9ba5d9c46272d297df5d9f97b78a032782364db008d8ae6d26898\",\"dweb:/ipfs/QmQujERQZbdJ6TbMNAHEeBy5UyM7EcCi8vvuuNUTXwRseT\"]},\"36_54_IPermittedERC20s.sol\":{\"keccak256\":\"0x23fa01735d0fbc2d2c96cbd2171ce5ad1da3122f08ec26b5a90607d9355ab2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80dd001c15c67fa8bb152963b54a41a6adbed412633da9aa72d8dd7722f8f89\",\"dweb:/ipfs/Qmdc3RBLfgMxFBA4yyyjixFged1jXhhoqKxMWa8mDM6jCR\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"computeAdminFee(uint256,uint256)":{"notice":"A convenience function computing the adminFee taken from a specified quantity of interest."},"computeReferralFee(uint256,uint256,address)":{"notice":"A convenience function computing the referral fee taken from the loan principal amount to transferr to the referrer."},"computeRevenueShare(uint256,uint256)":{"notice":"A convenience function computing the revenue share taken from the admin fee to transferr to the permitted partner."}},"notice":"Helper library for LoanBase","version":1}}},"28_54_LoanAirdropUtils.sol":{"LoanAirdropUtils":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"loanId","type":"uint256"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"indexed":false,"internalType":"address","name":"nftCollateralContract","type":"address"},{"indexed":false,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"AirdropPulledFlashloan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"loanId","type":"uint256"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"indexed":false,"internalType":"address","name":"nftCollateralContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"receiverId","type":"uint256"},{"indexed":false,"internalType":"address","name":"receiverInstance","type":"address"}],"name":"CollateralWrapped","type":"event"}],"devdoc":{"author":"NFTfi","events":{"AirdropPulledFlashloan(uint256,address,uint256,address,address,bytes)":{"params":{"borrower":"- The address of the borrower.","data":"- function selector to be called","loanId":"- A unique identifier for this particular loan, sourced from the Loan Coordinator.","nftCollateralContract":"- The ERC721 contract of the NFT collateral","nftCollateralId":"- The ID within the AirdropReceiver for the NFT being used as collateral for this loan.","target":"- address of the airdropping contract"}},"CollateralWrapped(uint256,address,uint256,address,uint256,address)":{"params":{"borrower":"- The address of the borrower.","loanId":"- A unique identifier for this particular loan, sourced from the Loan Coordinator.","nftCollateralContract":"- The contract of the NFT collateral","nftCollateralId":"- The ID within the AirdropReceiver for the NFT being used as collateral for this loan.","receiverId":"- id of the created AirdropReceiver, takes the place of nftCollateralId on the loan","receiverInstance":"- address of the created AirdropReceiver"}}},"kind":"dev","methods":{},"title":"LoanAirdropUtils","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"AirdropPulledFlashloan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receiverId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiverInstance\",\"type\":\"address\"}],\"name\":\"CollateralWrapped\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"NFTfi\",\"events\":{\"AirdropPulledFlashloan(uint256,address,uint256,address,address,bytes)\":{\"params\":{\"borrower\":\"- The address of the borrower.\",\"data\":\"- function selector to be called\",\"loanId\":\"- A unique identifier for this particular loan, sourced from the Loan Coordinator.\",\"nftCollateralContract\":\"- The ERC721 contract of the NFT collateral\",\"nftCollateralId\":\"- The ID within the AirdropReceiver for the NFT being used as collateral for this loan.\",\"target\":\"- address of the airdropping contract\"}},\"CollateralWrapped(uint256,address,uint256,address,uint256,address)\":{\"params\":{\"borrower\":\"- The address of the borrower.\",\"loanId\":\"- A unique identifier for this particular loan, sourced from the Loan Coordinator.\",\"nftCollateralContract\":\"- The contract of the NFT collateral\",\"nftCollateralId\":\"- The ID within the AirdropReceiver for the NFT being used as collateral for this loan.\",\"receiverId\":\"- id of the created AirdropReceiver, takes the place of nftCollateralId on the loan\",\"receiverInstance\":\"- address of the created AirdropReceiver\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"LoanAirdropUtils\",\"version\":1},\"userdoc\":{\"events\":{\"AirdropPulledFlashloan(uint256,address,uint256,address,address,bytes)\":{\"notice\":\"This event is fired whenever a flashloan is initiated to pull an airdrop\"},\"CollateralWrapped(uint256,address,uint256,address,uint256,address)\":{\"notice\":\"This event is fired whenever the collateral gets wrapped in an airdrop receiver\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper library for LoanBase\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"28_54_LoanAirdropUtils.sol\":\"LoanAirdropUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"24_54_ContractKeys.sol\":{\"keccak256\":\"0xbc0e88b96be83469df452dabdf456b2af3e38875b649406fd0b2b6e59c5667ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b120aa2d95a217f6f96f2ab0ac26a5efaef020ef9b5f6a460c208cb91f0249a\",\"dweb:/ipfs/QmSwbSfSNJN84GrRtvPcHvffKVK8jmtVNSDBExArPsSabu\"]},\"25_54_IDirectLoanBase.sol\":{\"keccak256\":\"0x7510a1b6566c11856fcf7307b5765f07fba194f5617758d85d84f5a121271ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d958d1866dc96349fdb6164aa9d6774841b968e921c7c5fc77cbd0640fb18f98\",\"dweb:/ipfs/QmNmATtAkfEU5hLmLsiEUvFXuhHEqFqeYMKXAzdN91WGzr\"]},\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]},\"28_54_LoanAirdropUtils.sol\":{\"keccak256\":\"0x3410d63bfd045c86b16fc4ddf446f46ccb606257fee2aa83ddde7000924b279b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571c3fca1368ef5bc6b8e5b8502affa2099e5a0b9a163c5c9dde5369b77a6e3a\",\"dweb:/ipfs/QmPXMDTc3KFmcJZaDbNyDhCkTyUpkocwnkhLSdDBxu1jTg\"]},\"32_54_INftfiHub.sol\":{\"keccak256\":\"0xc784578474998dabaff4116fdd3520c92dd10e7c8d98e415f2239f9d96c8a1a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f70642c1d2664910240ac14b4f8b717d02bac324f7fb3afbdb0dd46effab93d\",\"dweb:/ipfs/QmPpQZTErwXAGVGMeP7xbnUrb2Foak7DonfhwEpKwniuL3\"]},\"33_54_IDirectLoanCoordinator.sol\":{\"keccak256\":\"0x0576d6bd283b2ff48f0afbad951b7d8f051dfc85bbe69b5525be80173df72de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a187fd0527531a1a7bce926ed60a75cf012869761c9b82c8c4acf39ba1b287\",\"dweb:/ipfs/QmTdFNC3kqAifHQc46fW12QfsLNdzsnBC5CFeS8KU4UdJP\"]},\"34_54_INftWrapper.sol\":{\"keccak256\":\"0x64df547c2d3ed2f6720b24844ffba086f175643edcf0b38f0d060cf19637b245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac45e66d50666604434ebcb37f8d9041f2070f935eeec1769b19e49707bfde84\",\"dweb:/ipfs/QmNj2JEFSs4Qzpi8DLvhaqkW3VX9z5pgGXVApuJFCMmDkR\"]},\"35_54_IPermittedPartners.sol\":{\"keccak256\":\"0x72398dc42a7522e77cfa9c4fdfe02f338846ff4b2d2c92985185cf8edfa550f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://febaab9458f9ba5d9c46272d297df5d9f97b78a032782364db008d8ae6d26898\",\"dweb:/ipfs/QmQujERQZbdJ6TbMNAHEeBy5UyM7EcCi8vvuuNUTXwRseT\"]},\"36_54_IPermittedERC20s.sol\":{\"keccak256\":\"0x23fa01735d0fbc2d2c96cbd2171ce5ad1da3122f08ec26b5a90607d9355ab2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80dd001c15c67fa8bb152963b54a41a6adbed412633da9aa72d8dd7722f8f89\",\"dweb:/ipfs/Qmdc3RBLfgMxFBA4yyyjixFged1jXhhoqKxMWa8mDM6jCR\"]},\"39_54_IAirdropFlashLoan.sol\":{\"keccak256\":\"0x11ac93c6deedf1453b2257883c016d959a8215c9af53c5c31c342c1224b26f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412de44dd11ecefeac5412fa1e2e524d3826982056782c0ba873bda71047128b\",\"dweb:/ipfs/QmR6EdmViHhcGLXbCG5XQ6v7KPMDdWGr7xUkewHtXA74t9\"]},\"40_54_IAirdropReceiverFactory.sol\":{\"keccak256\":\"0xebb81248214ef956da9dff274331ce1a0cd02dc7286684d05ff9c6f242ee5996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb8c20789a9144de8076ca2c0969bc11d90d1a499a8282a42f35a98e07ab53db\",\"dweb:/ipfs/QmeivxsVs7d76JHa46P7JhTG3pFspyu8FZEj8GKUkz2xCL\"]}},\"version\":1}","userdoc":{"events":{"AirdropPulledFlashloan(uint256,address,uint256,address,address,bytes)":{"notice":"This event is fired whenever a flashloan is initiated to pull an airdrop"},"CollateralWrapped(uint256,address,uint256,address,uint256,address)":{"notice":"This event is fired whenever the collateral gets wrapped in an airdrop receiver"}},"kind":"user","methods":{},"notice":"Helper library for LoanBase","version":1}}},"29_54_BaseLoan.sol":{"BaseLoan":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"NFTfi","details":"Implements base functionalities common to all Loan types. Mostly related to governance and security.","events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"constructor":{"params":{"_admin":"- Initial admin of this contract."}},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"Triggers stopped state. Requirements: - Only the owner can call this method. - The contract must not be paused."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{"details":"Returns to normal state. Requirements: - Only the owner can call this method. - The contract must be paused."}},"title":"BaseLoan","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Implements base functionalities common to all Loan types. Mostly related to governance and security.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_admin\":\"- Initial admin of this contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Triggers stopped state. Requirements: - Only the owner can call this method. - The contract must not be paused.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Returns to normal state. Requirements: - Only the owner can call this method. - The contract must be paused.\"}},\"title\":\"BaseLoan\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets the admin of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"29_54_BaseLoan.sol\":\"BaseLoan\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"15_54_ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"16_54_Ownable.sol\":{\"keccak256\":\"0x66a03d4cf54f75978905db625064e129580ba7bca0c8d68d259c6f2f80fd55ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7f4fe6aef097c1ae907579edeb3467de23abf6e7797ce10fec8e3829de56e45\",\"dweb:/ipfs/QmUUDV6KJ9Lsz7rzZqicgbqUxAugfwhBxpVUrNvQMFwNz3\"]},\"22_54_Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"29_54_BaseLoan.sol\":{\"keccak256\":\"0xc2b67aaa818d9746e0cfb4a1e11d2993d63ec0c91822fc922a625cc374b7bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b2b4f4bfb81e63f10568a557d5fe69ed73587dd2c6562f761be64a62101e559\",\"dweb:/ipfs/QmYo8mJnPtpzxudEdRHufBs1eCEwKc1uv3b51BuoqFoBsC\"]},\"41_54_Pausable.sol\":{\"keccak256\":\"0x9347635dec691e4e18a54bb998ac5e26f5d413b0ac6625a5a87450c7cca85a7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef64d3936ac7fd4fbef75689b0ad0f822dd28ca90927566b043a797592c2819\",\"dweb:/ipfs/QmaYS6NAMkRJD5FnpNxiUNQE18Dds5QujgtU4enXs4nz3U\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"constructor":{"notice":"Sets the admin of the contract."}},"version":1}}},"2_54_IMigrationWithItems.sol":{"IMigrationWithItems":{"abi":[{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"},{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"newLoanTerms","type":"tuple"},{"internalType":"address","name":"lender","type":"address"},{"internalType":"uint160","name":"nonce","type":"uint160"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"components":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"verifier","type":"address"}],"internalType":"struct LoanLibrary.Predicate[]","name":"itemPredicates","type":"tuple[]"}],"name":"migrateLoanWithItems","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"newLoanTerms\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"internalType\":\"struct LoanLibrary.Predicate[]\",\"name\":\"itemPredicates\",\"type\":\"tuple[]\"}],\"name\":\"migrateLoanWithItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"2_54_IMigrationWithItems.sol\":\"IMigrationWithItems\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_54_INFTWithDescriptor.sol\":{\"keccak256\":\"0xa65ff18a7c35e3a1d4ced320590e512a5a1ac3b5038529882019344b93dc1a1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15800408246c27da705c6b3fd5f95f1a3cc0d12cee025e5fd74b76687478058\",\"dweb:/ipfs/QmNkNxrxM4fd67JrDD5M1u16WoBVm9fd9fcgPCcUuhiApw\"]},\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"2_54_IMigrationWithItems.sol\":{\"keccak256\":\"0x58bbd12f52dee0bc38974c546b877dbe5b6680129083b013532b2793d0d07252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fada659622855363a13008d5533036131cd7d19f3406528e598928653e0aefca\",\"dweb:/ipfs/QmSN896tkJp7aCFfh4jpdBditFXQoPXP1iHCbui4rmVPyX\"]},\"6_54_ILoanCore.sol\":{\"keccak256\":\"0xc5993fe6e7dd4826897f1866f2a35ccb7b0cb5894b9df04b1872d0ff1b197261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fa76832ad15227f30919d41326f0749cfceac7b0ab67d8f944cba8af7921e\",\"dweb:/ipfs/QmdjZTDT7Hs6rBwJy6BFB5fGc9taabSxmk9ERPSm9XEEd8\"]},\"7_54_LoanLibrary.sol\":{\"keccak256\":\"0xd743e4c985ac20b24c724eb4a06c6ce129d92eb781ab86db7927a0ee2665b77a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0abc0f22341bf88f4427dc707bdd717e3664e6d067f564892347336dc097b9\",\"dweb:/ipfs/QmcGszcBq13arGxkBKX9mga8cqWCiVhiw5XpCanaxh8qeS\"]},\"8_54_IPromissoryNote.sol\":{\"keccak256\":\"0xed6dd50ea09b63ae6e88141ad4bd69c4b291de7fc5148b8b94b56c962d53905f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af3e913a5130ab73499a61db0055b8e008d11f4d69e4b914fbefe07deaf074a0\",\"dweb:/ipfs/QmVSBKHRRaDDRXFWVQYazqbinxPtCjXSVbt6BMmkZ21rVa\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"30_54_NftReceiver.sol":{"NftReceiver":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"NFTfi","details":"Base contract with capabilities for receiving ERC1155 and ERC721 tokens","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated.","returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated.","returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if allowed"}},"onERC721Received(address,address,uint256,bytes)":{"details":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."},"supportsInterface(bytes4)":{"details":"Checks whether this contract implements the interface defined by `interfaceId`.","params":{"_interfaceId":"Id of the interface"},"returns":{"_0":"true if this contract implements the interface"}}},"title":"NftReceiver","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Base contract with capabilities for receiving ERC1155 and ERC721 tokens\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated.\",\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated.\",\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if allowed\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Checks whether this contract implements the interface defined by `interfaceId`.\",\"params\":{\"_interfaceId\":\"Id of the interface\"},\"returns\":{\"_0\":\"true if this contract implements the interface\"}}},\"title\":\"NftReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"30_54_NftReceiver.sol\":\"NftReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"14_54_ERC721Holder.sol\":{\"keccak256\":\"0xfc46c4f762239615d31ba45ae92094fc71c49bd6c7fb59ccec38dd285f101602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88324c85c20335b973fa97f152e64d6ea1f42af3ce57079baae898a0195db633\",\"dweb:/ipfs/QmPsqm7knfFhJi7bzdbRsZRxRy2aNmzHfhzyFiQDD4PUtH\"]},\"21_54_IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"30_54_NftReceiver.sol\":{\"keccak256\":\"0x29fc615d267899a88ac3c717b460942ef2c4d85288b5489de67571ee28287d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66fd330a2b95c6bf4e8866a51191cdf3f667f7262339365c706595f0cfa4681\",\"dweb:/ipfs/QmQMZpVFTtitHWaJ3F7jUDreHu5tLAc8kf8miXYhF5K7Ba\"]},\"42_54_IERC1155Receiver.sol\":{\"keccak256\":\"0x386464933922eac8150883805363cf9358f409208cdc26b332093d0d1da55973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e495f41079bca08f9663e62fd0c4ae03387566268d05c12c7c726fe0e10b26a4\",\"dweb:/ipfs/QmWC37FqzP18iN5N1tXwhS8E9t3XWuc78jS4ad31i14D1w\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"31_54_NFTfiSigningUtils.sol":{"NFTfiSigningUtils":{"abi":[{"inputs":[],"name":"getChainID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"minLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maxLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"minLoanDuration","type":"uint32"},{"internalType":"uint32","name":"maxLoanDuration","type":"uint32"},{"internalType":"uint16","name":"maxInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"address","name":"loanERC20Denomination","type":"address"}],"internalType":"struct LoanData.ListingTerms","name":"_listingTerms","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"}],"name":"isValidBorrowerSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"minLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maxLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"minLoanDuration","type":"uint32"},{"internalType":"uint32","name":"maxLoanDuration","type":"uint32"},{"internalType":"uint16","name":"maxInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"address","name":"loanERC20Denomination","type":"address"}],"internalType":"struct LoanData.ListingTerms","name":"_listingTerms","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"},{"internalType":"address","name":"_loanContract","type":"address"}],"name":"isValidBorrowerSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"minLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maxLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"minLoanDuration","type":"uint32"},{"internalType":"uint32","name":"maxLoanDuration","type":"uint32"},{"internalType":"uint16","name":"maxInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"address","name":"loanERC20Denomination","type":"address"}],"internalType":"struct LoanData.ListingTerms","name":"_listingTerms","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bool","name":"safeTransferable","type":"bool"}],"internalType":"struct IBundleBuilder.BundleElementERC721[]","name":"erc721s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IBundleBuilder.BundleElementERC20[]","name":"erc20s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"internalType":"struct IBundleBuilder.BundleElementERC1155[]","name":"erc1155s","type":"tuple[]"}],"internalType":"struct IBundleBuilder.BundleElements","name":"_bundleElements","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"}],"name":"isValidBorrowerSignatureBundle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"minLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maxLoanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"minLoanDuration","type":"uint32"},{"internalType":"uint32","name":"maxLoanDuration","type":"uint32"},{"internalType":"uint16","name":"maxInterestRateForDurationInBasisPoints","type":"uint16"},{"internalType":"uint16","name":"referralFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"revenueSharePartner","type":"address"},{"internalType":"address","name":"loanERC20Denomination","type":"address"}],"internalType":"struct LoanData.ListingTerms","name":"_listingTerms","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bool","name":"safeTransferable","type":"bool"}],"internalType":"struct IBundleBuilder.BundleElementERC721[]","name":"erc721s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IBundleBuilder.BundleElementERC20[]","name":"erc20s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"internalType":"struct IBundleBuilder.BundleElementERC1155[]","name":"erc1155s","type":"tuple[]"}],"internalType":"struct IBundleBuilder.BundleElements","name":"_bundleElements","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"},{"internalType":"address","name":"_loanContract","type":"address"}],"name":"isValidBorrowerSignatureBundle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_loanId","type":"uint256"},{"internalType":"uint32","name":"_newLoanDuration","type":"uint32"},{"internalType":"uint256","name":"_newMaximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"_renegotiationFee","type":"uint256"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"},{"internalType":"address","name":"_loanContract","type":"address"}],"name":"isValidLenderRenegotiationSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_loanId","type":"uint256"},{"internalType":"uint32","name":"_newLoanDuration","type":"uint32"},{"internalType":"uint256","name":"_newMaximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"_renegotiationFee","type":"uint256"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"}],"name":"isValidLenderRenegotiationSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"address","name":"referrer","type":"address"}],"internalType":"struct LoanData.Offer","name":"_offer","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"},{"internalType":"address","name":"_loanContract","type":"address"}],"name":"isValidLenderSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"address","name":"referrer","type":"address"}],"internalType":"struct LoanData.Offer","name":"_offer","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"}],"name":"isValidLenderSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"address","name":"referrer","type":"address"}],"internalType":"struct LoanData.Offer","name":"_offer","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bool","name":"safeTransferable","type":"bool"}],"internalType":"struct IBundleBuilder.BundleElementERC721[]","name":"erc721s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IBundleBuilder.BundleElementERC20[]","name":"erc20s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"internalType":"struct IBundleBuilder.BundleElementERC1155[]","name":"erc1155s","type":"tuple[]"}],"internalType":"struct IBundleBuilder.BundleElements","name":"_bundleElements","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"},{"internalType":"address","name":"_loanContract","type":"address"}],"name":"isValidLenderSignatureBundle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"loanPrincipalAmount","type":"uint256"},{"internalType":"uint256","name":"maximumRepaymentAmount","type":"uint256"},{"internalType":"uint256","name":"nftCollateralId","type":"uint256"},{"internalType":"address","name":"nftCollateralContract","type":"address"},{"internalType":"uint32","name":"loanDuration","type":"uint32"},{"internalType":"uint16","name":"loanAdminFeeInBasisPoints","type":"uint16"},{"internalType":"address","name":"loanERC20Denomination","type":"address"},{"internalType":"address","name":"referrer","type":"address"}],"internalType":"struct LoanData.Offer","name":"_offer","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bool","name":"safeTransferable","type":"bool"}],"internalType":"struct IBundleBuilder.BundleElementERC721[]","name":"erc721s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IBundleBuilder.BundleElementERC20[]","name":"erc20s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"internalType":"struct IBundleBuilder.BundleElementERC1155[]","name":"erc1155s","type":"tuple[]"}],"internalType":"struct IBundleBuilder.BundleElements","name":"_bundleElements","type":"tuple"},{"components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LoanData.Signature","name":"_signature","type":"tuple"}],"name":"isValidLenderSignatureBundle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"NFTfi","kind":"dev","methods":{"getChainID()":{"details":"This function gets the current chain ID."},"isValidBorrowerSignature(LoanData.ListingTerms,LoanData.Signature)":{"params":{"_listingTerms":"- The listing terms struct containing: - loanERC20Denomination: The address of the ERC20 contract of the currency being used as principal/interest for this loan. - minLoanPrincipalAmount: The minumum sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maxLoanPrincipalAmount: The  sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maximumRepaymentAmount: The maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early. - nftCollateralContract: The address of the ERC721 contract of the NFT collateral. - nftCollateralId: The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan. - revenueSharePartner: The address of the partner that will receive the revenue share. - minLoanDuration: The minumum amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - maxLoanDuration: The maximum amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - maxInterestRateForDurationInBasisPoints: This is maximum the interest rate (measured in basis points, e.g. hundreths of a percent) for the loan, that must be repaid pro-rata by the borrower at the conclusion of the loan or risk seizure of their nft collateral. Note if the type of the loan is fixed then this value  is not used and is irrelevant so it should be set to 0. - referralFeeInBasisPoints: The percent (measured in basis points) of the loan principal amount that will be taken as a fee to pay to the referrer, 0 if the lender is not paying referral fee.","_signature":"- The offer struct containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes:   - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once.   - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry: Date when the signature expires - signature: The ECDSA signature of the borrower, obtained off-chain ahead of time, signing the following combination of parameters:   - listingTerms.loanERC20Denomination,   - listingTerms.minLoanPrincipalAmount,   - listingTerms.maxLoanPrincipalAmount,   - listingTerms.nftCollateralContract,   - listingTerms.nftCollateralId,   - listingTerms.revenueSharePartner,   - listingTerms.minLoanDuration,   - listingTerms.maxLoanDuration,   - listingTerms.maxInterestRateForDurationInBasisPoints,   - listingTerms.referralFeeInBasisPoints,   - signature.signer,   - signature.nonce,   - signature.expiry,   - address of this contract   - chainId"}},"isValidBorrowerSignature(LoanData.ListingTerms,LoanData.Signature,address)":{"details":"This function overload the previous function to allow the caller to specify the address of the contract"},"isValidBorrowerSignatureBundle(LoanData.ListingTerms,IBundleBuilder.BundleElements,LoanData.Signature)":{"params":{"_bundleElements":"- the lists of erc721-20-1155 tokens that are to be bundled","_listingTerms":"- The listing terms struct containing: - loanERC20Denomination: The address of the ERC20 contract of the currency being used as principal/interest for this loan. - minLoanPrincipalAmount: The minumum sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maxLoanPrincipalAmount: The  sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maximumRepaymentAmount: The maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early. - nftCollateralContract: The address of the ERC721 contract of the NFT collateral. - nftCollateralId: The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan. - revenueSharePartner: The address of the partner that will receive the revenue share. - minLoanDuration: The minumum amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - maxLoanDuration: The maximum amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - maxInterestRateForDurationInBasisPoints: This is maximum the interest rate (measured in basis points, e.g. hundreths of a percent) for the loan, that must be repaid pro-rata by the borrower at the conclusion of the loan or risk seizure of their nft collateral. Note if the type of the loan is fixed then this value  is not used and is irrelevant so it should be set to 0. - referralFeeInBasisPoints: The percent (measured in basis points) of the loan principal amount that will be taken as a fee to pay to the referrer, 0 if the lender is not paying referral fee.","_signature":"- The offer struct containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes:   - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once.   - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry: Date when the signature expires - signature: The ECDSA signature of the borrower, obtained off-chain ahead of time, signing the following combination of parameters:   - listingTerms.loanERC20Denomination,   - listingTerms.minLoanPrincipalAmount,   - listingTerms.maxLoanPrincipalAmount,   - listingTerms.nftCollateralContract,   - listingTerms.nftCollateralId,   - listingTerms.revenueSharePartner,   - listingTerms.minLoanDuration,   - listingTerms.maxLoanDuration,   - listingTerms.maxInterestRateForDurationInBasisPoints,   - listingTerms.referralFeeInBasisPoints,   - bundleElements   - signature.signer,   - signature.nonce,   - signature.expiry,   - address of this contract   - chainId"}},"isValidBorrowerSignatureBundle(LoanData.ListingTerms,IBundleBuilder.BundleElements,LoanData.Signature,address)":{"details":"This function overload the previous function to allow the caller to specify the address of the contract"},"isValidLenderRenegotiationSignature(uint256,uint32,uint256,uint256,LoanData.Signature)":{"params":{"_loanId":"- The unique identifier for the loan to be renegotiated","_newLoanDuration":"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.","_newMaximumRepaymentAmount":"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.","_renegotiationFee":"Agreed upon fee in ether that borrower pays for the lender for the renegitiation","_signature":"- The signature structure containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry - The date when the renegotiation offer expires - lenderSignature - The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters: - _loanId - _newLoanDuration - _newMaximumRepaymentAmount - _lender - _lenderNonce - _expiry - address of this contract - chainId"}},"isValidLenderRenegotiationSignature(uint256,uint32,uint256,uint256,LoanData.Signature,address)":{"details":"This function overload the previous function to allow the caller to specify the address of the contract"},"isValidLenderSignature(LoanData.Offer,LoanData.Signature)":{"params":{"_offer":"- The offer struct containing: - loanERC20Denomination: The address of the ERC20 contract of the currency being used as principal/interest for this loan. - loanPrincipalAmount: The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maximumRepaymentAmount: The maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early. - nftCollateralContract: The address of the ERC721 contract of the NFT collateral. - nftCollateralId: The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan. - referrer: The address of the referrer who found the lender matching the listing, Zero address to signal this there is no referrer. - loanDuration: The amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - loanInterestRateForDurationInBasisPoints: This is the interest rate (measured in basis points, e.g. hundreths of a percent) for the loan, that must be repaid pro-rata by the borrower at the conclusion of the loan or risk seizure of their nft collateral. Note if the type of the loan is fixed then this value  is not used and is irrelevant so it should be set to 0. - loanAdminFeeInBasisPoints: The percent (measured in basis points) of the interest earned that will be taken as a fee by the contract admins when the loan is repaid. The fee is stored in the loan struct to prevent an attack where the contract admins could adjust the fee right before a loan is repaid, and take all of the interest earned.","_signature":"- The signature structure containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes:   - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once.   - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry: Date when the signature expires - signature: The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters:   - offer.loanERC20Denomination   - offer.loanPrincipalAmount   - offer.maximumRepaymentAmount   - offer.nftCollateralContract   - offer.nftCollateralId   - offer.referrer   - offer.loanDuration   - offer.loanAdminFeeInBasisPoints   - signature.signer,   - signature.nonce,   - signature.expiry,   - address of this contract   - chainId"}},"isValidLenderSignature(LoanData.Offer,LoanData.Signature,address)":{"details":"This function overload the previous function to allow the caller to specify the address of the contract"},"isValidLenderSignatureBundle(LoanData.Offer,IBundleBuilder.BundleElements,LoanData.Signature)":{"params":{"_bundleElements":"- the lists of erc721-20-1155 tokens that are to be bundled","_offer":"- The offer struct containing: - loanERC20Denomination: The address of the ERC20 contract of the currency being used as principal/interest for this loan. - loanPrincipalAmount: The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maximumRepaymentAmount: The maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early. - nftCollateralContract: The address of the ERC721 contract of the NFT collateral. - nftCollateralId: The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan. - referrer: The address of the referrer who found the lender matching the listing, Zero address to signal this there is no referrer. - loanDuration: The amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - loanInterestRateForDurationInBasisPoints: This is the interest rate (measured in basis points, e.g. hundreths of a percent) for the loan, that must be repaid pro-rata by the borrower at the conclusion of the loan or risk seizure of their nft collateral. Note if the type of the loan is fixed then this value  is not used and is irrelevant so it should be set to 0. - loanAdminFeeInBasisPoints: The percent (measured in basis points) of the interest earned that will be taken as a fee by the contract admins when the loan is repaid. The fee is stored in the loan struct to prevent an attack where the contract admins could adjust the fee right before a loan is repaid, and take all of the interest earned.","_signature":"- The signature structure containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes:   - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once.   - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry: Date when the signature expires - signature: The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters:   - offer.loanERC20Denomination   - offer.loanPrincipalAmount   - offer.maximumRepaymentAmount   - offer.nftCollateralContract   - offer.nftCollateralId   - offer.referrer   - offer.loanDuration   - offer.loanAdminFeeInBasisPoints   - bundleElements   - signature.signer,   - signature.nonce,   - signature.expiry,   - address of this contract   - chainId"}},"isValidLenderSignatureBundle(LoanData.Offer,IBundleBuilder.BundleElements,LoanData.Signature,address)":{"details":"This function overload the previous function to allow the caller to specify the address of the contract"}},"title":"NFTfiSigningUtils","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getChainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"maxInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.ListingTerms\",\"name\":\"_listingTerms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"}],\"name\":\"isValidBorrowerSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"maxInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.ListingTerms\",\"name\":\"_listingTerms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_loanContract\",\"type\":\"address\"}],\"name\":\"isValidBorrowerSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"maxInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.ListingTerms\",\"name\":\"_listingTerms\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"safeTransferable\",\"type\":\"bool\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC721[]\",\"name\":\"erc721s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC20[]\",\"name\":\"erc20s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC1155[]\",\"name\":\"erc1155s\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElements\",\"name\":\"_bundleElements\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"}],\"name\":\"isValidBorrowerSignatureBundle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"maxInterestRateForDurationInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"revenueSharePartner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.ListingTerms\",\"name\":\"_listingTerms\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"safeTransferable\",\"type\":\"bool\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC721[]\",\"name\":\"erc721s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC20[]\",\"name\":\"erc20s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC1155[]\",\"name\":\"erc1155s\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElements\",\"name\":\"_bundleElements\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_loanContract\",\"type\":\"address\"}],\"name\":\"isValidBorrowerSignatureBundle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_newLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_newMaximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_renegotiationFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_loanContract\",\"type\":\"address\"}],\"name\":\"isValidLenderRenegotiationSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_newLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_newMaximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_renegotiationFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"}],\"name\":\"isValidLenderRenegotiationSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_loanContract\",\"type\":\"address\"}],\"name\":\"isValidLenderSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"}],\"name\":\"isValidLenderSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"safeTransferable\",\"type\":\"bool\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC721[]\",\"name\":\"erc721s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC20[]\",\"name\":\"erc20s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC1155[]\",\"name\":\"erc1155s\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElements\",\"name\":\"_bundleElements\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_loanContract\",\"type\":\"address\"}],\"name\":\"isValidLenderSignatureBundle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanPrincipalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRepaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"loanAdminFeeInBasisPoints\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"loanERC20Denomination\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"internalType\":\"struct LoanData.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"safeTransferable\",\"type\":\"bool\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC721[]\",\"name\":\"erc721s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC20[]\",\"name\":\"erc20s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC1155[]\",\"name\":\"erc1155s\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElements\",\"name\":\"_bundleElements\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LoanData.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"}],\"name\":\"isValidLenderSignatureBundle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"kind\":\"dev\",\"methods\":{\"getChainID()\":{\"details\":\"This function gets the current chain ID.\"},\"isValidBorrowerSignature(LoanData.ListingTerms,LoanData.Signature)\":{\"params\":{\"_listingTerms\":\"- The listing terms struct containing: - loanERC20Denomination: The address of the ERC20 contract of the currency being used as principal/interest for this loan. - minLoanPrincipalAmount: The minumum sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maxLoanPrincipalAmount: The  sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maximumRepaymentAmount: The maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early. - nftCollateralContract: The address of the ERC721 contract of the NFT collateral. - nftCollateralId: The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan. - revenueSharePartner: The address of the partner that will receive the revenue share. - minLoanDuration: The minumum amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - maxLoanDuration: The maximum amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - maxInterestRateForDurationInBasisPoints: This is maximum the interest rate (measured in basis points, e.g. hundreths of a percent) for the loan, that must be repaid pro-rata by the borrower at the conclusion of the loan or risk seizure of their nft collateral. Note if the type of the loan is fixed then this value  is not used and is irrelevant so it should be set to 0. - referralFeeInBasisPoints: The percent (measured in basis points) of the loan principal amount that will be taken as a fee to pay to the referrer, 0 if the lender is not paying referral fee.\",\"_signature\":\"- The offer struct containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes:   - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once.   - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry: Date when the signature expires - signature: The ECDSA signature of the borrower, obtained off-chain ahead of time, signing the following combination of parameters:   - listingTerms.loanERC20Denomination,   - listingTerms.minLoanPrincipalAmount,   - listingTerms.maxLoanPrincipalAmount,   - listingTerms.nftCollateralContract,   - listingTerms.nftCollateralId,   - listingTerms.revenueSharePartner,   - listingTerms.minLoanDuration,   - listingTerms.maxLoanDuration,   - listingTerms.maxInterestRateForDurationInBasisPoints,   - listingTerms.referralFeeInBasisPoints,   - signature.signer,   - signature.nonce,   - signature.expiry,   - address of this contract   - chainId\"}},\"isValidBorrowerSignature(LoanData.ListingTerms,LoanData.Signature,address)\":{\"details\":\"This function overload the previous function to allow the caller to specify the address of the contract\"},\"isValidBorrowerSignatureBundle(LoanData.ListingTerms,IBundleBuilder.BundleElements,LoanData.Signature)\":{\"params\":{\"_bundleElements\":\"- the lists of erc721-20-1155 tokens that are to be bundled\",\"_listingTerms\":\"- The listing terms struct containing: - loanERC20Denomination: The address of the ERC20 contract of the currency being used as principal/interest for this loan. - minLoanPrincipalAmount: The minumum sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maxLoanPrincipalAmount: The  sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maximumRepaymentAmount: The maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early. - nftCollateralContract: The address of the ERC721 contract of the NFT collateral. - nftCollateralId: The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan. - revenueSharePartner: The address of the partner that will receive the revenue share. - minLoanDuration: The minumum amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - maxLoanDuration: The maximum amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - maxInterestRateForDurationInBasisPoints: This is maximum the interest rate (measured in basis points, e.g. hundreths of a percent) for the loan, that must be repaid pro-rata by the borrower at the conclusion of the loan or risk seizure of their nft collateral. Note if the type of the loan is fixed then this value  is not used and is irrelevant so it should be set to 0. - referralFeeInBasisPoints: The percent (measured in basis points) of the loan principal amount that will be taken as a fee to pay to the referrer, 0 if the lender is not paying referral fee.\",\"_signature\":\"- The offer struct containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes:   - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once.   - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry: Date when the signature expires - signature: The ECDSA signature of the borrower, obtained off-chain ahead of time, signing the following combination of parameters:   - listingTerms.loanERC20Denomination,   - listingTerms.minLoanPrincipalAmount,   - listingTerms.maxLoanPrincipalAmount,   - listingTerms.nftCollateralContract,   - listingTerms.nftCollateralId,   - listingTerms.revenueSharePartner,   - listingTerms.minLoanDuration,   - listingTerms.maxLoanDuration,   - listingTerms.maxInterestRateForDurationInBasisPoints,   - listingTerms.referralFeeInBasisPoints,   - bundleElements   - signature.signer,   - signature.nonce,   - signature.expiry,   - address of this contract   - chainId\"}},\"isValidBorrowerSignatureBundle(LoanData.ListingTerms,IBundleBuilder.BundleElements,LoanData.Signature,address)\":{\"details\":\"This function overload the previous function to allow the caller to specify the address of the contract\"},\"isValidLenderRenegotiationSignature(uint256,uint32,uint256,uint256,LoanData.Signature)\":{\"params\":{\"_loanId\":\"- The unique identifier for the loan to be renegotiated\",\"_newLoanDuration\":\"- The new amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT.\",\"_newMaximumRepaymentAmount\":\"- The new maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early.\",\"_renegotiationFee\":\"Agreed upon fee in ether that borrower pays for the lender for the renegitiation\",\"_signature\":\"- The signature structure containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes: - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once. - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun() , which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry - The date when the renegotiation offer expires - lenderSignature - The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters: - _loanId - _newLoanDuration - _newMaximumRepaymentAmount - _lender - _lenderNonce - _expiry - address of this contract - chainId\"}},\"isValidLenderRenegotiationSignature(uint256,uint32,uint256,uint256,LoanData.Signature,address)\":{\"details\":\"This function overload the previous function to allow the caller to specify the address of the contract\"},\"isValidLenderSignature(LoanData.Offer,LoanData.Signature)\":{\"params\":{\"_offer\":\"- The offer struct containing: - loanERC20Denomination: The address of the ERC20 contract of the currency being used as principal/interest for this loan. - loanPrincipalAmount: The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maximumRepaymentAmount: The maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early. - nftCollateralContract: The address of the ERC721 contract of the NFT collateral. - nftCollateralId: The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan. - referrer: The address of the referrer who found the lender matching the listing, Zero address to signal this there is no referrer. - loanDuration: The amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - loanInterestRateForDurationInBasisPoints: This is the interest rate (measured in basis points, e.g. hundreths of a percent) for the loan, that must be repaid pro-rata by the borrower at the conclusion of the loan or risk seizure of their nft collateral. Note if the type of the loan is fixed then this value  is not used and is irrelevant so it should be set to 0. - loanAdminFeeInBasisPoints: The percent (measured in basis points) of the interest earned that will be taken as a fee by the contract admins when the loan is repaid. The fee is stored in the loan struct to prevent an attack where the contract admins could adjust the fee right before a loan is repaid, and take all of the interest earned.\",\"_signature\":\"- The signature structure containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes:   - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once.   - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry: Date when the signature expires - signature: The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters:   - offer.loanERC20Denomination   - offer.loanPrincipalAmount   - offer.maximumRepaymentAmount   - offer.nftCollateralContract   - offer.nftCollateralId   - offer.referrer   - offer.loanDuration   - offer.loanAdminFeeInBasisPoints   - signature.signer,   - signature.nonce,   - signature.expiry,   - address of this contract   - chainId\"}},\"isValidLenderSignature(LoanData.Offer,LoanData.Signature,address)\":{\"details\":\"This function overload the previous function to allow the caller to specify the address of the contract\"},\"isValidLenderSignatureBundle(LoanData.Offer,IBundleBuilder.BundleElements,LoanData.Signature)\":{\"params\":{\"_bundleElements\":\"- the lists of erc721-20-1155 tokens that are to be bundled\",\"_offer\":\"- The offer struct containing: - loanERC20Denomination: The address of the ERC20 contract of the currency being used as principal/interest for this loan. - loanPrincipalAmount: The original sum of money transferred from lender to borrower at the beginning of the loan, measured in loanERC20Denomination's smallest units. - maximumRepaymentAmount: The maximum amount of money that the borrower would be required to retrieve their collateral, measured in the smallest units of the ERC20 currency used for the loan. The borrower will always have to pay this amount to retrieve their collateral, regardless of whether they repay early. - nftCollateralContract: The address of the ERC721 contract of the NFT collateral. - nftCollateralId: The ID within the NFTCollateralContract for the NFT being used as collateral for this loan. The NFT is stored within this contract during the duration of the loan. - referrer: The address of the referrer who found the lender matching the listing, Zero address to signal this there is no referrer. - loanDuration: The amount of time (measured in seconds) that can elapse before the lender can liquidate the loan and seize the underlying collateral NFT. - loanInterestRateForDurationInBasisPoints: This is the interest rate (measured in basis points, e.g. hundreths of a percent) for the loan, that must be repaid pro-rata by the borrower at the conclusion of the loan or risk seizure of their nft collateral. Note if the type of the loan is fixed then this value  is not used and is irrelevant so it should be set to 0. - loanAdminFeeInBasisPoints: The percent (measured in basis points) of the interest earned that will be taken as a fee by the contract admins when the loan is repaid. The fee is stored in the loan struct to prevent an attack where the contract admins could adjust the fee right before a loan is repaid, and take all of the interest earned.\",\"_signature\":\"- The signature structure containing: - signer: The address of the signer. The borrower for `acceptOffer` the lender for `acceptListing`. - nonce: The nonce referred here is not the same as an Ethereum account's nonce. We are referring instead to a nonce that is used by the lender or the borrower when they are first signing off-chain NFTfi orders. These nonce can be any uint256 value that the user has not previously used to sign an off-chain order. Each nonce can be used at most once per\\u00a0user within NFTfi, regardless of whether they are the lender or the borrower in that situation. This serves two purposes:   - First, it prevents replay attacks where an attacker would submit a user's off-chain order more than once.   - Second, it allows a user to cancel an off-chain order by calling NFTfi.cancelLoanCommitmentBeforeLoanHasBegun(), which marks the nonce as used and prevents any future loan from using the user's off-chain order that contains that nonce. - expiry: Date when the signature expires - signature: The ECDSA signature of the lender, obtained off-chain ahead of time, signing the following combination of parameters:   - offer.loanERC20Denomination   - offer.loanPrincipalAmount   - offer.maximumRepaymentAmount   - offer.nftCollateralContract   - offer.nftCollateralId   - offer.referrer   - offer.loanDuration   - offer.loanAdminFeeInBasisPoints   - bundleElements   - signature.signer,   - signature.nonce,   - signature.expiry,   - address of this contract   - chainId\"}},\"isValidLenderSignatureBundle(LoanData.Offer,IBundleBuilder.BundleElements,LoanData.Signature,address)\":{\"details\":\"This function overload the previous function to allow the caller to specify the address of the contract\"}},\"title\":\"NFTfiSigningUtils\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidBorrowerSignature(LoanData.ListingTerms,LoanData.Signature)\":{\"notice\":\"This function is when the lender accepts a borrower's binding listing terms, to validate the lender's signature that the borrower provided off-chain to verify that it did indeed made such listing.\"},\"isValidBorrowerSignatureBundle(LoanData.ListingTerms,IBundleBuilder.BundleElements,LoanData.Signature)\":{\"notice\":\"This function is when the lender accepts a borrower's binding listing terms, to validate the lender's signature that the borrower provided off-chain to verify that it did indeed made such listing.\"},\"isValidLenderRenegotiationSignature(uint256,uint32,uint256,uint256,LoanData.Signature)\":{\"notice\":\"This function is called in renegotiateLoan() to validate the lender's signature that the lender provided off-chain to verify that they did indeed want to agree to this loan renegotiation according to these terms.\"},\"isValidLenderSignature(LoanData.Offer,LoanData.Signature)\":{\"notice\":\"This function is when the borrower accepts a lender's offer, to validate the lender's signature that the lender provided off-chain to verify that it did indeed made such offer.\"},\"isValidLenderSignatureBundle(LoanData.Offer,IBundleBuilder.BundleElements,LoanData.Signature)\":{\"notice\":\"This function is when the borrower accepts a lender's offer, to validate the lender's signature that the lender provided off-chain to verify that it did indeed made such offer.\"}},\"notice\":\"Helper contract for NFTfi. This contract manages verifying signatures from off-chain NFTfi orders. Based on the version of this same contract used on NFTfi V1\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"31_54_NFTfiSigningUtils.sol\":\"NFTfiSigningUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]},\"31_54_NFTfiSigningUtils.sol\":{\"keccak256\":\"0x6c6de3b7ccf316d289c8c28ae23755bca14021853cc28d569cc2a8775e8f1844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9772e2685c0e4cdc6ba45515531991d21b8ab9dbfe80a287be7edf99e91f60dc\",\"dweb:/ipfs/QmbgYwCySqAgiTJCyz29VTxRkY9HdooqKVVP5niCpyhPiH\"]},\"43_54_IBundleBuilder.sol\":{\"keccak256\":\"0xf9b3ebf0cb17621198973d3885b8fcefb200ac7a2f3dc613b0316e21adc8a48c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306f336537c3a6cf636ca68fc1062659b57739a2a962b58f38e9388541287aac\",\"dweb:/ipfs/QmX2NkYjLkMK7Ux1Lw9yVTVoXfTbhRRB1A6u4s1uF6mmpc\"]},\"44_54_SignatureChecker.sol\":{\"keccak256\":\"0x2d56b73dd8e2f6b1954e8a24ddc0ad1ff2f4988b5571d2c5b6b4b4ff988f9053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40057c8d5eb79a23a1509088ca8e6b4b257e1874f67d499d08b5399aca3bc8f1\",\"dweb:/ipfs/QmYRyz1dEimDJNJLbmvAuX3ptmXR9xqVG9WqrjwdKpiAd1\"]},\"45_54_ECDSA.sol\":{\"keccak256\":\"0xbc991a1cf357ce19480831a40792c814238a3b5458134703682abd8aa39719fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2e3313add3a233ad2d1e9b65cb7c0296bdbe159c6d631da2b1d027b4954926\",\"dweb:/ipfs/QmT8bVda92mptimLgonyq28qENq4sRgy6K3v118CvZcKdP\"]},\"46_54_IERC1271.sol\":{\"keccak256\":\"0x14351164423eade7f2dbac5ca9ab8aeded8694f3b2d7a9e0114a2b3b6558198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7588d5d5a23ccdccfb39eb015939560bdc26fd11efb7e5ff8af23f5a3ce8b003\",\"dweb:/ipfs/QmRuohtRJYDoFGazYwbcbz557HzmQDWuW9phW6Cm8tQhwN\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"isValidBorrowerSignature(LoanData.ListingTerms,LoanData.Signature)":{"notice":"This function is when the lender accepts a borrower's binding listing terms, to validate the lender's signature that the borrower provided off-chain to verify that it did indeed made such listing."},"isValidBorrowerSignatureBundle(LoanData.ListingTerms,IBundleBuilder.BundleElements,LoanData.Signature)":{"notice":"This function is when the lender accepts a borrower's binding listing terms, to validate the lender's signature that the borrower provided off-chain to verify that it did indeed made such listing."},"isValidLenderRenegotiationSignature(uint256,uint32,uint256,uint256,LoanData.Signature)":{"notice":"This function is called in renegotiateLoan() to validate the lender's signature that the lender provided off-chain to verify that they did indeed want to agree to this loan renegotiation according to these terms."},"isValidLenderSignature(LoanData.Offer,LoanData.Signature)":{"notice":"This function is when the borrower accepts a lender's offer, to validate the lender's signature that the lender provided off-chain to verify that it did indeed made such offer."},"isValidLenderSignatureBundle(LoanData.Offer,IBundleBuilder.BundleElements,LoanData.Signature)":{"notice":"This function is when the borrower accepts a lender's offer, to validate the lender's signature that the lender provided off-chain to verify that it did indeed made such offer."}},"notice":"Helper contract for NFTfi. This contract manages verifying signatures from off-chain NFTfi orders. Based on the version of this same contract used on NFTfi V1","version":1}}},"32_54_INftfiHub.sol":{"INftfiHub":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_contractKey","type":"bytes32"}],"name":"getContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_contractKey","type":"string"},{"internalType":"address","name":"_contractAddress","type":"address"}],"name":"setContract","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"NFTfi","details":"NftfiHub interface","kind":"dev","methods":{},"title":"INftfiHub","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_contractKey\",\"type\":\"bytes32\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"NftfiHub interface\",\"kind\":\"dev\",\"methods\":{},\"title\":\"INftfiHub\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"32_54_INftfiHub.sol\":\"INftfiHub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"32_54_INftfiHub.sol\":{\"keccak256\":\"0xc784578474998dabaff4116fdd3520c92dd10e7c8d98e415f2239f9d96c8a1a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f70642c1d2664910240ac14b4f8b717d02bac324f7fb3afbdb0dd46effab93d\",\"dweb:/ipfs/QmPpQZTErwXAGVGMeP7xbnUrb2Foak7DonfhwEpKwniuL3\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"33_54_IDirectLoanCoordinator.sol":{"IDirectLoanCoordinator":{"abi":[{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"getLoanData","outputs":[{"components":[{"internalType":"address","name":"loanContract","type":"address"},{"internalType":"uint64","name":"smartNftId","type":"uint64"},{"internalType":"enum IDirectLoanCoordinator.StatusType","name":"status","type":"uint8"}],"internalType":"struct IDirectLoanCoordinator.Loan","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"address","name":"_loanContract","type":"address"}],"name":"isValidLoanId","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"},{"internalType":"address","name":"_borrower","type":"address"}],"name":"mintObligationReceipt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"obligationReceiptToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"promissoryNoteToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lender","type":"address"},{"internalType":"bytes32","name":"_loanType","type":"bytes32"}],"name":"registerLoan","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_loanId","type":"uint32"}],"name":"resolveLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"NFTfi","details":"DirectLoanCoordinator interface.","kind":"dev","methods":{},"title":"IDirectLoanCoordinator","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"getLoanData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"loanContract\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"smartNftId\",\"type\":\"uint64\"},{\"internalType\":\"enum IDirectLoanCoordinator.StatusType\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IDirectLoanCoordinator.Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_loanContract\",\"type\":\"address\"}],\"name\":\"isValidLoanId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"mintObligationReceipt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"obligationReceiptToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"promissoryNoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_loanType\",\"type\":\"bytes32\"}],\"name\":\"registerLoan\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_loanId\",\"type\":\"uint32\"}],\"name\":\"resolveLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"DirectLoanCoordinator interface.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IDirectLoanCoordinator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"33_54_IDirectLoanCoordinator.sol\":\"IDirectLoanCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"33_54_IDirectLoanCoordinator.sol\":{\"keccak256\":\"0x0576d6bd283b2ff48f0afbad951b7d8f051dfc85bbe69b5525be80173df72de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a187fd0527531a1a7bce926ed60a75cf012869761c9b82c8c4acf39ba1b287\",\"dweb:/ipfs/QmTdFNC3kqAifHQc46fW12QfsLNdzsnBC5CFeS8KU4UdJP\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"34_54_INftWrapper.sol":{"INftWrapper":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"address","name":"_nftContract","type":"address"},{"internalType":"uint256","name":"_nftId","type":"uint256"},{"internalType":"address","name":"_beneficiary","type":"address"}],"name":"wrapAirdropReceiver","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"NFTfi","details":"Interface for NFT Wrappers.","kind":"dev","methods":{},"title":"INftTypeRegistry","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"wrapAirdropReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Interface for NFT Wrappers.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"INftTypeRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"34_54_INftWrapper.sol\":\"INftWrapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"34_54_INftWrapper.sol\":{\"keccak256\":\"0x64df547c2d3ed2f6720b24844ffba086f175643edcf0b38f0d060cf19637b245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac45e66d50666604434ebcb37f8d9041f2070f935eeec1769b19e49707bfde84\",\"dweb:/ipfs/QmNj2JEFSs4Qzpi8DLvhaqkW3VX9z5pgGXVApuJFCMmDkR\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"35_54_IPermittedPartners.sol":{"IPermittedPartners":{"abi":[{"inputs":[{"internalType":"address","name":"_partner","type":"address"}],"name":"getPartnerPermit","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_partner\",\"type\":\"address\"}],\"name\":\"getPartnerPermit\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"35_54_IPermittedPartners.sol\":\"IPermittedPartners\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"35_54_IPermittedPartners.sol\":{\"keccak256\":\"0x72398dc42a7522e77cfa9c4fdfe02f338846ff4b2d2c92985185cf8edfa550f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://febaab9458f9ba5d9c46272d297df5d9f97b78a032782364db008d8ae6d26898\",\"dweb:/ipfs/QmQujERQZbdJ6TbMNAHEeBy5UyM7EcCi8vvuuNUTXwRseT\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"36_54_IPermittedERC20s.sol":{"IPermittedERC20s":{"abi":[{"inputs":[{"internalType":"address","name":"_erc20","type":"address"}],"name":"getERC20Permit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"getERC20Permit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"36_54_IPermittedERC20s.sol\":\"IPermittedERC20s\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"36_54_IPermittedERC20s.sol\":{\"keccak256\":\"0x23fa01735d0fbc2d2c96cbd2171ce5ad1da3122f08ec26b5a90607d9355ab2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80dd001c15c67fa8bb152963b54a41a6adbed412633da9aa72d8dd7722f8f89\",\"dweb:/ipfs/Qmdc3RBLfgMxFBA4yyyjixFged1jXhhoqKxMWa8mDM6jCR\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"37_54_IPermittedNFTs.sol":{"IPermittedNFTs":{"abi":[{"inputs":[{"internalType":"address","name":"_nftContract","type":"address"}],"name":"getNFTPermit","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftContract","type":"address"}],"name":"getNFTWrapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftContract","type":"address"},{"internalType":"string","name":"_nftType","type":"string"}],"name":"setNFTPermit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"name\":\"getNFTPermit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"name\":\"getNFTWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nftType\",\"type\":\"string\"}],\"name\":\"setNFTPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"37_54_IPermittedNFTs.sol\":\"IPermittedNFTs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"37_54_IPermittedNFTs.sol\":{\"keccak256\":\"0xa3ffd2942d166f4d1f8ab21e47dce086b4d01a8b4b5c6692c98e4a26b2b0f99b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f1a9230d3f5104c3e424c02d8798aa46e8a422a47e6fb03df9014162b88f6a5\",\"dweb:/ipfs/QmdLZauWzizG1aKnHrsPb7XSJtwkC8xkqgvxDpazhMr2kQ\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"38_54_IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"38_54_IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"38_54_IERC1155.sol\":{\"keccak256\":\"0xe206a36fdb3bf0821851840643cb7880a048d947c16492a956367ebae14276a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a566c130fa49a5e6f6c423c257bbdbfeb9675a4f47ea977f4153cf6e3cf47b36\",\"dweb:/ipfs/QmbCXsbNxewkBw3dGYYVYnrAEfvbDkta9Wy9bbGu77KWi2\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"39_54_IAirdropFlashLoan.sol":{"IAirdropFlashLoan":{"abi":[{"inputs":[{"internalType":"address","name":"_nftCollateralContract","type":"address"},{"internalType":"uint256","name":"_nftCollateralId","type":"uint256"},{"internalType":"address","name":"_nftWrapper","type":"address"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_nftAirdrop","type":"address"},{"internalType":"uint256","name":"_nftAirdropId","type":"uint256"},{"internalType":"bool","name":"_is1155","type":"bool"},{"internalType":"uint256","name":"_nftAirdropAmount","type":"uint256"},{"internalType":"address","name":"_beneficiary","type":"address"}],"name":"pullAirdrop","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollateralContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftCollateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftWrapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_nftAirdrop\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftAirdropId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_is1155\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_nftAirdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"pullAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"39_54_IAirdropFlashLoan.sol\":\"IAirdropFlashLoan\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"39_54_IAirdropFlashLoan.sol\":{\"keccak256\":\"0x11ac93c6deedf1453b2257883c016d959a8215c9af53c5c31c342c1224b26f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412de44dd11ecefeac5412fa1e2e524d3826982056782c0ba873bda71047128b\",\"dweb:/ipfs/QmR6EdmViHhcGLXbCG5XQ6v7KPMDdWGr7xUkewHtXA74t9\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"3_54_LP1MigrationBase.sol":{"LP1MigrationBase":{"abi":[{"inputs":[],"name":"R_StateAlreadySet","type":"error"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"R_ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"lender","type":"address"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"oldLoanId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newLoanId","type":"uint256"}],"name":"Migration","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"VAULT","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrower","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrowerNote","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"deployments","outputs":[{"internalType":"address","name":"directLoanFixedOffer","type":"address"},{"internalType":"address","name":"loanCoordinator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeController","outputs":[{"internalType":"contract IFeeController","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"flushToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"loanCore","outputs":[{"internalType":"contract ILoanCore","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"originationController","outputs":[{"internalType":"contract IOriginationController","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_pause","type":"bool"}],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Non-Fungible Technologies, Inc. This contract holds the common logic for the LP1Migration and LP1MigrationWIthItems contracts.","errors":{"R_ZeroAddress(string)":[{"params":{"name":"The name of the contract."}}]},"kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."},"owner()":{"details":"Returns the address of the current owner."},"pause(bool)":{"details":"This function is only to be used if a vulnerability is found or the contract      is no longer being used.","params":{"_pause":"The state to set the contract to."}},"receiveFlashLoan(address[],uint256[],uint256[],bytes)":{"details":"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"LP1MigrationBase","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"R_StateAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"R_ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldLoanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLoanId\",\"type\":\"uint256\"}],\"name\":\"Migration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VAULT\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowerNote\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployments\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"directLoanFixedOffer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanCoordinator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"internalType\":\"contract IFeeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"flushToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loanCore\",\"outputs\":[{\"internalType\":\"contract ILoanCore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"originationController\",\"outputs\":[{\"internalType\":\"contract IOriginationController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Non-Fungible Technologies, Inc. This contract holds the common logic for the LP1Migration and LP1MigrationWIthItems contracts.\",\"errors\":{\"R_ZeroAddress(string)\":[{\"params\":{\"name\":\"The name of the contract.\"}}]},\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(bool)\":{\"details\":\"This function is only to be used if a vulnerability is found or the contract      is no longer being used.\",\"params\":{\"_pause\":\"The state to set the contract to.\"}},\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"LP1MigrationBase\",\"version\":1},\"userdoc\":{\"errors\":{\"R_StateAlreadySet()\":[{\"notice\":\"The rollover contract is already in the specified pause state.\"}],\"R_ZeroAddress(string)\":[{\"notice\":\"Cannot pass the zero address as an argument.\"}]},\"kind\":\"user\",\"methods\":{\"borrower()\":{\"notice\":\"State variable used for checking the inheriting contract initiated the flash         loan. When a rollover function is called the borrowers address is cached here         and checked against the opData in the flash loan callback.\"},\"deployments(uint256)\":{\"notice\":\"V3 lending protocol contract references\"},\"flushToken(address,address)\":{\"notice\":\"Function to be used by the contract owner to withdraw any ERC20 tokens that         are sent to the contract and get stuck.\"},\"pause(bool)\":{\"notice\":\"Function to be used by the contract owner to pause the contract.\"},\"paused()\":{\"notice\":\"state variable for pausing the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"3_54_LP1MigrationBase.sol\":\"LP1MigrationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_54_INFTWithDescriptor.sol\":{\"keccak256\":\"0xa65ff18a7c35e3a1d4ced320590e512a5a1ac3b5038529882019344b93dc1a1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15800408246c27da705c6b3fd5f95f1a3cc0d12cee025e5fd74b76687478058\",\"dweb:/ipfs/QmNkNxrxM4fd67JrDD5M1u16WoBVm9fd9fcgPCcUuhiApw\"]},\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"13_54_SafeERC20.sol\":{\"keccak256\":\"0xca2a1cce29c95562079d1d1bf5e99dc29e0d64b385a6c92df859d0414ccd908f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42695fb74e355e33ba71507315e16f355fa4001a4d49ff0f4584d4cd465ef184\",\"dweb:/ipfs/QmSEcJojmAVjS6R4i1hixcnhugm3mwXjMf5CPrBB8HjhSX\"]},\"14_54_ERC721Holder.sol\":{\"keccak256\":\"0xfc46c4f762239615d31ba45ae92094fc71c49bd6c7fb59ccec38dd285f101602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88324c85c20335b973fa97f152e64d6ea1f42af3ce57079baae898a0195db633\",\"dweb:/ipfs/QmPsqm7knfFhJi7bzdbRsZRxRy2aNmzHfhzyFiQDD4PUtH\"]},\"15_54_ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"16_54_Ownable.sol\":{\"keccak256\":\"0x66a03d4cf54f75978905db625064e129580ba7bca0c8d68d259c6f2f80fd55ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7f4fe6aef097c1ae907579edeb3467de23abf6e7797ce10fec8e3829de56e45\",\"dweb:/ipfs/QmUUDV6KJ9Lsz7rzZqicgbqUxAugfwhBxpVUrNvQMFwNz3\"]},\"17_54_DirectLoanFixedOffer.sol\":{\"keccak256\":\"0x347fd4d0a64ae2797ecbe74ee9c910d01bb1ba1fd3906ab74caada443e6a9308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02bff137e27f2e721a541560a542dbdc547edd84a04d417d6c25127677f04a0b\",\"dweb:/ipfs/QmP7P3REtWQTSiS5WWVJEi5N4QJoVQhkQjxgmTAmLR2iuA\"]},\"18_54_IMigrationBase.sol\":{\"keccak256\":\"0xf9e59cf6ced499affc327b3fac756fde2b96b445f869f0e9148321bdc7c18f8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f32feaa36b7e71ade223e5d1b7ff5404e60a4c2fa4ed3266bc49793502f6b5ef\",\"dweb:/ipfs/QmWtzUMCPAf5uN2hhb32vvUCyxRazaX3qTQWVqCgsV7dj3\"]},\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"21_54_IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"22_54_Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"23_54_DirectLoanBaseMinimal.sol\":{\"keccak256\":\"0x06acbc1c87f98307ad47e2a9dd17ca23b6436a4a002fec8601bdb275f3fff883\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93994b2402c73020e8d9ef87b549d986fafe69dc0b1a9e9b1bf99f8638fd2a3b\",\"dweb:/ipfs/QmfL8u6qjsSejFWGZRbYE1yJQWYAtPpERfxYF6yW3aog2i\"]},\"24_54_ContractKeys.sol\":{\"keccak256\":\"0xbc0e88b96be83469df452dabdf456b2af3e38875b649406fd0b2b6e59c5667ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b120aa2d95a217f6f96f2ab0ac26a5efaef020ef9b5f6a460c208cb91f0249a\",\"dweb:/ipfs/QmSwbSfSNJN84GrRtvPcHvffKVK8jmtVNSDBExArPsSabu\"]},\"25_54_IDirectLoanBase.sol\":{\"keccak256\":\"0x7510a1b6566c11856fcf7307b5765f07fba194f5617758d85d84f5a121271ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d958d1866dc96349fdb6164aa9d6774841b968e921c7c5fc77cbd0640fb18f98\",\"dweb:/ipfs/QmNmATtAkfEU5hLmLsiEUvFXuhHEqFqeYMKXAzdN91WGzr\"]},\"26_54_LoanData.sol\":{\"keccak256\":\"0x866d02471a072cd05b807d90b110bfcfa8bcc21bdcdb0f9b90f286683501b280\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f687fd996801fb3c1f10da52c773fd0b37fc40f91547f410bae8fd9f1ae69c\",\"dweb:/ipfs/QmUjtTPGpKPBkrGzmTTWe7Gd7qniDMejnXN2vyr8YrsYrP\"]},\"27_54_LoanChecksAndCalculations.sol\":{\"keccak256\":\"0xae79ec552bc5ef00278d8f82acbc9bbdcab110a8531ce24cd03967b42c24e560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfad4dd2ce5148000fc776025e9f41d16053ba9c1f9e8b265f49cb2c90203a7f\",\"dweb:/ipfs/QmV6TTAHY4WeUYUVSBJuaDeMoTsGXny6FCh9jZ2gRBwDyE\"]},\"28_54_LoanAirdropUtils.sol\":{\"keccak256\":\"0x3410d63bfd045c86b16fc4ddf446f46ccb606257fee2aa83ddde7000924b279b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571c3fca1368ef5bc6b8e5b8502affa2099e5a0b9a163c5c9dde5369b77a6e3a\",\"dweb:/ipfs/QmPXMDTc3KFmcJZaDbNyDhCkTyUpkocwnkhLSdDBxu1jTg\"]},\"29_54_BaseLoan.sol\":{\"keccak256\":\"0xc2b67aaa818d9746e0cfb4a1e11d2993d63ec0c91822fc922a625cc374b7bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b2b4f4bfb81e63f10568a557d5fe69ed73587dd2c6562f761be64a62101e559\",\"dweb:/ipfs/QmYo8mJnPtpzxudEdRHufBs1eCEwKc1uv3b51BuoqFoBsC\"]},\"30_54_NftReceiver.sol\":{\"keccak256\":\"0x29fc615d267899a88ac3c717b460942ef2c4d85288b5489de67571ee28287d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66fd330a2b95c6bf4e8866a51191cdf3f667f7262339365c706595f0cfa4681\",\"dweb:/ipfs/QmQMZpVFTtitHWaJ3F7jUDreHu5tLAc8kf8miXYhF5K7Ba\"]},\"31_54_NFTfiSigningUtils.sol\":{\"keccak256\":\"0x6c6de3b7ccf316d289c8c28ae23755bca14021853cc28d569cc2a8775e8f1844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9772e2685c0e4cdc6ba45515531991d21b8ab9dbfe80a287be7edf99e91f60dc\",\"dweb:/ipfs/QmbgYwCySqAgiTJCyz29VTxRkY9HdooqKVVP5niCpyhPiH\"]},\"32_54_INftfiHub.sol\":{\"keccak256\":\"0xc784578474998dabaff4116fdd3520c92dd10e7c8d98e415f2239f9d96c8a1a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f70642c1d2664910240ac14b4f8b717d02bac324f7fb3afbdb0dd46effab93d\",\"dweb:/ipfs/QmPpQZTErwXAGVGMeP7xbnUrb2Foak7DonfhwEpKwniuL3\"]},\"33_54_IDirectLoanCoordinator.sol\":{\"keccak256\":\"0x0576d6bd283b2ff48f0afbad951b7d8f051dfc85bbe69b5525be80173df72de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a187fd0527531a1a7bce926ed60a75cf012869761c9b82c8c4acf39ba1b287\",\"dweb:/ipfs/QmTdFNC3kqAifHQc46fW12QfsLNdzsnBC5CFeS8KU4UdJP\"]},\"34_54_INftWrapper.sol\":{\"keccak256\":\"0x64df547c2d3ed2f6720b24844ffba086f175643edcf0b38f0d060cf19637b245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac45e66d50666604434ebcb37f8d9041f2070f935eeec1769b19e49707bfde84\",\"dweb:/ipfs/QmNj2JEFSs4Qzpi8DLvhaqkW3VX9z5pgGXVApuJFCMmDkR\"]},\"35_54_IPermittedPartners.sol\":{\"keccak256\":\"0x72398dc42a7522e77cfa9c4fdfe02f338846ff4b2d2c92985185cf8edfa550f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://febaab9458f9ba5d9c46272d297df5d9f97b78a032782364db008d8ae6d26898\",\"dweb:/ipfs/QmQujERQZbdJ6TbMNAHEeBy5UyM7EcCi8vvuuNUTXwRseT\"]},\"36_54_IPermittedERC20s.sol\":{\"keccak256\":\"0x23fa01735d0fbc2d2c96cbd2171ce5ad1da3122f08ec26b5a90607d9355ab2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80dd001c15c67fa8bb152963b54a41a6adbed412633da9aa72d8dd7722f8f89\",\"dweb:/ipfs/Qmdc3RBLfgMxFBA4yyyjixFged1jXhhoqKxMWa8mDM6jCR\"]},\"37_54_IPermittedNFTs.sol\":{\"keccak256\":\"0xa3ffd2942d166f4d1f8ab21e47dce086b4d01a8b4b5c6692c98e4a26b2b0f99b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f1a9230d3f5104c3e424c02d8798aa46e8a422a47e6fb03df9014162b88f6a5\",\"dweb:/ipfs/QmdLZauWzizG1aKnHrsPb7XSJtwkC8xkqgvxDpazhMr2kQ\"]},\"38_54_IERC1155.sol\":{\"keccak256\":\"0xe206a36fdb3bf0821851840643cb7880a048d947c16492a956367ebae14276a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a566c130fa49a5e6f6c423c257bbdbfeb9675a4f47ea977f4153cf6e3cf47b36\",\"dweb:/ipfs/QmbCXsbNxewkBw3dGYYVYnrAEfvbDkta9Wy9bbGu77KWi2\"]},\"39_54_IAirdropFlashLoan.sol\":{\"keccak256\":\"0x11ac93c6deedf1453b2257883c016d959a8215c9af53c5c31c342c1224b26f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412de44dd11ecefeac5412fa1e2e524d3826982056782c0ba873bda71047128b\",\"dweb:/ipfs/QmR6EdmViHhcGLXbCG5XQ6v7KPMDdWGr7xUkewHtXA74t9\"]},\"3_54_LP1MigrationBase.sol\":{\"keccak256\":\"0x671f82e6525525c5615250b0b8d4ad056bd05de8fcbf6442abd8b059159f11ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76dc0c574694f1492744acfd361d63a9688ed354fbf840de91753e398bdaf052\",\"dweb:/ipfs/QmQUWvpH6KQPsWjjRUi7Ffv3Z1eqPiiNLerGxW6EEkez91\"]},\"40_54_IAirdropReceiverFactory.sol\":{\"keccak256\":\"0xebb81248214ef956da9dff274331ce1a0cd02dc7286684d05ff9c6f242ee5996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb8c20789a9144de8076ca2c0969bc11d90d1a499a8282a42f35a98e07ab53db\",\"dweb:/ipfs/QmeivxsVs7d76JHa46P7JhTG3pFspyu8FZEj8GKUkz2xCL\"]},\"41_54_Pausable.sol\":{\"keccak256\":\"0x9347635dec691e4e18a54bb998ac5e26f5d413b0ac6625a5a87450c7cca85a7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef64d3936ac7fd4fbef75689b0ad0f822dd28ca90927566b043a797592c2819\",\"dweb:/ipfs/QmaYS6NAMkRJD5FnpNxiUNQE18Dds5QujgtU4enXs4nz3U\"]},\"42_54_IERC1155Receiver.sol\":{\"keccak256\":\"0x386464933922eac8150883805363cf9358f409208cdc26b332093d0d1da55973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e495f41079bca08f9663e62fd0c4ae03387566268d05c12c7c726fe0e10b26a4\",\"dweb:/ipfs/QmWC37FqzP18iN5N1tXwhS8E9t3XWuc78jS4ad31i14D1w\"]},\"43_54_IBundleBuilder.sol\":{\"keccak256\":\"0xf9b3ebf0cb17621198973d3885b8fcefb200ac7a2f3dc613b0316e21adc8a48c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306f336537c3a6cf636ca68fc1062659b57739a2a962b58f38e9388541287aac\",\"dweb:/ipfs/QmX2NkYjLkMK7Ux1Lw9yVTVoXfTbhRRB1A6u4s1uF6mmpc\"]},\"44_54_SignatureChecker.sol\":{\"keccak256\":\"0x2d56b73dd8e2f6b1954e8a24ddc0ad1ff2f4988b5571d2c5b6b4b4ff988f9053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40057c8d5eb79a23a1509088ca8e6b4b257e1874f67d499d08b5399aca3bc8f1\",\"dweb:/ipfs/QmYRyz1dEimDJNJLbmvAuX3ptmXR9xqVG9WqrjwdKpiAd1\"]},\"45_54_ECDSA.sol\":{\"keccak256\":\"0xbc991a1cf357ce19480831a40792c814238a3b5458134703682abd8aa39719fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2e3313add3a233ad2d1e9b65cb7c0296bdbe159c6d631da2b1d027b4954926\",\"dweb:/ipfs/QmT8bVda92mptimLgonyq28qENq4sRgy6K3v118CvZcKdP\"]},\"46_54_IERC1271.sol\":{\"keccak256\":\"0x14351164423eade7f2dbac5ca9ab8aeded8694f3b2d7a9e0114a2b3b6558198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7588d5d5a23ccdccfb39eb015939560bdc26fd11efb7e5ff8af23f5a3ce8b003\",\"dweb:/ipfs/QmRuohtRJYDoFGazYwbcbz557HzmQDWuW9phW6Cm8tQhwN\"]},\"47_54_IOriginationController.sol\":{\"keccak256\":\"0xe791f5f520f1cb15a1c76bb084cce0ac6cf83edf22b4c512f2b76c5758c97300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf5f43c86562ab9ee8d325b33ad4b45a88a48089e3c607cce0f8859973b00686\",\"dweb:/ipfs/QmUaoEfuaW71te4xW2YiqcZNP71udWqbdd1LdFj4B5FDWf\"]},\"48_54_IFeeController.sol\":{\"keccak256\":\"0x52504aacf04a9d98a7ba0629e876a08b48c689c448d4380cc463766b502a93c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e36510694ee9e01200bd6e6dd59399d614dede55c29ddf6ba918f9d791a744\",\"dweb:/ipfs/QmVnBaAednJhiCvNoAjcTYXSxxXYt658J9RyT4ZALckSYH\"]},\"49_54_IFlashLoanRecipient.sol\":{\"keccak256\":\"0x012004ae1b59c16147d2f89a620d914b502b13375deb50c38449260a40d64b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b199641646072175d469e8fb90dd2c421be9dc69c805691cac58c0f1694f75\",\"dweb:/ipfs/QmYaNPY6Zyoy9xFnYRSd21uCq1QyxdrSdAEPwfH4PVUt39\"]},\"4_54_MigrationErrors.sol\":{\"keccak256\":\"0x94f11ce13a6a0e8607f87d1b635785c4a6514cf982121e26128f412f8bc55d8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e110015db22501869b71f2390260c5d2cefcdc31e9c62d613d5f4a464b723587\",\"dweb:/ipfs/QmPfYarfdYADEzEqVBFdBVqy8anbuVeX4yzR7YK7ped5oq\"]},\"50_54_ILoanCoreV2.sol\":{\"keccak256\":\"0x58368297ba52881f19049fd73e17427b2123f8bb0ea49436bb6746bd158525b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44251f9ab1cd8fedf12e98711105bc991740a021b39c7a0200433e12c291de13\",\"dweb:/ipfs/QmWVqGQmEUkW2ft5Ey3YvxbAC7eiPoCdZqBtkdZgaBMFzw\"]},\"51_54_IRepaymentControllerV2.sol\":{\"keccak256\":\"0xbd66b6924203761384439ba6ca64afeab9b02028f5d8845b4824c7dc14bea889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ffc27e038dd979b277725babfebc627bdb0f7542c0113c8f190c7584e6af29\",\"dweb:/ipfs/QmeoVVzPbcG8i1RrbXd27DGSBWANdH9DqhAQMPv3fUxgp4\"]},\"52_54_LoanLibraryV2.sol\":{\"keccak256\":\"0xaa2cc2ea7a284f5a1f99ffb855af5094f9373de393d670976b49ac4f25e2fdf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cac05113832b5711f442c3dfb04a3bfe8e5bd7368b81b04ee98f15eb6dec91a\",\"dweb:/ipfs/QmVu6NbKYs3z1LXAHD9YJibUcEQC3qZdM2mQBpcgE57SPE\"]},\"53_54_IPromissoryNoteV2.sol\":{\"keccak256\":\"0x580cfeff24e6dc6daa3400ed6ca0f88d471529dcc2db4c0cb2aafc96ea8cce4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76707f9b622ed47dd57d2c272720f7a29ead966b1cfdf04e5df9ade27845418\",\"dweb:/ipfs/Qma831Nq8ZngeaebhehQcGY1ibp9RQfXf9u4ynBQfMH7Ws\"]},\"54_54_IFeeControllerV2.sol\":{\"keccak256\":\"0x7529f71f5b551f705356b9a949407fc9cbe7b60d554f016a5cb005a2d0ce7e8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79d237e8526da576557d0353154e2f13e6e5fffe3807eb2eab52c67bfaccae3\",\"dweb:/ipfs/QmeTvhxJMqSFRHuwgd44s41pBRkXaqgPBzgX1ocA9dAKGX\"]},\"5_54_RolloverErrors.sol\":{\"keccak256\":\"0x020b1c8052b599359ea2ab2a61a00192ef788b1741e8e5e89350b6f58dabb04e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f8debd2a04eebd3fd0b227a34207d440b36742329610b8b91defcad96bba001\",\"dweb:/ipfs/QmSGJS59wY57tWARbegpcN4QzGmwcNZ97R3sysDDwzHGog\"]},\"6_54_ILoanCore.sol\":{\"keccak256\":\"0xc5993fe6e7dd4826897f1866f2a35ccb7b0cb5894b9df04b1872d0ff1b197261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fa76832ad15227f30919d41326f0749cfceac7b0ab67d8f944cba8af7921e\",\"dweb:/ipfs/QmdjZTDT7Hs6rBwJy6BFB5fGc9taabSxmk9ERPSm9XEEd8\"]},\"7_54_LoanLibrary.sol\":{\"keccak256\":\"0xd743e4c985ac20b24c724eb4a06c6ce129d92eb781ab86db7927a0ee2665b77a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0abc0f22341bf88f4427dc707bdd717e3664e6d067f564892347336dc097b9\",\"dweb:/ipfs/QmcGszcBq13arGxkBKX9mga8cqWCiVhiw5XpCanaxh8qeS\"]},\"8_54_IPromissoryNote.sol\":{\"keccak256\":\"0xed6dd50ea09b63ae6e88141ad4bd69c4b291de7fc5148b8b94b56c962d53905f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af3e913a5130ab73499a61db0055b8e008d11f4d69e4b914fbefe07deaf074a0\",\"dweb:/ipfs/QmVSBKHRRaDDRXFWVQYazqbinxPtCjXSVbt6BMmkZ21rVa\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"errors":{"R_StateAlreadySet()":[{"notice":"The rollover contract is already in the specified pause state."}],"R_ZeroAddress(string)":[{"notice":"Cannot pass the zero address as an argument."}]},"kind":"user","methods":{"borrower()":{"notice":"State variable used for checking the inheriting contract initiated the flash         loan. When a rollover function is called the borrowers address is cached here         and checked against the opData in the flash loan callback."},"deployments(uint256)":{"notice":"V3 lending protocol contract references"},"flushToken(address,address)":{"notice":"Function to be used by the contract owner to withdraw any ERC20 tokens that         are sent to the contract and get stuck."},"pause(bool)":{"notice":"Function to be used by the contract owner to pause the contract."},"paused()":{"notice":"state variable for pausing the contract"}},"version":1}}},"40_54_IAirdropReceiverFactory.sol":{"IAirdropReceiverFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"createAirdropReceiver","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"NFTfi","kind":"dev","methods":{},"title":"IAirdropReceiver","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"createAirdropReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IAirdropReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"40_54_IAirdropReceiverFactory.sol\":\"IAirdropReceiverFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"40_54_IAirdropReceiverFactory.sol\":{\"keccak256\":\"0xebb81248214ef956da9dff274331ce1a0cd02dc7286684d05ff9c6f242ee5996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb8c20789a9144de8076ca2c0969bc11d90d1a499a8282a42f35a98e07ab53db\",\"dweb:/ipfs/QmeivxsVs7d76JHa46P7JhTG3pFspyu8FZEj8GKUkz2xCL\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"41_54_Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract in unpaused state."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"41_54_Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"22_54_Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"41_54_Pausable.sol\":{\"keccak256\":\"0x9347635dec691e4e18a54bb998ac5e26f5d413b0ac6625a5a87450c7cca85a7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef64d3936ac7fd4fbef75689b0ad0f822dd28ca90927566b043a797592c2819\",\"dweb:/ipfs/QmaYS6NAMkRJD5FnpNxiUNQE18Dds5QujgtU4enXs4nz3U\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"42_54_IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"42_54_IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"42_54_IERC1155Receiver.sol\":{\"keccak256\":\"0x386464933922eac8150883805363cf9358f409208cdc26b332093d0d1da55973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e495f41079bca08f9663e62fd0c4ae03387566268d05c12c7c726fe0e10b26a4\",\"dweb:/ipfs/QmWC37FqzP18iN5N1tXwhS8E9t3XWuc78jS4ad31i14D1w\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"43_54_IBundleBuilder.sol":{"IBundleBuilder":{"abi":[{"inputs":[{"components":[{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bool","name":"safeTransferable","type":"bool"}],"internalType":"struct IBundleBuilder.BundleElementERC721[]","name":"erc721s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IBundleBuilder.BundleElementERC20[]","name":"erc20s","type":"tuple[]"},{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"internalType":"struct IBundleBuilder.BundleElementERC1155[]","name":"erc1155s","type":"tuple[]"}],"internalType":"struct IBundleBuilder.BundleElements","name":"_bundleElements","type":"tuple"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"buildBundle","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"decomposeBundle","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"buildBundle(((address,uint256,bool)[],(address,uint256)[],(address,uint256[],uint256[])[]),address,address)":{"params":{"_bundleElements":"- the lists of erc721-20-1155 tokens that are to be bundled","_receiver":"receiver of the created bundle, normally the loan contract","_sender":"sender of the tokens in the bundle - the borrower"}},"decomposeBundle(uint256,address)":{"details":"This method may run out of gas if the list of children is too big. In that case, children can be removed      individually.","params":{"_receiver":"address of the receiver of the children","_tokenId":"the id of the bundle"}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"safeTransferable\",\"type\":\"bool\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC721[]\",\"name\":\"erc721s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC20[]\",\"name\":\"erc20s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC1155[]\",\"name\":\"erc1155s\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElements\",\"name\":\"_bundleElements\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"buildBundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"decomposeBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buildBundle(((address,uint256,bool)[],(address,uint256)[],(address,uint256[],uint256[])[]),address,address)\":{\"params\":{\"_bundleElements\":\"- the lists of erc721-20-1155 tokens that are to be bundled\",\"_receiver\":\"receiver of the created bundle, normally the loan contract\",\"_sender\":\"sender of the tokens in the bundle - the borrower\"}},\"decomposeBundle(uint256,address)\":{\"details\":\"This method may run out of gas if the list of children is too big. In that case, children can be removed      individually.\",\"params\":{\"_receiver\":\"address of the receiver of the children\",\"_tokenId\":\"the id of the bundle\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buildBundle(((address,uint256,bool)[],(address,uint256)[],(address,uint256[],uint256[])[]),address,address)\":{\"notice\":\"used by the loan contract to build a bundle from the BundleElements struct at the beginning of a loan, returns the id of the created bundle\"},\"decomposeBundle(uint256,address)\":{\"notice\":\"Remove all the children from the bundle\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"43_54_IBundleBuilder.sol\":\"IBundleBuilder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"43_54_IBundleBuilder.sol\":{\"keccak256\":\"0xf9b3ebf0cb17621198973d3885b8fcefb200ac7a2f3dc613b0316e21adc8a48c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306f336537c3a6cf636ca68fc1062659b57739a2a962b58f38e9388541287aac\",\"dweb:/ipfs/QmX2NkYjLkMK7Ux1Lw9yVTVoXfTbhRRB1A6u4s1uF6mmpc\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"buildBundle(((address,uint256,bool)[],(address,uint256)[],(address,uint256[],uint256[])[]),address,address)":{"notice":"used by the loan contract to build a bundle from the BundleElements struct at the beginning of a loan, returns the id of the created bundle"},"decomposeBundle(uint256,address)":{"notice":"Remove all the children from the bundle"}},"version":1}}},"44_54_SignatureChecker.sol":{"SignatureChecker":{"abi":[],"devdoc":{"details":"Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"44_54_SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"20_54_Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"44_54_SignatureChecker.sol\":{\"keccak256\":\"0x2d56b73dd8e2f6b1954e8a24ddc0ad1ff2f4988b5571d2c5b6b4b4ff988f9053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40057c8d5eb79a23a1509088ca8e6b4b257e1874f67d499d08b5399aca3bc8f1\",\"dweb:/ipfs/QmYRyz1dEimDJNJLbmvAuX3ptmXR9xqVG9WqrjwdKpiAd1\"]},\"45_54_ECDSA.sol\":{\"keccak256\":\"0xbc991a1cf357ce19480831a40792c814238a3b5458134703682abd8aa39719fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2e3313add3a233ad2d1e9b65cb7c0296bdbe159c6d631da2b1d027b4954926\",\"dweb:/ipfs/QmT8bVda92mptimLgonyq28qENq4sRgy6K3v118CvZcKdP\"]},\"46_54_IERC1271.sol\":{\"keccak256\":\"0x14351164423eade7f2dbac5ca9ab8aeded8694f3b2d7a9e0114a2b3b6558198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7588d5d5a23ccdccfb39eb015939560bdc26fd11efb7e5ff8af23f5a3ce8b003\",\"dweb:/ipfs/QmRuohtRJYDoFGazYwbcbz557HzmQDWuW9phW6Cm8tQhwN\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"45_54_ECDSA.sol":{"ECDSA":{"abi":[],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"45_54_ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"45_54_ECDSA.sol\":{\"keccak256\":\"0xbc991a1cf357ce19480831a40792c814238a3b5458134703682abd8aa39719fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2e3313add3a233ad2d1e9b65cb7c0296bdbe159c6d631da2b1d027b4954926\",\"dweb:/ipfs/QmT8bVda92mptimLgonyq28qENq4sRgy6K3v118CvZcKdP\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"46_54_IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._","kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"hash":"Hash of the data to be signed","signature":"Signature byte array associated with _data"}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"46_54_IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"46_54_IERC1271.sol\":{\"keccak256\":\"0x14351164423eade7f2dbac5ca9ab8aeded8694f3b2d7a9e0114a2b3b6558198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7588d5d5a23ccdccfb39eb015939560bdc26fd11efb7e5ff8af23f5a3ce8b003\",\"dweb:/ipfs/QmRuohtRJYDoFGazYwbcbz557HzmQDWuW9phW6Cm8tQhwN\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"47_54_IOriginationController.sol":{"IOriginationController":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"bool","name":"isApproved","type":"bool"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateral","type":"address"},{"indexed":false,"internalType":"bool","name":"isAllowed","type":"bool"}],"name":"SetAllowedCollateral","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"currency","type":"address"},{"indexed":false,"internalType":"bool","name":"isAllowed","type":"bool"},{"indexed":false,"internalType":"uint256","name":"minPrincipal","type":"uint256"}],"name":"SetAllowedCurrency","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"verifier","type":"address"},{"indexed":false,"internalType":"bool","name":"isAllowed","type":"bool"}],"name":"SetAllowedVerifier","type":"event"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"loanTerms","type":"tuple"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"initializeLoan","outputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"loanTerms","type":"tuple"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"uint160","name":"nonce","type":"uint160"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"collateralSig","type":"tuple"},{"internalType":"uint256","name":"permitDeadline","type":"uint256"}],"name":"initializeLoanWithCollateralPermit","outputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"loanTerms","type":"tuple"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"uint160","name":"nonce","type":"uint160"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"collateralSig","type":"tuple"},{"internalType":"uint256","name":"permitDeadline","type":"uint256"},{"components":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"verifier","type":"address"}],"internalType":"struct LoanLibrary.Predicate[]","name":"itemPredicates","type":"tuple[]"}],"name":"initializeLoanWithCollateralPermitAndItems","outputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"loanTerms","type":"tuple"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"uint160","name":"nonce","type":"uint160"},{"components":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"verifier","type":"address"}],"internalType":"struct LoanLibrary.Predicate[]","name":"itemPredicates","type":"tuple[]"}],"name":"initializeLoanWithItems","outputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"isAllowedCollateral","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"isAllowedCurrency","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"verifier","type":"address"}],"name":"isAllowedVerifier","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"name":"isApproved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"bytes32","name":"sighash","type":"bytes32"}],"name":"isApprovedForContract","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"name":"isSelfOrApproved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"loanTerms","type":"tuple"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"uint160","name":"nonce","type":"uint160"},{"internalType":"enum IOriginationController.Side","name":"side","type":"uint8"},{"internalType":"bytes32","name":"itemsHash","type":"bytes32"}],"name":"recoverItemsSignature","outputs":[{"internalType":"bytes32","name":"sighash","type":"bytes32"},{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"loanTerms","type":"tuple"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"uint160","name":"nonce","type":"uint160"},{"internalType":"enum IOriginationController.Side","name":"side","type":"uint8"}],"name":"recoverTokenSignature","outputs":[{"internalType":"bytes32","name":"sighash","type":"bytes32"},{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"oldLoanId","type":"uint256"},{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"loanTerms","type":"tuple"},{"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"rolloverLoan","outputs":[{"internalType":"uint256","name":"newLoanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"oldLoanId","type":"uint256"},{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"loanTerms","type":"tuple"},{"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IOriginationController.Signature","name":"sig","type":"tuple"},{"internalType":"uint160","name":"nonce","type":"uint160"},{"components":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"verifier","type":"address"}],"internalType":"struct LoanLibrary.Predicate[]","name":"itemPredicates","type":"tuple[]"}],"name":"rolloverLoanWithItems","outputs":[{"internalType":"uint256","name":"newLoanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tokenAddress","type":"address[]"},{"internalType":"bool[]","name":"isAllowed","type":"bool[]"}],"name":"setAllowedCollateralAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tokenAddress","type":"address[]"},{"components":[{"internalType":"bool","name":"isAllowed","type":"bool"},{"internalType":"uint256","name":"minPrincipal","type":"uint256"}],"internalType":"struct IOriginationController.Currency[]","name":"currencyData","type":"tuple[]"}],"name":"setAllowedPayableCurrencies","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"verifiers","type":"address[]"},{"internalType":"bool[]","name":"isAllowed","type":"bool[]"}],"name":"setAllowedVerifiers","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"SetAllowedCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minPrincipal\",\"type\":\"uint256\"}],\"name\":\"SetAllowedCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"SetAllowedVerifier\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"initializeLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"collateralSig\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"}],\"name\":\"initializeLoanWithCollateralPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"collateralSig\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"internalType\":\"struct LoanLibrary.Predicate[]\",\"name\":\"itemPredicates\",\"type\":\"tuple[]\"}],\"name\":\"initializeLoanWithCollateralPermitAndItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"internalType\":\"struct LoanLibrary.Predicate[]\",\"name\":\"itemPredicates\",\"type\":\"tuple[]\"}],\"name\":\"initializeLoanWithItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isAllowedCollateral\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isAllowedCurrency\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"isAllowedVerifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"isApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"sighash\",\"type\":\"bytes32\"}],\"name\":\"isApprovedForContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"isSelfOrApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"},{\"internalType\":\"enum IOriginationController.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"itemsHash\",\"type\":\"bytes32\"}],\"name\":\"recoverItemsSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"sighash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"},{\"internalType\":\"enum IOriginationController.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"recoverTokenSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"sighash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oldLoanId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"rolloverLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newLoanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oldLoanId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IOriginationController.Signature\",\"name\":\"sig\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"internalType\":\"struct LoanLibrary.Predicate[]\",\"name\":\"itemPredicates\",\"type\":\"tuple[]\"}],\"name\":\"rolloverLoanWithItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newLoanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokenAddress\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"isAllowed\",\"type\":\"bool[]\"}],\"name\":\"setAllowedCollateralAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokenAddress\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minPrincipal\",\"type\":\"uint256\"}],\"internalType\":\"struct IOriginationController.Currency[]\",\"name\":\"currencyData\",\"type\":\"tuple[]\"}],\"name\":\"setAllowedPayableCurrencies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"verifiers\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"isAllowed\",\"type\":\"bool[]\"}],\"name\":\"setAllowedVerifiers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"47_54_IOriginationController.sol\":\"IOriginationController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"47_54_IOriginationController.sol\":{\"keccak256\":\"0xe791f5f520f1cb15a1c76bb084cce0ac6cf83edf22b4c512f2b76c5758c97300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf5f43c86562ab9ee8d325b33ad4b45a88a48089e3c607cce0f8859973b00686\",\"dweb:/ipfs/QmUaoEfuaW71te4xW2YiqcZNP71udWqbdd1LdFj4B5FDWf\"]},\"7_54_LoanLibrary.sol\":{\"keccak256\":\"0xd743e4c985ac20b24c724eb4a06c6ce129d92eb781ab86db7927a0ee2665b77a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0abc0f22341bf88f4427dc707bdd717e3664e6d067f564892347336dc097b9\",\"dweb:/ipfs/QmcGszcBq13arGxkBKX9mga8cqWCiVhiw5XpCanaxh8qeS\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"48_54_IFeeController.sol":{"IFeeController":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"fee","type":"uint16"}],"name":"SetLendingFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"fee","type":"uint64"}],"name":"SetVaultMintFee","type":"event"},{"inputs":[],"name":"getFeesOrigination","outputs":[{"components":[{"internalType":"uint16","name":"borrowerOriginationFee","type":"uint16"},{"internalType":"uint16","name":"lenderOriginationFee","type":"uint16"},{"internalType":"uint16","name":"lenderDefaultFee","type":"uint16"},{"internalType":"uint16","name":"lenderInterestFee","type":"uint16"},{"internalType":"uint16","name":"lenderPrincipalFee","type":"uint16"}],"internalType":"struct IFeeController.FeesOrigination","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeesRollover","outputs":[{"components":[{"internalType":"uint16","name":"borrowerRolloverFee","type":"uint16"},{"internalType":"uint16","name":"lenderRolloverFee","type":"uint16"}],"internalType":"struct IFeeController.FeesRollover","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getLendingFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getMaxLendingFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMaxVaultMintFee","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultMintFee","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint16","name":"fee","type":"uint16"}],"name":"setLendingFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"fee","type":"uint64"}],"name":"setVaultMintFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"name\":\"SetLendingFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"fee\",\"type\":\"uint64\"}],\"name\":\"SetVaultMintFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getFeesOrigination\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"borrowerOriginationFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderOriginationFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderDefaultFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderInterestFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderPrincipalFee\",\"type\":\"uint16\"}],\"internalType\":\"struct IFeeController.FeesOrigination\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeesRollover\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"borrowerRolloverFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderRolloverFee\",\"type\":\"uint16\"}],\"internalType\":\"struct IFeeController.FeesRollover\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getLendingFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getMaxLendingFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxVaultMintFee\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultMintFee\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"name\":\"setLendingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"fee\",\"type\":\"uint64\"}],\"name\":\"setVaultMintFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"48_54_IFeeController.sol\":\"IFeeController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"48_54_IFeeController.sol\":{\"keccak256\":\"0x52504aacf04a9d98a7ba0629e876a08b48c689c448d4380cc463766b502a93c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e36510694ee9e01200bd6e6dd59399d614dede55c29ddf6ba918f9d791a744\",\"dweb:/ipfs/QmVnBaAednJhiCvNoAjcTYXSxxXYt658J9RyT4ZALckSYH\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"49_54_IFlashLoanRecipient.sol":{"IFlashLoanRecipient":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":{"details":"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"49_54_IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"49_54_IFlashLoanRecipient.sol\":{\"keccak256\":\"0x012004ae1b59c16147d2f89a620d914b502b13375deb50c38449260a40d64b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b199641646072175d469e8fb90dd2c421be9dc69c805691cac58c0f1694f75\",\"dweb:/ipfs/QmYaNPY6Zyoy9xFnYRSd21uCq1QyxdrSdAEPwfH4PVUt39\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}},"IVault":{"abi":[{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"flashLoan(address,address[],uint256[],bytes)":{"details":"copied from @balancer-labs/v2-vault/contracts/interfaces/IVault.sol,      which uses an incompatible compiler version. Only necessary selectors      (flashLoan) included."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"copied from @balancer-labs/v2-vault/contracts/interfaces/IVault.sol,      which uses an incompatible compiler version. Only necessary selectors      (flashLoan) included.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"49_54_IFlashLoanRecipient.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"19_54_IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"49_54_IFlashLoanRecipient.sol\":{\"keccak256\":\"0x012004ae1b59c16147d2f89a620d914b502b13375deb50c38449260a40d64b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58b199641646072175d469e8fb90dd2c421be9dc69c805691cac58c0f1694f75\",\"dweb:/ipfs/QmYaNPY6Zyoy9xFnYRSd21uCq1QyxdrSdAEPwfH4PVUt39\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"50_54_ILoanCoreV2.sol":{"ILoanCoreV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FeesClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaidAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"remBalance","type":"uint256"}],"name":"InstallmentPaymentReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"LoanClaimed","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint32","name":"durationSecs","type":"uint32"},{"internalType":"uint32","name":"deadline","type":"uint32"},{"internalType":"uint24","name":"numInstallments","type":"uint24"},{"internalType":"uint160","name":"interestRate","type":"uint160"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"}],"indexed":false,"internalType":"struct LoanLibraryV2.LoanTerms","name":"terms","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"LoanCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"LoanRepaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldLoanId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newLoanId","type":"uint256"}],"name":"LoanRolledOver","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"},{"indexed":false,"internalType":"address","name":"lender","type":"address"},{"indexed":false,"internalType":"address","name":"borrower","type":"address"}],"name":"LoanStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"NonceUsed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"feeController","type":"address"}],"name":"SetFeeController","type":"event"},{"inputs":[],"name":"borrowerNote","outputs":[{"internalType":"contract IPromissoryNoteV2","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"cancelNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"},{"internalType":"uint256","name":"currentInstallmentPeriod","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"consumeNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeController","outputs":[{"internalType":"contract IFeeControllerV2","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"getLoan","outputs":[{"components":[{"internalType":"enum LoanLibraryV2.LoanState","name":"state","type":"uint8"},{"internalType":"uint24","name":"numInstallmentsPaid","type":"uint24"},{"internalType":"uint160","name":"startDate","type":"uint160"},{"components":[{"internalType":"uint32","name":"durationSecs","type":"uint32"},{"internalType":"uint32","name":"deadline","type":"uint32"},{"internalType":"uint24","name":"numInstallments","type":"uint24"},{"internalType":"uint160","name":"interestRate","type":"uint160"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"}],"internalType":"struct LoanLibraryV2.LoanTerms","name":"terms","type":"tuple"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"balancePaid","type":"uint256"},{"internalType":"uint256","name":"lateFeesAccrued","type":"uint256"}],"internalType":"struct LoanLibraryV2.LoanData","name":"loanData","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"isNonceUsed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lenderNote","outputs":[{"internalType":"contract IPromissoryNoteV2","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_loanId","type":"uint256"},{"internalType":"uint256","name":"_currentMissedPayments","type":"uint256"},{"internalType":"uint256","name":"_paymentToPrincipal","type":"uint256"},{"internalType":"uint256","name":"_paymentToInterest","type":"uint256"},{"internalType":"uint256","name":"_paymentToLateFees","type":"uint256"},{"internalType":"address","name":"_caller","type":"address"}],"name":"repayPart","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"oldLoanId","type":"uint256"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint32","name":"durationSecs","type":"uint32"},{"internalType":"uint32","name":"deadline","type":"uint32"},{"internalType":"uint24","name":"numInstallments","type":"uint24"},{"internalType":"uint160","name":"interestRate","type":"uint160"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"}],"internalType":"struct LoanLibraryV2.LoanTerms","name":"terms","type":"tuple"},{"internalType":"uint256","name":"_settledAmount","type":"uint256"},{"internalType":"uint256","name":"_amountToOldLender","type":"uint256"},{"internalType":"uint256","name":"_amountToLender","type":"uint256"},{"internalType":"uint256","name":"_amountToBorrower","type":"uint256"}],"name":"rollover","outputs":[{"internalType":"uint256","name":"newLoanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"lender","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"components":[{"internalType":"uint32","name":"durationSecs","type":"uint32"},{"internalType":"uint32","name":"deadline","type":"uint32"},{"internalType":"uint24","name":"numInstallments","type":"uint24"},{"internalType":"uint160","name":"interestRate","type":"uint160"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"}],"internalType":"struct LoanLibraryV2.LoanTerms","name":"terms","type":"tuple"}],"name":"startLoan","outputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaidAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remBalance\",\"type\":\"uint256\"}],\"name\":\"InstallmentPaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"durationSecs\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"numInstallments\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"interestRate\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct LoanLibraryV2.LoanTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldLoanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLoanId\",\"type\":\"uint256\"}],\"name\":\"LoanRolledOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"LoanStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"NonceUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeController\",\"type\":\"address\"}],\"name\":\"SetFeeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"borrowerNote\",\"outputs\":[{\"internalType\":\"contract IPromissoryNoteV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"cancelNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentInstallmentPeriod\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"consumeNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"internalType\":\"contract IFeeControllerV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getLoan\",\"outputs\":[{\"components\":[{\"internalType\":\"enum LoanLibraryV2.LoanState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"numInstallmentsPaid\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"startDate\",\"type\":\"uint160\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"durationSecs\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"numInstallments\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"interestRate\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"}],\"internalType\":\"struct LoanLibraryV2.LoanTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balancePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lateFeesAccrued\",\"type\":\"uint256\"}],\"internalType\":\"struct LoanLibraryV2.LoanData\",\"name\":\"loanData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"isNonceUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderNote\",\"outputs\":[{\"internalType\":\"contract IPromissoryNoteV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_currentMissedPayments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_paymentToPrincipal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_paymentToInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_paymentToLateFees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"repayPart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oldLoanId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"durationSecs\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"numInstallments\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"interestRate\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"}],\"internalType\":\"struct LoanLibraryV2.LoanTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_settledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToOldLender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToLender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToBorrower\",\"type\":\"uint256\"}],\"name\":\"rollover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newLoanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"durationSecs\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"numInstallments\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"interestRate\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"}],\"internalType\":\"struct LoanLibraryV2.LoanTerms\",\"name\":\"terms\",\"type\":\"tuple\"}],\"name\":\"startLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"50_54_ILoanCoreV2.sol\":\"ILoanCoreV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"50_54_ILoanCoreV2.sol\":{\"keccak256\":\"0x58368297ba52881f19049fd73e17427b2123f8bb0ea49436bb6746bd158525b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44251f9ab1cd8fedf12e98711105bc991740a021b39c7a0200433e12c291de13\",\"dweb:/ipfs/QmWVqGQmEUkW2ft5Ey3YvxbAC7eiPoCdZqBtkdZgaBMFzw\"]},\"52_54_LoanLibraryV2.sol\":{\"keccak256\":\"0xaa2cc2ea7a284f5a1f99ffb855af5094f9373de393d670976b49ac4f25e2fdf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cac05113832b5711f442c3dfb04a3bfe8e5bd7368b81b04ee98f15eb6dec91a\",\"dweb:/ipfs/QmVu6NbKYs3z1LXAHD9YJibUcEQC3qZdM2mQBpcgE57SPE\"]},\"53_54_IPromissoryNoteV2.sol\":{\"keccak256\":\"0x580cfeff24e6dc6daa3400ed6ca0f88d471529dcc2db4c0cb2aafc96ea8cce4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76707f9b622ed47dd57d2c272720f7a29ead966b1cfdf04e5df9ade27845418\",\"dweb:/ipfs/Qma831Nq8ZngeaebhehQcGY1ibp9RQfXf9u4ynBQfMH7Ws\"]},\"54_54_IFeeControllerV2.sol\":{\"keccak256\":\"0x7529f71f5b551f705356b9a949407fc9cbe7b60d554f016a5cb005a2d0ce7e8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79d237e8526da576557d0353154e2f13e6e5fffe3807eb2eab52c67bfaccae3\",\"dweb:/ipfs/QmeTvhxJMqSFRHuwgd44s41pBRkXaqgPBzgX1ocA9dAKGX\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"51_54_IRepaymentControllerV2.sol":{"IRepaymentControllerV2":{"abi":[{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"amountToCloseLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"closeLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"uint256","name":"interestRate","type":"uint256"}],"name":"getFullInterestAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"getInstallmentMinPayment","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"repayPart","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"repayPartMinimum","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"amountToCloseLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"closeLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"}],\"name\":\"getFullInterestAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getInstallmentMinPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repayPart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"repayPartMinimum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"51_54_IRepaymentControllerV2.sol\":\"IRepaymentControllerV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"51_54_IRepaymentControllerV2.sol\":{\"keccak256\":\"0xbd66b6924203761384439ba6ca64afeab9b02028f5d8845b4824c7dc14bea889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ffc27e038dd979b277725babfebc627bdb0f7542c0113c8f190c7584e6af29\",\"dweb:/ipfs/QmeoVVzPbcG8i1RrbXd27DGSBWANdH9DqhAQMPv3fUxgp4\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"52_54_LoanLibraryV2.sol":{"LoanLibraryV2":{"abi":[],"devdoc":{"author":"Non-Fungible Technologies, Inc. Contains all data types used across Arcade lending contracts.","kind":"dev","methods":{},"title":"LoanLibrary","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Non-Fungible Technologies, Inc. Contains all data types used across Arcade lending contracts.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LoanLibrary\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"52_54_LoanLibraryV2.sol\":\"LoanLibraryV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"52_54_LoanLibraryV2.sol\":{\"keccak256\":\"0xaa2cc2ea7a284f5a1f99ffb855af5094f9373de393d670976b49ac4f25e2fdf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cac05113832b5711f442c3dfb04a3bfe8e5bd7368b81b04ee98f15eb6dec91a\",\"dweb:/ipfs/QmVu6NbKYs3z1LXAHD9YJibUcEQC3qZdM2mQBpcgE57SPE\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"53_54_IPromissoryNoteV2.sol":{"IPromissoryNoteV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"loanCore","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"loanCore\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"53_54_IPromissoryNoteV2.sol\":\"IPromissoryNoteV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"53_54_IPromissoryNoteV2.sol\":{\"keccak256\":\"0x580cfeff24e6dc6daa3400ed6ca0f88d471529dcc2db4c0cb2aafc96ea8cce4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76707f9b622ed47dd57d2c272720f7a29ead966b1cfdf04e5df9ade27845418\",\"dweb:/ipfs/Qma831Nq8ZngeaebhehQcGY1ibp9RQfXf9u4ynBQfMH7Ws\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"54_54_IFeeControllerV2.sol":{"IFeeControllerV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"UpdateCollateralSaleFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"UpdateOriginationFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"UpdatePayLaterFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"UpdateRolloverFee","type":"event"},{"inputs":[],"name":"getCollateralSaleFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOriginationFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPayLaterFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRolloverFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_collateralSaleFee","type":"uint256"}],"name":"setCollateralSaleFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_originationFee","type":"uint256"}],"name":"setOriginationFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_payLaterFee","type":"uint256"}],"name":"setPayLaterFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rolloverFee","type":"uint256"}],"name":"setRolloverFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"UpdateCollateralSaleFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"UpdateOriginationFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"UpdatePayLaterFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"UpdateRolloverFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getCollateralSaleFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOriginationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPayLaterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRolloverFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collateralSaleFee\",\"type\":\"uint256\"}],\"name\":\"setCollateralSaleFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_originationFee\",\"type\":\"uint256\"}],\"name\":\"setOriginationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_payLaterFee\",\"type\":\"uint256\"}],\"name\":\"setPayLaterFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rolloverFee\",\"type\":\"uint256\"}],\"name\":\"setRolloverFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"54_54_IFeeControllerV2.sol\":\"IFeeControllerV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"54_54_IFeeControllerV2.sol\":{\"keccak256\":\"0x7529f71f5b551f705356b9a949407fc9cbe7b60d554f016a5cb005a2d0ce7e8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79d237e8526da576557d0353154e2f13e6e5fffe3807eb2eab52c67bfaccae3\",\"dweb:/ipfs/QmeTvhxJMqSFRHuwgd44s41pBRkXaqgPBzgX1ocA9dAKGX\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"6_54_ILoanCore.sol":{"ILoanCore":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"code","type":"bytes32"},{"indexed":true,"internalType":"address","name":"affiliate","type":"address"},{"indexed":false,"internalType":"uint96","name":"splitBps","type":"uint96"}],"name":"AffiliateSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FeesWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"ForceRepay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"LoanClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"LoanRepaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldLoanId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newLoanId","type":"uint256"}],"name":"LoanRolledOver","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"},{"indexed":false,"internalType":"address","name":"lender","type":"address"},{"indexed":false,"internalType":"address","name":"borrower","type":"address"}],"name":"LoanStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"NonceUsed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NoteRedeemed","type":"event"},{"inputs":[],"name":"borrowerNote","outputs":[{"internalType":"contract IPromissoryNote","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"cancelNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"},{"internalType":"uint256","name":"_amountFromLender","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"consumeNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"uint256","name":"_amountFromPayer","type":"uint256"},{"internalType":"uint256","name":"_amountToLender","type":"uint256"}],"name":"forceRepay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"getLoan","outputs":[{"components":[{"internalType":"enum LoanLibrary.LoanState","name":"state","type":"uint8"},{"internalType":"uint160","name":"startDate","type":"uint160"},{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"terms","type":"tuple"},{"components":[{"internalType":"uint16","name":"lenderDefaultFee","type":"uint16"},{"internalType":"uint16","name":"lenderInterestFee","type":"uint16"},{"internalType":"uint16","name":"lenderPrincipalFee","type":"uint16"}],"internalType":"struct LoanLibrary.FeeSnapshot","name":"feeSnapshot","type":"tuple"}],"internalType":"struct LoanLibrary.LoanData","name":"loanData","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"getNoteReceipt","outputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint160","name":"nonce","type":"uint160"}],"name":"isNonceUsed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lenderNote","outputs":[{"internalType":"contract IPromissoryNote","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"},{"internalType":"uint256","name":"_amountFromLender","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"redeemNote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"loanId","type":"uint256"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"uint256","name":"_amountFromPayer","type":"uint256"},{"internalType":"uint256","name":"_amountToLender","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"oldLoanId","type":"uint256"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"lender","type":"address"},{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"terms","type":"tuple"},{"internalType":"uint256","name":"_settledAmount","type":"uint256"},{"internalType":"uint256","name":"_amountToOldLender","type":"uint256"},{"internalType":"uint256","name":"_amountToLender","type":"uint256"},{"internalType":"uint256","name":"_amountToBorrower","type":"uint256"}],"name":"rollover","outputs":[{"internalType":"uint256","name":"newLoanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"codes","type":"bytes32[]"},{"components":[{"internalType":"address","name":"affiliate","type":"address"},{"internalType":"uint96","name":"splitBps","type":"uint96"}],"internalType":"struct ILoanCore.AffiliateSplit[]","name":"splits","type":"tuple[]"}],"name":"setAffiliateSplits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"lender","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"components":[{"internalType":"uint256","name":"proratedInterestRate","type":"uint256"},{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"address","name":"collateralAddress","type":"address"},{"internalType":"uint96","name":"durationSecs","type":"uint96"},{"internalType":"uint256","name":"collateralId","type":"uint256"},{"internalType":"address","name":"payableCurrency","type":"address"},{"internalType":"uint96","name":"deadline","type":"uint96"},{"internalType":"bytes32","name":"affiliateCode","type":"bytes32"}],"internalType":"struct LoanLibrary.LoanTerms","name":"terms","type":"tuple"},{"internalType":"uint256","name":"_amountFromLender","type":"uint256"},{"internalType":"uint256","name":"_amountToBorrower","type":"uint256"},{"components":[{"internalType":"uint16","name":"lenderDefaultFee","type":"uint16"},{"internalType":"uint16","name":"lenderInterestFee","type":"uint16"},{"internalType":"uint16","name":"lenderPrincipalFee","type":"uint16"}],"internalType":"struct LoanLibrary.FeeSnapshot","name":"feeSnapshot","type":"tuple"}],"name":"startLoan","outputs":[{"internalType":"uint256","name":"loanId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"withdrawProtocolFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"splitBps\",\"type\":\"uint96\"}],\"name\":\"AffiliateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"ForceRepay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldLoanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLoanId\",\"type\":\"uint256\"}],\"name\":\"LoanRolledOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"LoanStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"NonceUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NoteRedeemed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"borrowerNote\",\"outputs\":[{\"internalType\":\"contract IPromissoryNote\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"cancelNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountFromLender\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"consumeNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountFromPayer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToLender\",\"type\":\"uint256\"}],\"name\":\"forceRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getLoan\",\"outputs\":[{\"components\":[{\"internalType\":\"enum LoanLibrary.LoanState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint160\",\"name\":\"startDate\",\"type\":\"uint160\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"lenderDefaultFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderInterestFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderPrincipalFee\",\"type\":\"uint16\"}],\"internalType\":\"struct LoanLibrary.FeeSnapshot\",\"name\":\"feeSnapshot\",\"type\":\"tuple\"}],\"internalType\":\"struct LoanLibrary.LoanData\",\"name\":\"loanData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getNoteReceipt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"nonce\",\"type\":\"uint160\"}],\"name\":\"isNonceUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderNote\",\"outputs\":[{\"internalType\":\"contract IPromissoryNote\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountFromLender\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"redeemNote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountFromPayer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToLender\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oldLoanId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_settledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToOldLender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToLender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToBorrower\",\"type\":\"uint256\"}],\"name\":\"rollover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newLoanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"codes\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"splitBps\",\"type\":\"uint96\"}],\"internalType\":\"struct ILoanCore.AffiliateSplit[]\",\"name\":\"splits\",\"type\":\"tuple[]\"}],\"name\":\"setAffiliateSplits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proratedInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"durationSecs\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payableCurrency\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"deadline\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"affiliateCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct LoanLibrary.LoanTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_amountFromLender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToBorrower\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"lenderDefaultFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderInterestFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lenderPrincipalFee\",\"type\":\"uint16\"}],\"internalType\":\"struct LoanLibrary.FeeSnapshot\",\"name\":\"feeSnapshot\",\"type\":\"tuple\"}],\"name\":\"startLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawProtocolFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"6_54_ILoanCore.sol\":\"ILoanCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_54_INFTWithDescriptor.sol\":{\"keccak256\":\"0xa65ff18a7c35e3a1d4ced320590e512a5a1ac3b5038529882019344b93dc1a1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15800408246c27da705c6b3fd5f95f1a3cc0d12cee025e5fd74b76687478058\",\"dweb:/ipfs/QmNkNxrxM4fd67JrDD5M1u16WoBVm9fd9fcgPCcUuhiApw\"]},\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"6_54_ILoanCore.sol\":{\"keccak256\":\"0xc5993fe6e7dd4826897f1866f2a35ccb7b0cb5894b9df04b1872d0ff1b197261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fa76832ad15227f30919d41326f0749cfceac7b0ab67d8f944cba8af7921e\",\"dweb:/ipfs/QmdjZTDT7Hs6rBwJy6BFB5fGc9taabSxmk9ERPSm9XEEd8\"]},\"7_54_LoanLibrary.sol\":{\"keccak256\":\"0xd743e4c985ac20b24c724eb4a06c6ce129d92eb781ab86db7927a0ee2665b77a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0abc0f22341bf88f4427dc707bdd717e3664e6d067f564892347336dc097b9\",\"dweb:/ipfs/QmcGszcBq13arGxkBKX9mga8cqWCiVhiw5XpCanaxh8qeS\"]},\"8_54_IPromissoryNote.sol\":{\"keccak256\":\"0xed6dd50ea09b63ae6e88141ad4bd69c4b291de7fc5148b8b94b56c962d53905f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af3e913a5130ab73499a61db0055b8e008d11f4d69e4b914fbefe07deaf074a0\",\"dweb:/ipfs/QmVSBKHRRaDDRXFWVQYazqbinxPtCjXSVbt6BMmkZ21rVa\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"7_54_LoanLibrary.sol":{"LoanLibrary":{"abi":[],"devdoc":{"author":"Non-Fungible Technologies, Inc. Contains all data types used across Arcade lending contracts.","kind":"dev","methods":{},"title":"LoanLibrary","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Non-Fungible Technologies, Inc. Contains all data types used across Arcade lending contracts.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LoanLibrary\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"7_54_LoanLibrary.sol\":\"LoanLibrary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"7_54_LoanLibrary.sol\":{\"keccak256\":\"0xd743e4c985ac20b24c724eb4a06c6ce129d92eb781ab86db7927a0ee2665b77a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df0abc0f22341bf88f4427dc707bdd717e3664e6d067f564892347336dc097b9\",\"dweb:/ipfs/QmcGszcBq13arGxkBKX9mga8cqWCiVhiw5XpCanaxh8qeS\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"8_54_IPromissoryNote.sol":{"IPromissoryNote":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"descriptor","type":"address"}],"name":"SetDescriptor","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"loanCore","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"descriptor","type":"address"}],"name":"setDescriptor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"descriptor\",\"type\":\"address\"}],\"name\":\"SetDescriptor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"loanCore\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"descriptor\",\"type\":\"address\"}],\"name\":\"setDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"8_54_IPromissoryNote.sol\":\"IPromissoryNote\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_54_INFTWithDescriptor.sol\":{\"keccak256\":\"0xa65ff18a7c35e3a1d4ced320590e512a5a1ac3b5038529882019344b93dc1a1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15800408246c27da705c6b3fd5f95f1a3cc0d12cee025e5fd74b76687478058\",\"dweb:/ipfs/QmNkNxrxM4fd67JrDD5M1u16WoBVm9fd9fcgPCcUuhiApw\"]},\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"8_54_IPromissoryNote.sol\":{\"keccak256\":\"0xed6dd50ea09b63ae6e88141ad4bd69c4b291de7fc5148b8b94b56c962d53905f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af3e913a5130ab73499a61db0055b8e008d11f4d69e4b914fbefe07deaf074a0\",\"dweb:/ipfs/QmVSBKHRRaDDRXFWVQYazqbinxPtCjXSVbt6BMmkZ21rVa\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"9_54_IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"9_54_IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_54_IERC721.sol\":{\"keccak256\":\"0x578af9c2a13229842e1fb6e92ee44fba4c9cc5b594f198a7650a31ad310cbb71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4586c4fbf98246d9c2dfd98f80d46bf15f718eb8bcf6e0169496c146a586ca6\",\"dweb:/ipfs/QmYn6cSS4BQ3nHamijLiP5uYJKhd8ArYhxrrMhhdgWDiVn\"]},\"12_54_IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"9_54_IERC721Enumerable.sol\":{\"keccak256\":\"0x7fa5b8e7a840cbe4c80c86872a2a9bd15ed9eb4a19802fdd48e8ea1ec6e2b630\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2e125a8a993fa58470d777655076f33661515c859de7924a7d778b017785c1\",\"dweb:/ipfs/QmaJooQJHdVEEHiap7kWezh2bYontLGBs3rn2n6cMFpNJu\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}}},"errors":[{"component":"general","formattedMessage":"YulException: Variable var__loanId_5735 is 6 slot(s) too deep inside the stack. Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.\n\n","message":"Yul exception:Variable var__loanId_5735 is 6 slot(s) too deep inside the stack. Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.","severity":"error","type":"YulException"}],"sources":{"10_54_INFTWithDescriptor.sol":{"id":0},"11_54_IERC721.sol":{"id":1},"12_54_IERC165.sol":{"id":2},"13_54_SafeERC20.sol":{"id":3},"14_54_ERC721Holder.sol":{"id":4},"15_54_ReentrancyGuard.sol":{"id":5},"16_54_Ownable.sol":{"id":6},"17_54_DirectLoanFixedOffer.sol":{"id":7},"18_54_IMigrationBase.sol":{"id":8},"19_54_IERC20.sol":{"id":9},"1_54_LP1MigrationWithItems.sol":{"id":10},"20_54_Address.sol":{"id":11},"21_54_IERC721Receiver.sol":{"id":12},"22_54_Context.sol":{"id":13},"23_54_DirectLoanBaseMinimal.sol":{"id":14},"24_54_ContractKeys.sol":{"id":15},"25_54_IDirectLoanBase.sol":{"id":16},"26_54_LoanData.sol":{"id":17},"27_54_LoanChecksAndCalculations.sol":{"id":18},"28_54_LoanAirdropUtils.sol":{"id":19},"29_54_BaseLoan.sol":{"id":20},"2_54_IMigrationWithItems.sol":{"id":21},"30_54_NftReceiver.sol":{"id":22},"31_54_NFTfiSigningUtils.sol":{"id":23},"32_54_INftfiHub.sol":{"id":24},"33_54_IDirectLoanCoordinator.sol":{"id":25},"34_54_INftWrapper.sol":{"id":26},"35_54_IPermittedPartners.sol":{"id":27},"36_54_IPermittedERC20s.sol":{"id":28},"37_54_IPermittedNFTs.sol":{"id":29},"38_54_IERC1155.sol":{"id":30},"39_54_IAirdropFlashLoan.sol":{"id":31},"3_54_LP1MigrationBase.sol":{"id":32},"40_54_IAirdropReceiverFactory.sol":{"id":33},"41_54_Pausable.sol":{"id":34},"42_54_IERC1155Receiver.sol":{"id":35},"43_54_IBundleBuilder.sol":{"id":36},"44_54_SignatureChecker.sol":{"id":37},"45_54_ECDSA.sol":{"id":38},"46_54_IERC1271.sol":{"id":39},"47_54_IOriginationController.sol":{"id":40},"48_54_IFeeController.sol":{"id":41},"49_54_IFlashLoanRecipient.sol":{"id":42},"4_54_MigrationErrors.sol":{"id":43},"50_54_ILoanCoreV2.sol":{"id":44},"51_54_IRepaymentControllerV2.sol":{"id":45},"52_54_LoanLibraryV2.sol":{"id":46},"53_54_IPromissoryNoteV2.sol":{"id":47},"54_54_IFeeControllerV2.sol":{"id":48},"5_54_RolloverErrors.sol":{"id":49},"6_54_ILoanCore.sol":{"id":50},"7_54_LoanLibrary.sol":{"id":51},"8_54_IPromissoryNote.sol":{"id":52},"9_54_IERC721Enumerable.sol":{"id":53}}}

> stderr:
