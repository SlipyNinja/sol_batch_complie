Traceback (most recent call last):
  File "/Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/batchCompile.py", line 161, in multi_process_directory
    compiled_sol = compile_contract(path, version, filename, copy.deepcopy(settings))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/batchCompile.py", line 115, in compile_contract
    compiled_sol = compile_standard(setting, allow_paths=path, solc_version=version)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/longfeichen/.env/compile_solidity/lib/python3.12/site-packages/solcx/main.py", line 369, in compile_standard
    raise SolcError(
solcx.exceptions.SolcError: Exception during compilation: /solidity/libevmasm/Assembly.cpp(766): Throw in function const std::map<u256, u256> &solidity::evmasm::Assembly::optimiseInternal(const OptimiserSettings &, std::set<size_t>)
Dynamic exception type: boost::wrapexcept<solidity::evmasm::OptimizerException>
std::exception::what: Replacement already known.
[solidity::util::tag_comment*] = Replacement already known.

> command: `/Users/longfeichen/.solcx/solc-v0.8.24 --standard-json --allow-paths /Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/contracts/0x1f6eaefd0773f10e5aeebada1c16b2226aea85ea_AaveV2EthereumUSDC`
> return code: `0`
> stdout:
{"contracts":{"01_10_AaveV2EthereumUSDC.sol":{"AaveV2EthereumUSDC":{"abi":[{"inputs":[{"internalType":"address","name":"incentiveVault_","type":"address"}],"name":"changeIncentiveVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exitAndWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getBalance","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"incentiveVaultBalance","type":"uint256"}],"internalType":"struct BalanceItem[]","name":"balances","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getBalanceAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"params","type":"bytes"}],"name":"harvestWithParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"hasAllocation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"incentiveVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner_","type":"address"},{"internalType":"address","name":"factory_","type":"address"},{"internalType":"address","name":"incentiveVault_","type":"address"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"runMultipleTx","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"runTx","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdrawERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"changeIncentiveVault(address)":{"params":{"incentiveVault_":"New incentive vault address"}},"getBalance(address[])":{"details":"Should marked as view in ABI","params":{"tokens":"Owner (for ACL and transfers out)"},"returns":{"balances":"Info about token balances"}},"harvestWithParams(bytes)":{"params":{"params":"Encoded params (use encodeParams function for it)"}},"init(address,address,address)":{"params":{"factory_":"For validation and info about executor","incentiveVault_":"Address, that collect all incentive tokens","owner_":"Owner (for ACL and transfers out)"}},"runMultipleTx(address[],uint256[],bytes[])":{"params":{"datas":"List of enocded function calls","targets":"List of address","values":"List of transactions value (e.g. 1 AVAX)"}},"runTx(address,uint256,bytes)":{"params":{"data":"Enocded function call","target":"Address","value":"Transaction value (e.g. 1 AVAX)"}},"withdrawERC20(address)":{"params":{"token":"ERC20 address"}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"incentiveVault_\",\"type\":\"address\"}],\"name\":\"changeIncentiveVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exitAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incentiveVaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct BalanceItem[]\",\"name\":\"balances\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getBalanceAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"harvestWithParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentiveVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"incentiveVault_\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"runMultipleTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"runTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeIncentiveVault(address)\":{\"params\":{\"incentiveVault_\":\"New incentive vault address\"}},\"getBalance(address[])\":{\"details\":\"Should marked as view in ABI\",\"params\":{\"tokens\":\"Owner (for ACL and transfers out)\"},\"returns\":{\"balances\":\"Info about token balances\"}},\"harvestWithParams(bytes)\":{\"params\":{\"params\":\"Encoded params (use encodeParams function for it)\"}},\"init(address,address,address)\":{\"params\":{\"factory_\":\"For validation and info about executor\",\"incentiveVault_\":\"Address, that collect all incentive tokens\",\"owner_\":\"Owner (for ACL and transfers out)\"}},\"runMultipleTx(address[],uint256[],bytes[])\":{\"params\":{\"datas\":\"List of enocded function calls\",\"targets\":\"List of address\",\"values\":\"List of transactions value (e.g. 1 AVAX)\"}},\"runTx(address,uint256,bytes)\":{\"params\":{\"data\":\"Enocded function call\",\"target\":\"Address\",\"value\":\"Transaction value (e.g. 1 AVAX)\"}},\"withdrawERC20(address)\":{\"params\":{\"token\":\"ERC20 address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeIncentiveVault(address)\":{\"notice\":\"Change address of incentive vault.\"},\"enter()\":{\"notice\":\"Enters to DEFI instrument. Could run only by owner.\"},\"exit()\":{\"notice\":\"Exit from DEFI instrument. Could run by owner or executor. Don't withdraw funds to owner account.\"},\"exitAndWithdraw()\":{\"notice\":\"Exit from DEFI instrument. Could run by owner or executor.\"},\"getBalance(address[])\":{\"notice\":\"Calculates balances of given tokens. Returns difference of token amount before exit and after exit.\"},\"getBalanceAndRevert(address[])\":{\"notice\":\"Use getBalance. This function always reverts.\"},\"harvest()\":{\"notice\":\"Claim rewards and withdraw to owner.\"},\"harvestWithParams(bytes)\":{\"notice\":\"Claim rewards, sell it and and withdraw to owner.\"},\"init(address,address,address)\":{\"notice\":\"Sets owner and factory addresses. Could run only once, called by factory.\"},\"runMultipleTx(address[],uint256[],bytes[])\":{\"notice\":\"Runs custom multiple transactions. Could run only by owner.\"},\"runTx(address,uint256,bytes)\":{\"notice\":\"Runs custom transaction. Could run only by owner.\"},\"withdrawERC20(address)\":{\"notice\":\"Withdraw ERC20 to owner\"},\"withdrawETH()\":{\"notice\":\"Withdraw native token to owner (e.g ETH, AVAX, ...)\"},\"withdrawFunds()\":{\"notice\":\"Withdraw funds to owner (some hardcoded assets, which uses in instrument).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_10_AaveV2EthereumUSDC.sol\":\"AaveV2EthereumUSDC\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"01_10_AaveV2EthereumUSDC.sol\":{\"keccak256\":\"0xac4df4932da5f64908650fd3b15a3c5a225428331a04309c8b706f37fe0f4462\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a27a336447b6b4f02dccd07d77eaffd253c97bcce690097042bf5525083847fc\",\"dweb:/ipfs/QmQzxRNvPaaGfkxSuJkaCpUrykSG9ubBRXyz3vsVQWwUUa\"]},\"03_10_draft-IERC20Permit.sol\":{\"keccak256\":\"0x9afa8d4740d0c343672e6a02374c85c1e8e70cc01163cc919ac91d191abd05e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://460a9a351f18515ec191361d8221f3123e519121efc2228fbbfbcc54dad0ad0e\",\"dweb:/ipfs/QmaNRgWGV34XzFUisYvSfzkRqAntGsRb5F6sVV4hZ1LFbL\"]},\"04_10_IERC20Metadata.sol\":{\"keccak256\":\"0x5a1e722c2e931b2f463ea73fa8278567ee788418bb263743fdfd59b388870f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c938329ad20abd3de056ced1d7423458d86952c0bdec6a3a9b5d1a71cf22439\",\"dweb:/ipfs/QmcMELFAqVbHVrdST5ST8VGhriUZt32UhPT91NKFNDvLKh\"]},\"05_10_IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"06_10_SafeERC20.sol\":{\"keccak256\":\"0xdb5267f6c68abdfe2f1488076b8127ef193f82be2902f732edbf1bbd9414d220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86b02dc0e187d008c71322689e590eb2ab5bd3b9cd4f29403ae452592206276f\",\"dweb:/ipfs/QmZfzS2DWNHSbVnVSWKuX5yLWqpx7KVwa5ADKmqXJZS2DQ\"]},\"07_10_Address.sol\":{\"keccak256\":\"0x2b03d8ad427815b31d98bcbd044c91e90927abdb593b417112761b36850cd115\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b421a1eafe5022e9367743a1a8daea22672f95176a339b2f76f6fd375c2cc93\",\"dweb:/ipfs/QmXQtm4Z8ZN9v46WxTphXq5wHHwB4FLoaP5swX9G7BmrrE\"]},\"08_10_Defii.sol\":{\"keccak256\":\"0xa5b141c2994252e184b5dc1d92e3403d9922e0d94cb591f3db7bca78143d41e0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e23537cfee063f7e194358b32d918ee18d97ff9822487bc41dba5b60dc22fad6\",\"dweb:/ipfs/QmS2zxrzKVvbQygrB7R3Xp4dJNurKxitCGPZDLaHFJqZYx\"]},\"09_10_IDefii.sol\":{\"keccak256\":\"0x4e69d6def8c9d9be9862d0b72da7f428ba1f18fa1931aadb8ae5ce67024e33fe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b1b6a929440e90fc08bbbf3aa8e01b84f3925fdf4b54d50e1d1971365b2a11d9\",\"dweb:/ipfs/QmdosxbYCxuoCjA5tkVVCb4TCc9LnJRQeJzqF78aEyGn4n\"]},\"10_10_IDefiiFactory.sol\":{\"keccak256\":\"0x1f19f95316e0253b3b1af93eed335020c729634b7c0ac24bdf2bcf16c763416f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e7c25381dee4f324512d7eefc1a469664573406f68a1bfe1dd53241e69812d\",\"dweb:/ipfs/QmdJVYsubCLyrofj6VE1yks6SuU9dTMeWjBsMPF5hZsPTT\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"changeIncentiveVault(address)":{"notice":"Change address of incentive vault."},"enter()":{"notice":"Enters to DEFI instrument. Could run only by owner."},"exit()":{"notice":"Exit from DEFI instrument. Could run by owner or executor. Don't withdraw funds to owner account."},"exitAndWithdraw()":{"notice":"Exit from DEFI instrument. Could run by owner or executor."},"getBalance(address[])":{"notice":"Calculates balances of given tokens. Returns difference of token amount before exit and after exit."},"getBalanceAndRevert(address[])":{"notice":"Use getBalance. This function always reverts."},"harvest()":{"notice":"Claim rewards and withdraw to owner."},"harvestWithParams(bytes)":{"notice":"Claim rewards, sell it and and withdraw to owner."},"init(address,address,address)":{"notice":"Sets owner and factory addresses. Could run only once, called by factory."},"runMultipleTx(address[],uint256[],bytes[])":{"notice":"Runs custom multiple transactions. Could run only by owner."},"runTx(address,uint256,bytes)":{"notice":"Runs custom transaction. Could run only by owner."},"withdrawERC20(address)":{"notice":"Withdraw ERC20 to owner"},"withdrawETH()":{"notice":"Withdraw native token to owner (e.g ETH, AVAX, ...)"},"withdrawFunds()":{"notice":"Withdraw funds to owner (some hardcoded assets, which uses in instrument)."}},"version":1}},"IPool":{"abi":[{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_10_AaveV2EthereumUSDC.sol\":\"IPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"01_10_AaveV2EthereumUSDC.sol\":{\"keccak256\":\"0xac4df4932da5f64908650fd3b15a3c5a225428331a04309c8b706f37fe0f4462\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a27a336447b6b4f02dccd07d77eaffd253c97bcce690097042bf5525083847fc\",\"dweb:/ipfs/QmQzxRNvPaaGfkxSuJkaCpUrykSG9ubBRXyz3vsVQWwUUa\"]},\"03_10_draft-IERC20Permit.sol\":{\"keccak256\":\"0x9afa8d4740d0c343672e6a02374c85c1e8e70cc01163cc919ac91d191abd05e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://460a9a351f18515ec191361d8221f3123e519121efc2228fbbfbcc54dad0ad0e\",\"dweb:/ipfs/QmaNRgWGV34XzFUisYvSfzkRqAntGsRb5F6sVV4hZ1LFbL\"]},\"04_10_IERC20Metadata.sol\":{\"keccak256\":\"0x5a1e722c2e931b2f463ea73fa8278567ee788418bb263743fdfd59b388870f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c938329ad20abd3de056ced1d7423458d86952c0bdec6a3a9b5d1a71cf22439\",\"dweb:/ipfs/QmcMELFAqVbHVrdST5ST8VGhriUZt32UhPT91NKFNDvLKh\"]},\"05_10_IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"06_10_SafeERC20.sol\":{\"keccak256\":\"0xdb5267f6c68abdfe2f1488076b8127ef193f82be2902f732edbf1bbd9414d220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86b02dc0e187d008c71322689e590eb2ab5bd3b9cd4f29403ae452592206276f\",\"dweb:/ipfs/QmZfzS2DWNHSbVnVSWKuX5yLWqpx7KVwa5ADKmqXJZS2DQ\"]},\"07_10_Address.sol\":{\"keccak256\":\"0x2b03d8ad427815b31d98bcbd044c91e90927abdb593b417112761b36850cd115\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b421a1eafe5022e9367743a1a8daea22672f95176a339b2f76f6fd375c2cc93\",\"dweb:/ipfs/QmXQtm4Z8ZN9v46WxTphXq5wHHwB4FLoaP5swX9G7BmrrE\"]},\"08_10_Defii.sol\":{\"keccak256\":\"0xa5b141c2994252e184b5dc1d92e3403d9922e0d94cb591f3db7bca78143d41e0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e23537cfee063f7e194358b32d918ee18d97ff9822487bc41dba5b60dc22fad6\",\"dweb:/ipfs/QmS2zxrzKVvbQygrB7R3Xp4dJNurKxitCGPZDLaHFJqZYx\"]},\"09_10_IDefii.sol\":{\"keccak256\":\"0x4e69d6def8c9d9be9862d0b72da7f428ba1f18fa1931aadb8ae5ce67024e33fe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b1b6a929440e90fc08bbbf3aa8e01b84f3925fdf4b54d50e1d1971365b2a11d9\",\"dweb:/ipfs/QmdosxbYCxuoCjA5tkVVCb4TCc9LnJRQeJzqF78aEyGn4n\"]},\"10_10_IDefiiFactory.sol\":{\"keccak256\":\"0x1f19f95316e0253b3b1af93eed335020c729634b7c0ac24bdf2bcf16c763416f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e7c25381dee4f324512d7eefc1a469664573406f68a1bfe1dd53241e69812d\",\"dweb:/ipfs/QmdJVYsubCLyrofj6VE1yks6SuU9dTMeWjBsMPF5hZsPTT\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"03_10_draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"03_10_draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"03_10_draft-IERC20Permit.sol\":{\"keccak256\":\"0x9afa8d4740d0c343672e6a02374c85c1e8e70cc01163cc919ac91d191abd05e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://460a9a351f18515ec191361d8221f3123e519121efc2228fbbfbcc54dad0ad0e\",\"dweb:/ipfs/QmaNRgWGV34XzFUisYvSfzkRqAntGsRb5F6sVV4hZ1LFbL\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"04_10_IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"04_10_IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"04_10_IERC20Metadata.sol\":{\"keccak256\":\"0x5a1e722c2e931b2f463ea73fa8278567ee788418bb263743fdfd59b388870f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c938329ad20abd3de056ced1d7423458d86952c0bdec6a3a9b5d1a71cf22439\",\"dweb:/ipfs/QmcMELFAqVbHVrdST5ST8VGhriUZt32UhPT91NKFNDvLKh\"]},\"05_10_IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"05_10_IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"05_10_IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"05_10_IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"06_10_SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"06_10_SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"03_10_draft-IERC20Permit.sol\":{\"keccak256\":\"0x9afa8d4740d0c343672e6a02374c85c1e8e70cc01163cc919ac91d191abd05e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://460a9a351f18515ec191361d8221f3123e519121efc2228fbbfbcc54dad0ad0e\",\"dweb:/ipfs/QmaNRgWGV34XzFUisYvSfzkRqAntGsRb5F6sVV4hZ1LFbL\"]},\"05_10_IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"06_10_SafeERC20.sol\":{\"keccak256\":\"0xdb5267f6c68abdfe2f1488076b8127ef193f82be2902f732edbf1bbd9414d220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86b02dc0e187d008c71322689e590eb2ab5bd3b9cd4f29403ae452592206276f\",\"dweb:/ipfs/QmZfzS2DWNHSbVnVSWKuX5yLWqpx7KVwa5ADKmqXJZS2DQ\"]},\"07_10_Address.sol\":{\"keccak256\":\"0x2b03d8ad427815b31d98bcbd044c91e90927abdb593b417112761b36850cd115\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b421a1eafe5022e9367743a1a8daea22672f95176a339b2f76f6fd375c2cc93\",\"dweb:/ipfs/QmXQtm4Z8ZN9v46WxTphXq5wHHwB4FLoaP5swX9G7BmrrE\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"07_10_Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"07_10_Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"07_10_Address.sol\":{\"keccak256\":\"0x2b03d8ad427815b31d98bcbd044c91e90927abdb593b417112761b36850cd115\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b421a1eafe5022e9367743a1a8daea22672f95176a339b2f76f6fd375c2cc93\",\"dweb:/ipfs/QmXQtm4Z8ZN9v46WxTphXq5wHHwB4FLoaP5swX9G7BmrrE\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"08_10_Defii.sol":{"Defii":{"abi":[{"inputs":[{"internalType":"address","name":"incentiveVault_","type":"address"}],"name":"changeIncentiveVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exitAndWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getBalance","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"incentiveVaultBalance","type":"uint256"}],"internalType":"struct BalanceItem[]","name":"balances","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getBalanceAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"params","type":"bytes"}],"name":"harvestWithParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"hasAllocation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"incentiveVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner_","type":"address"},{"internalType":"address","name":"factory_","type":"address"},{"internalType":"address","name":"incentiveVault_","type":"address"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"runMultipleTx","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"runTx","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdrawERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"changeIncentiveVault(address)":{"params":{"incentiveVault_":"New incentive vault address"}},"getBalance(address[])":{"details":"Should marked as view in ABI","params":{"tokens":"Owner (for ACL and transfers out)"},"returns":{"balances":"Info about token balances"}},"harvestWithParams(bytes)":{"params":{"params":"Encoded params (use encodeParams function for it)"}},"init(address,address,address)":{"params":{"factory_":"For validation and info about executor","incentiveVault_":"Address, that collect all incentive tokens","owner_":"Owner (for ACL and transfers out)"}},"runMultipleTx(address[],uint256[],bytes[])":{"params":{"datas":"List of enocded function calls","targets":"List of address","values":"List of transactions value (e.g. 1 AVAX)"}},"runTx(address,uint256,bytes)":{"params":{"data":"Enocded function call","target":"Address","value":"Transaction value (e.g. 1 AVAX)"}},"withdrawERC20(address)":{"params":{"token":"ERC20 address"}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"incentiveVault_\",\"type\":\"address\"}],\"name\":\"changeIncentiveVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exitAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incentiveVaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct BalanceItem[]\",\"name\":\"balances\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getBalanceAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"harvestWithParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentiveVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"incentiveVault_\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"runMultipleTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"runTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeIncentiveVault(address)\":{\"params\":{\"incentiveVault_\":\"New incentive vault address\"}},\"getBalance(address[])\":{\"details\":\"Should marked as view in ABI\",\"params\":{\"tokens\":\"Owner (for ACL and transfers out)\"},\"returns\":{\"balances\":\"Info about token balances\"}},\"harvestWithParams(bytes)\":{\"params\":{\"params\":\"Encoded params (use encodeParams function for it)\"}},\"init(address,address,address)\":{\"params\":{\"factory_\":\"For validation and info about executor\",\"incentiveVault_\":\"Address, that collect all incentive tokens\",\"owner_\":\"Owner (for ACL and transfers out)\"}},\"runMultipleTx(address[],uint256[],bytes[])\":{\"params\":{\"datas\":\"List of enocded function calls\",\"targets\":\"List of address\",\"values\":\"List of transactions value (e.g. 1 AVAX)\"}},\"runTx(address,uint256,bytes)\":{\"params\":{\"data\":\"Enocded function call\",\"target\":\"Address\",\"value\":\"Transaction value (e.g. 1 AVAX)\"}},\"withdrawERC20(address)\":{\"params\":{\"token\":\"ERC20 address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeIncentiveVault(address)\":{\"notice\":\"Change address of incentive vault.\"},\"enter()\":{\"notice\":\"Enters to DEFI instrument. Could run only by owner.\"},\"exit()\":{\"notice\":\"Exit from DEFI instrument. Could run by owner or executor. Don't withdraw funds to owner account.\"},\"exitAndWithdraw()\":{\"notice\":\"Exit from DEFI instrument. Could run by owner or executor.\"},\"getBalance(address[])\":{\"notice\":\"Calculates balances of given tokens. Returns difference of token amount before exit and after exit.\"},\"getBalanceAndRevert(address[])\":{\"notice\":\"Use getBalance. This function always reverts.\"},\"harvest()\":{\"notice\":\"Claim rewards and withdraw to owner.\"},\"harvestWithParams(bytes)\":{\"notice\":\"Claim rewards, sell it and and withdraw to owner.\"},\"init(address,address,address)\":{\"notice\":\"Sets owner and factory addresses. Could run only once, called by factory.\"},\"runMultipleTx(address[],uint256[],bytes[])\":{\"notice\":\"Runs custom multiple transactions. Could run only by owner.\"},\"runTx(address,uint256,bytes)\":{\"notice\":\"Runs custom transaction. Could run only by owner.\"},\"withdrawERC20(address)\":{\"notice\":\"Withdraw ERC20 to owner\"},\"withdrawETH()\":{\"notice\":\"Withdraw native token to owner (e.g ETH, AVAX, ...)\"},\"withdrawFunds()\":{\"notice\":\"Withdraw funds to owner (some hardcoded assets, which uses in instrument).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"08_10_Defii.sol\":\"Defii\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"03_10_draft-IERC20Permit.sol\":{\"keccak256\":\"0x9afa8d4740d0c343672e6a02374c85c1e8e70cc01163cc919ac91d191abd05e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://460a9a351f18515ec191361d8221f3123e519121efc2228fbbfbcc54dad0ad0e\",\"dweb:/ipfs/QmaNRgWGV34XzFUisYvSfzkRqAntGsRb5F6sVV4hZ1LFbL\"]},\"04_10_IERC20Metadata.sol\":{\"keccak256\":\"0x5a1e722c2e931b2f463ea73fa8278567ee788418bb263743fdfd59b388870f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c938329ad20abd3de056ced1d7423458d86952c0bdec6a3a9b5d1a71cf22439\",\"dweb:/ipfs/QmcMELFAqVbHVrdST5ST8VGhriUZt32UhPT91NKFNDvLKh\"]},\"05_10_IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"06_10_SafeERC20.sol\":{\"keccak256\":\"0xdb5267f6c68abdfe2f1488076b8127ef193f82be2902f732edbf1bbd9414d220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86b02dc0e187d008c71322689e590eb2ab5bd3b9cd4f29403ae452592206276f\",\"dweb:/ipfs/QmZfzS2DWNHSbVnVSWKuX5yLWqpx7KVwa5ADKmqXJZS2DQ\"]},\"07_10_Address.sol\":{\"keccak256\":\"0x2b03d8ad427815b31d98bcbd044c91e90927abdb593b417112761b36850cd115\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b421a1eafe5022e9367743a1a8daea22672f95176a339b2f76f6fd375c2cc93\",\"dweb:/ipfs/QmXQtm4Z8ZN9v46WxTphXq5wHHwB4FLoaP5swX9G7BmrrE\"]},\"08_10_Defii.sol\":{\"keccak256\":\"0xa5b141c2994252e184b5dc1d92e3403d9922e0d94cb591f3db7bca78143d41e0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e23537cfee063f7e194358b32d918ee18d97ff9822487bc41dba5b60dc22fad6\",\"dweb:/ipfs/QmS2zxrzKVvbQygrB7R3Xp4dJNurKxitCGPZDLaHFJqZYx\"]},\"09_10_IDefii.sol\":{\"keccak256\":\"0x4e69d6def8c9d9be9862d0b72da7f428ba1f18fa1931aadb8ae5ce67024e33fe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b1b6a929440e90fc08bbbf3aa8e01b84f3925fdf4b54d50e1d1971365b2a11d9\",\"dweb:/ipfs/QmdosxbYCxuoCjA5tkVVCb4TCc9LnJRQeJzqF78aEyGn4n\"]},\"10_10_IDefiiFactory.sol\":{\"keccak256\":\"0x1f19f95316e0253b3b1af93eed335020c729634b7c0ac24bdf2bcf16c763416f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e7c25381dee4f324512d7eefc1a469664573406f68a1bfe1dd53241e69812d\",\"dweb:/ipfs/QmdJVYsubCLyrofj6VE1yks6SuU9dTMeWjBsMPF5hZsPTT\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"changeIncentiveVault(address)":{"notice":"Change address of incentive vault."},"enter()":{"notice":"Enters to DEFI instrument. Could run only by owner."},"exit()":{"notice":"Exit from DEFI instrument. Could run by owner or executor. Don't withdraw funds to owner account."},"exitAndWithdraw()":{"notice":"Exit from DEFI instrument. Could run by owner or executor."},"getBalance(address[])":{"notice":"Calculates balances of given tokens. Returns difference of token amount before exit and after exit."},"getBalanceAndRevert(address[])":{"notice":"Use getBalance. This function always reverts."},"harvest()":{"notice":"Claim rewards and withdraw to owner."},"harvestWithParams(bytes)":{"notice":"Claim rewards, sell it and and withdraw to owner."},"init(address,address,address)":{"notice":"Sets owner and factory addresses. Could run only once, called by factory."},"runMultipleTx(address[],uint256[],bytes[])":{"notice":"Runs custom multiple transactions. Could run only by owner."},"runTx(address,uint256,bytes)":{"notice":"Runs custom transaction. Could run only by owner."},"withdrawERC20(address)":{"notice":"Withdraw ERC20 to owner"},"withdrawETH()":{"notice":"Withdraw native token to owner (e.g ETH, AVAX, ...)"},"withdrawFunds()":{"notice":"Withdraw funds to owner (some hardcoded assets, which uses in instrument)."}},"version":1}}},"09_10_IDefii.sol":{"IDefii":{"abi":[{"inputs":[{"internalType":"address","name":"incentiveVault_","type":"address"}],"name":"changeIncentiveVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exitAndWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getBalance","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"incentiveVaultBalance","type":"uint256"}],"internalType":"struct BalanceItem[]","name":"balances","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"hasAllocation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"incentiveVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner_","type":"address"},{"internalType":"address","name":"factory_","type":"address"},{"internalType":"address","name":"incentiveVault_","type":"address"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"runMultipleTx","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"runTx","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdrawERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"incentiveVault_\",\"type\":\"address\"}],\"name\":\"changeIncentiveVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exitAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incentiveVaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct BalanceItem[]\",\"name\":\"balances\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentiveVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"incentiveVault_\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"runMultipleTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"runTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"09_10_IDefii.sol\":\"IDefii\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"05_10_IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"09_10_IDefii.sol\":{\"keccak256\":\"0x4e69d6def8c9d9be9862d0b72da7f428ba1f18fa1931aadb8ae5ce67024e33fe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b1b6a929440e90fc08bbbf3aa8e01b84f3925fdf4b54d50e1d1971365b2a11d9\",\"dweb:/ipfs/QmdosxbYCxuoCjA5tkVVCb4TCc9LnJRQeJzqF78aEyGn4n\"]},\"10_10_IDefiiFactory.sol\":{\"keccak256\":\"0x1f19f95316e0253b3b1af93eed335020c729634b7c0ac24bdf2bcf16c763416f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e7c25381dee4f324512d7eefc1a469664573406f68a1bfe1dd53241e69812d\",\"dweb:/ipfs/QmdJVYsubCLyrofj6VE1yks6SuU9dTMeWjBsMPF5hZsPTT\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"10_10_IDefiiFactory.sol":{"IDefiiFactory":{"abi":[{"inputs":[],"name":"createDefii","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"incentiveVault","type":"address"}],"name":"createDefiiFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executor","outputs":[{"internalType":"address","name":"executor","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllAllocations","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getAllBalances","outputs":[{"components":[{"internalType":"address","name":"wallet","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"incentiveVaultBalance","type":"uint256"}],"internalType":"struct BalanceItem[]","name":"balance","type":"tuple[]"}],"internalType":"struct Balance[]","name":"","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllDefiis","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllInfos","outputs":[{"components":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"address","name":"defii","type":"address"},{"internalType":"bool","name":"hasAllocation","type":"bool"},{"internalType":"address","name":"incentiveVault","type":"address"}],"internalType":"struct Info[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllWallets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getDefiiFor","outputs":[{"internalType":"address","name":"defii","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"createDefii\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"incentiveVault\",\"type\":\"address\"}],\"name\":\"createDefiiFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAllocations\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getAllBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incentiveVaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct BalanceItem[]\",\"name\":\"balance\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Balance[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDefiis\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defii\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"hasAllocation\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"incentiveVault\",\"type\":\"address\"}],\"internalType\":\"struct Info[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getDefiiFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"defii\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"10_10_IDefiiFactory.sol\":\"IDefiiFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":false,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_10_IDefiiFactory.sol\":{\"keccak256\":\"0x1f19f95316e0253b3b1af93eed335020c729634b7c0ac24bdf2bcf16c763416f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e7c25381dee4f324512d7eefc1a469664573406f68a1bfe1dd53241e69812d\",\"dweb:/ipfs/QmdJVYsubCLyrofj6VE1yks6SuU9dTMeWjBsMPF5hZsPTT\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}}},"errors":[{"component":"general","formattedMessage":"Exception during compilation: /solidity/libevmasm/Assembly.cpp(766): Throw in function const std::map<u256, u256> &solidity::evmasm::Assembly::optimiseInternal(const OptimiserSettings &, std::set<size_t>)\nDynamic exception type: boost::wrapexcept<solidity::evmasm::OptimizerException>\nstd::exception::what: Replacement already known.\n[solidity::util::tag_comment*] = Replacement already known.\n","message":"Exception during compilation: /solidity/libevmasm/Assembly.cpp(766): Throw in function const std::map<u256, u256> &solidity::evmasm::Assembly::optimiseInternal(const OptimiserSettings &, std::set<size_t>)\nDynamic exception type: boost::wrapexcept<solidity::evmasm::OptimizerException>\nstd::exception::what: Replacement already known.\n[solidity::util::tag_comment*] = Replacement already known.\n","severity":"error","type":"Exception"}],"sources":{"01_10_AaveV2EthereumUSDC.sol":{"id":0},"03_10_draft-IERC20Permit.sol":{"id":1},"04_10_IERC20Metadata.sol":{"id":2},"05_10_IERC20.sol":{"id":3},"06_10_SafeERC20.sol":{"id":4},"07_10_Address.sol":{"id":5},"08_10_Defii.sol":{"id":6},"09_10_IDefii.sol":{"id":7},"10_10_IDefiiFactory.sol":{"id":8}}}

> stderr:
