Traceback (most recent call last):
  File "/Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/batchCompile.py", line 161, in multi_process_directory
    compiled_sol = compile_contract(path, version, filename, copy.deepcopy(settings))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/batchCompile.py", line 115, in compile_contract
    compiled_sol = compile_standard(setting, allow_paths=path, solc_version=version)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/longfeichen/.env/compile_solidity/lib/python3.12/site-packages/solcx/main.py", line 369, in compile_standard
    raise SolcError(
solcx.exceptions.SolcError: YulException: Variable var_tokenId_1553 is 1 slot(s) too deep inside the stack. Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.


> command: `/Users/longfeichen/.solcx/solc-v0.8.19 --standard-json --allow-paths /Users/longfeichen/研究生/Web3MLM/testing/sol_batch_compile-main/contracts/0x4238b1dd1faa5ca566a410fa24e9fc6e09dcf32f`
> return code: `0`
> stdout:
{"contracts":{"10_27_IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"10_27_IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"11_27_MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"11_27_MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_27_MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"12_27_StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"12_27_StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"11_27_MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"12_27_StringsUpgradeable.sol\":{\"keccak256\":\"0x08980aed64586339c448de0a751c124569292bd4a99054596962b0ef7f175957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1463c5a7e838906cc9287536210ee9c3373b1f0f1fc129e8aef51ddd2a129f9d\",\"dweb:/ipfs/QmeA7MQPi4ukTrgJhdudNhQpCx2y8HcBXHBmYaT18qFKTP\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"13_27_NFTCollection.sol":{"NFTCollection":{"abi":[{"inputs":[{"internalType":"address","name":"_contractFactory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"addressReturned","type":"address"}],"name":"AddressLibrary_Proxy_Call_Did_Not_Return_A_Contract","type":"error"},{"inputs":[],"name":"ContractFactory_Factory_Is_Not_A_Contract","type":"error"},{"inputs":[{"internalType":"address","name":"contractFactory","type":"address"}],"name":"ContractFactory_Only_Callable_By_Factory_Contract","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxTokenId","type":"uint256"}],"name":"NFTCollection_Max_Token_Id_Has_Already_Been_Minted","type":"error"},{"inputs":[],"name":"NFTCollection_Token_CID_Already_Minted","type":"error"},{"inputs":[],"name":"NFTCollection_Token_CID_Required","type":"error"},{"inputs":[],"name":"NFTCollection_Token_Creator_Payment_Address_Required","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"SequentialMintCollection_Caller_Is_Not_Owner","type":"error"},{"inputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"name":"SequentialMintCollection_Minted_NFTs_Must_Be_Burned_First","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentMaxTokenId","type":"uint256"}],"name":"TokenLimitedCollection_Max_Token_Id_May_Not_Be_Cleared","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentMaxTokenId","type":"uint256"}],"name":"TokenLimitedCollection_Max_Token_Id_May_Not_Increase","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentMintedCount","type":"uint256"}],"name":"TokenLimitedCollection_Max_Token_Id_Must_Be_Greater_Than_Current_Minted_Count","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"baseURI","type":"string"}],"name":"BaseURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"maxTokenId","type":"uint256"}],"name":"MaxTokenIdUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"string","name":"indexedTokenCID","type":"string"},{"indexed":false,"internalType":"string","name":"tokenCID","type":"string"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"SelfDestruct","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"fromPaymentAddress","type":"address"},{"indexed":true,"internalType":"address","name":"toPaymentAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"TokenCreatorPaymentAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"contractFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getFeeBps","outputs":[{"internalType":"uint256[]","name":"royaltiesInBasisPoints","type":"uint256[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getFeeRecipients","outputs":[{"internalType":"address payable[]","name":"recipients","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tokenCID","type":"string"}],"name":"getHasMintedCID","outputs":[{"internalType":"bool","name":"hasBeenMinted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNFTCollectionType","outputs":[{"internalType":"string","name":"collectionType","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getRoyalties","outputs":[{"internalType":"address payable[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"royaltiesInBasisPoints","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenCreatorPaymentAddress","outputs":[{"internalType":"address payable","name":"creatorPaymentAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"_creator","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTokenId","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTokenId","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tokenCID","type":"string"}],"name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tokenCID","type":"string"},{"internalType":"address","name":"operator","type":"address"}],"name":"mintAndApprove","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tokenCID","type":"string"},{"internalType":"address payable","name":"tokenCreatorPaymentAddress","type":"address"}],"name":"mintWithCreatorPaymentAddress","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tokenCID","type":"string"},{"internalType":"address payable","name":"tokenCreatorPaymentAddress","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"mintWithCreatorPaymentAddressAndApprove","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tokenCID","type":"string"},{"internalType":"address","name":"paymentAddressFactory","type":"address"},{"internalType":"bytes","name":"paymentAddressCall","type":"bytes"}],"name":"mintWithCreatorPaymentFactory","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tokenCID","type":"string"},{"internalType":"address","name":"paymentAddressFactory","type":"address"},{"internalType":"bytes","name":"paymentAddressCall","type":"bytes"},{"internalType":"address","name":"operator","type":"address"}],"name":"mintWithCreatorPaymentFactoryAndApprove","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"selfDestruct","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"interfaceSupported","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenCreator","outputs":[{"internalType":"address payable","name":"creator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURIOverride","type":"string"}],"name":"updateBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_maxTokenId","type":"uint32"}],"name":"updateMaxTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"batu-inal & HardlyDifficult","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"BaseURIUpdated(string)":{"params":{"baseURI":"The new base URI to use."}},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"MaxTokenIdUpdated(uint256)":{"params":{"maxTokenId":"The new max tokenId. All NFTs in this collection will have a tokenId less than or equal to this value."}},"Minted(address,uint256,string,string)":{"params":{"creator":"The address of the collection owner at this time this NFT was minted.","indexedTokenCID":"The CID of the newly minted NFT, indexed to enable watching for mint events by the tokenCID.","tokenCID":"The actual CID of the newly minted NFT.","tokenId":"The tokenId of the newly minted NFT."}},"SelfDestruct(address)":{"params":{"admin":"The account which requested this contract be self destructed."}},"TokenCreatorPaymentAddressSet(address,address,uint256)":{"params":{"fromPaymentAddress":"The original address used for royalty payments.","toPaymentAddress":"The new address used for royalty payments.","tokenId":"The NFT which had the royalty payment address updated."}},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"baseURI()":{"details":"The `tokenCID` is appended to this to obtain an NFT's `tokenURI`.      e.g. The URI for a token with the `tokenCID`: \"foo\" and `baseURI`: \"ipfs://\" is \"ipfs://foo\".","returns":{"uri":"The base URI used by this collection."}},"burn(uint256)":{"details":"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."},"constructor":{"params":{"_contractFactory":"The factory which will be used to create collection contracts."}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"getFeeBps(uint256)":{"details":"The tokenId param is ignored since all NFTs return the same value.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"royaltiesInBasisPoints":"The array of fees to be sent to each recipient, in basis points."}},"getFeeRecipients(uint256)":{"details":"The expected royalty amounts are communicated with `getFeeBps`.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"recipients":"An array of addresses to which royalties should be sent."}},"getHasMintedCID(string)":{"params":{"tokenCID":"The CID to check for."},"returns":{"hasBeenMinted":"True if the creator has already minted an NFT with this CID."}},"getNFTCollectionType()":{"returns":{"collectionType":"The collection type."}},"getRoyalties(uint256)":{"details":"The data is the same as when calling `getFeeRecipients` and `getFeeBps` separately.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"recipients":"An array of addresses to which royalties should be sent.","royaltiesInBasisPoints":"The array of fees to be sent to each recipient, in basis points."}},"getTokenCreatorPaymentAddress(uint256)":{"params":{"tokenId":"The ID of the NFT to get the creator payment address for."},"returns":{"creatorPaymentAddress":"The address to which royalties should be paid."}},"initialize(address,string,string)":{"params":{"_creator":"The creator of this collection.","_name":"The collection's `name`.","_symbol":"The collection's `symbol`."}},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"mint(string)":{"details":"This is only callable by the collection creator/owner.","params":{"tokenCID":"The CID for the metadata json of the NFT to mint."},"returns":{"tokenId":"The tokenId of the newly minted NFT."}},"mintAndApprove(string,address)":{"details":"This is only callable by the collection creator/owner. It can be used the first time they mint to save having to issue a separate approval transaction before listing the NFT for sale.","params":{"operator":"The address to set as an approved operator for the creator's account.","tokenCID":"The CID for the metadata json of the NFT to mint."},"returns":{"tokenId":"The tokenId of the newly minted NFT."}},"mintWithCreatorPaymentAddress(string,address)":{"details":"This is only callable by the collection creator/owner.","params":{"tokenCID":"The CID for the metadata json of the NFT to mint.","tokenCreatorPaymentAddress":"The royalty recipient address to use for this NFT."},"returns":{"tokenId":"The tokenId of the newly minted NFT."}},"mintWithCreatorPaymentAddressAndApprove(string,address,address)":{"details":"This is only callable by the collection creator/owner. It can be used the first time they mint to save having to issue a separate approval transaction before listing the NFT for sale.","params":{"operator":"The address to set as an approved operator for the creator's account.","tokenCID":"The CID for the metadata json of the NFT to mint.","tokenCreatorPaymentAddress":"The royalty recipient address to use for this NFT."},"returns":{"tokenId":"The tokenId of the newly minted NFT."}},"mintWithCreatorPaymentFactory(string,address,bytes)":{"details":"This is only callable by the collection creator/owner.","params":{"paymentAddressCall":"The call details to send to the factory provided.","paymentAddressFactory":"The contract to call which will return the address to use for payments.","tokenCID":"The CID for the metadata json of the NFT to mint."},"returns":{"tokenId":"The tokenId of the newly minted NFT."}},"mintWithCreatorPaymentFactoryAndApprove(string,address,bytes,address)":{"details":"This is only callable by the collection creator/owner. It can be used the first time they mint to save having to issue a separate approval transaction before listing the NFT for sale.","params":{"operator":"The address to set as an approved operator for the creator's account.","paymentAddressCall":"The call details to send to the factory provided.","paymentAddressFactory":"The contract to call which will return the address to use for payments.","tokenCID":"The CID for the metadata json of the NFT to mint."},"returns":{"tokenId":"The tokenId of the newly minted NFT."}},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"royaltyInfo(uint256,uint256)":{"params":{"salePrice":"The total price of the sale.","tokenId":"The ID of the NFT to get royalties for."},"returns":{"receiver":"The address to which royalties should be sent.","royaltyAmount":"The total amount that should be sent to the `receiver`."}},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"selfDestruct()":{"details":"Once destructed, a new collection could be deployed to this address (although that's discouraged)."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenCreator(uint256)":{"details":"The tokenId param is ignored since all NFTs return the same value.","params":{"tokenId":"The ID of the NFT to get the creator payment address for."},"returns":{"creator":"The creator of this collection."}},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"totalSupply()":{"details":"From the ERC-721 enumerable standard.","returns":{"supply":"The total number of NFTs tracked by this contract."}},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"updateBaseURI(string)":{"params":{"baseURIOverride":"The new base URI to use for all NFTs in this collection."}},"updateMaxTokenId(uint32)":{"details":"Once this value has been set, it may be decreased but can never be increased. This max may be more than the final `totalSupply` if 1 or more tokens were burned.","params":{"_maxTokenId":"The max tokenId to set, all NFTs must have a tokenId less than or equal to this value."}}},"stateVariables":{"_tokenCIDs":{"details":"Stores a CID for each NFT."},"cidToMinted":{"details":"0 means not yet minted, set to 1 when minted. For why using uint is better than using bool here: github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.7.3/contracts/security/ReentrancyGuard.sol#L23-L27"},"tokenIdToCreatorPaymentAddress":{"details":"Stores an optional alternate address to receive creator revenue and royalty payments. The target address may be a contract which could split or escrow payments."}},"title":"A collection of 1:1 NFTs by a single creator.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressReturned\",\"type\":\"address\"}],\"name\":\"AddressLibrary_Proxy_Call_Did_Not_Return_A_Contract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractFactory_Factory_Is_Not_A_Contract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractFactory\",\"type\":\"address\"}],\"name\":\"ContractFactory_Only_Callable_By_Factory_Contract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTokenId\",\"type\":\"uint256\"}],\"name\":\"NFTCollection_Max_Token_Id_Has_Already_Been_Minted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTCollection_Token_CID_Already_Minted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTCollection_Token_CID_Required\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTCollection_Token_Creator_Payment_Address_Required\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SequentialMintCollection_Caller_Is_Not_Owner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"SequentialMintCollection_Minted_NFTs_Must_Be_Burned_First\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentMaxTokenId\",\"type\":\"uint256\"}],\"name\":\"TokenLimitedCollection_Max_Token_Id_May_Not_Be_Cleared\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentMaxTokenId\",\"type\":\"uint256\"}],\"name\":\"TokenLimitedCollection_Max_Token_Id_May_Not_Increase\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentMintedCount\",\"type\":\"uint256\"}],\"name\":\"TokenLimitedCollection_Max_Token_Id_Must_Be_Greater_Than_Current_Minted_Count\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maxTokenId\",\"type\":\"uint256\"}],\"name\":\"MaxTokenIdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"indexedTokenCID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenCID\",\"type\":\"string\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SelfDestruct\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromPaymentAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toPaymentAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenCreatorPaymentAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"royaltiesInBasisPoints\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenCID\",\"type\":\"string\"}],\"name\":\"getHasMintedCID\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasBeenMinted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNFTCollectionType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"collectionType\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyalties\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"royaltiesInBasisPoints\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenCreatorPaymentAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creatorPaymentAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTokenId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenCID\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenCID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"mintAndApprove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenCID\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"tokenCreatorPaymentAddress\",\"type\":\"address\"}],\"name\":\"mintWithCreatorPaymentAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenCID\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"tokenCreatorPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"mintWithCreatorPaymentAddressAndApprove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenCID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentAddressFactory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymentAddressCall\",\"type\":\"bytes\"}],\"name\":\"mintWithCreatorPaymentFactory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenCID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentAddressFactory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymentAddressCall\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"mintWithCreatorPaymentFactoryAndApprove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfDestruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"interfaceSupported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURIOverride\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_maxTokenId\",\"type\":\"uint32\"}],\"name\":\"updateMaxTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"batu-inal & HardlyDifficult\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BaseURIUpdated(string)\":{\"params\":{\"baseURI\":\"The new base URI to use.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MaxTokenIdUpdated(uint256)\":{\"params\":{\"maxTokenId\":\"The new max tokenId. All NFTs in this collection will have a tokenId less than or equal to this value.\"}},\"Minted(address,uint256,string,string)\":{\"params\":{\"creator\":\"The address of the collection owner at this time this NFT was minted.\",\"indexedTokenCID\":\"The CID of the newly minted NFT, indexed to enable watching for mint events by the tokenCID.\",\"tokenCID\":\"The actual CID of the newly minted NFT.\",\"tokenId\":\"The tokenId of the newly minted NFT.\"}},\"SelfDestruct(address)\":{\"params\":{\"admin\":\"The account which requested this contract be self destructed.\"}},\"TokenCreatorPaymentAddressSet(address,address,uint256)\":{\"params\":{\"fromPaymentAddress\":\"The original address used for royalty payments.\",\"toPaymentAddress\":\"The new address used for royalty payments.\",\"tokenId\":\"The NFT which had the royalty payment address updated.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"The `tokenCID` is appended to this to obtain an NFT's `tokenURI`.      e.g. The URI for a token with the `tokenCID`: \\\"foo\\\" and `baseURI`: \\\"ipfs://\\\" is \\\"ipfs://foo\\\".\",\"returns\":{\"uri\":\"The base URI used by this collection.\"}},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"constructor\":{\"params\":{\"_contractFactory\":\"The factory which will be used to create collection contracts.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getFeeBps(uint256)\":{\"details\":\"The tokenId param is ignored since all NFTs return the same value.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"royaltiesInBasisPoints\":\"The array of fees to be sent to each recipient, in basis points.\"}},\"getFeeRecipients(uint256)\":{\"details\":\"The expected royalty amounts are communicated with `getFeeBps`.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"recipients\":\"An array of addresses to which royalties should be sent.\"}},\"getHasMintedCID(string)\":{\"params\":{\"tokenCID\":\"The CID to check for.\"},\"returns\":{\"hasBeenMinted\":\"True if the creator has already minted an NFT with this CID.\"}},\"getNFTCollectionType()\":{\"returns\":{\"collectionType\":\"The collection type.\"}},\"getRoyalties(uint256)\":{\"details\":\"The data is the same as when calling `getFeeRecipients` and `getFeeBps` separately.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"recipients\":\"An array of addresses to which royalties should be sent.\",\"royaltiesInBasisPoints\":\"The array of fees to be sent to each recipient, in basis points.\"}},\"getTokenCreatorPaymentAddress(uint256)\":{\"params\":{\"tokenId\":\"The ID of the NFT to get the creator payment address for.\"},\"returns\":{\"creatorPaymentAddress\":\"The address to which royalties should be paid.\"}},\"initialize(address,string,string)\":{\"params\":{\"_creator\":\"The creator of this collection.\",\"_name\":\"The collection's `name`.\",\"_symbol\":\"The collection's `symbol`.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(string)\":{\"details\":\"This is only callable by the collection creator/owner.\",\"params\":{\"tokenCID\":\"The CID for the metadata json of the NFT to mint.\"},\"returns\":{\"tokenId\":\"The tokenId of the newly minted NFT.\"}},\"mintAndApprove(string,address)\":{\"details\":\"This is only callable by the collection creator/owner. It can be used the first time they mint to save having to issue a separate approval transaction before listing the NFT for sale.\",\"params\":{\"operator\":\"The address to set as an approved operator for the creator's account.\",\"tokenCID\":\"The CID for the metadata json of the NFT to mint.\"},\"returns\":{\"tokenId\":\"The tokenId of the newly minted NFT.\"}},\"mintWithCreatorPaymentAddress(string,address)\":{\"details\":\"This is only callable by the collection creator/owner.\",\"params\":{\"tokenCID\":\"The CID for the metadata json of the NFT to mint.\",\"tokenCreatorPaymentAddress\":\"The royalty recipient address to use for this NFT.\"},\"returns\":{\"tokenId\":\"The tokenId of the newly minted NFT.\"}},\"mintWithCreatorPaymentAddressAndApprove(string,address,address)\":{\"details\":\"This is only callable by the collection creator/owner. It can be used the first time they mint to save having to issue a separate approval transaction before listing the NFT for sale.\",\"params\":{\"operator\":\"The address to set as an approved operator for the creator's account.\",\"tokenCID\":\"The CID for the metadata json of the NFT to mint.\",\"tokenCreatorPaymentAddress\":\"The royalty recipient address to use for this NFT.\"},\"returns\":{\"tokenId\":\"The tokenId of the newly minted NFT.\"}},\"mintWithCreatorPaymentFactory(string,address,bytes)\":{\"details\":\"This is only callable by the collection creator/owner.\",\"params\":{\"paymentAddressCall\":\"The call details to send to the factory provided.\",\"paymentAddressFactory\":\"The contract to call which will return the address to use for payments.\",\"tokenCID\":\"The CID for the metadata json of the NFT to mint.\"},\"returns\":{\"tokenId\":\"The tokenId of the newly minted NFT.\"}},\"mintWithCreatorPaymentFactoryAndApprove(string,address,bytes,address)\":{\"details\":\"This is only callable by the collection creator/owner. It can be used the first time they mint to save having to issue a separate approval transaction before listing the NFT for sale.\",\"params\":{\"operator\":\"The address to set as an approved operator for the creator's account.\",\"paymentAddressCall\":\"The call details to send to the factory provided.\",\"paymentAddressFactory\":\"The contract to call which will return the address to use for payments.\",\"tokenCID\":\"The CID for the metadata json of the NFT to mint.\"},\"returns\":{\"tokenId\":\"The tokenId of the newly minted NFT.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"salePrice\":\"The total price of the sale.\",\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"receiver\":\"The address to which royalties should be sent.\",\"royaltyAmount\":\"The total amount that should be sent to the `receiver`.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"selfDestruct()\":{\"details\":\"Once destructed, a new collection could be deployed to this address (although that's discouraged).\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenCreator(uint256)\":{\"details\":\"The tokenId param is ignored since all NFTs return the same value.\",\"params\":{\"tokenId\":\"The ID of the NFT to get the creator payment address for.\"},\"returns\":{\"creator\":\"The creator of this collection.\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"From the ERC-721 enumerable standard.\",\"returns\":{\"supply\":\"The total number of NFTs tracked by this contract.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"updateBaseURI(string)\":{\"params\":{\"baseURIOverride\":\"The new base URI to use for all NFTs in this collection.\"}},\"updateMaxTokenId(uint32)\":{\"details\":\"Once this value has been set, it may be decreased but can never be increased. This max may be more than the final `totalSupply` if 1 or more tokens were burned.\",\"params\":{\"_maxTokenId\":\"The max tokenId to set, all NFTs must have a tokenId less than or equal to this value.\"}}},\"stateVariables\":{\"_tokenCIDs\":{\"details\":\"Stores a CID for each NFT.\"},\"cidToMinted\":{\"details\":\"0 means not yet minted, set to 1 when minted. For why using uint is better than using bool here: github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.7.3/contracts/security/ReentrancyGuard.sol#L23-L27\"},\"tokenIdToCreatorPaymentAddress\":{\"details\":\"Stores an optional alternate address to receive creator revenue and royalty payments. The target address may be a contract which could split or escrow payments.\"}},\"title\":\"A collection of 1:1 NFTs by a single creator.\",\"version\":1},\"userdoc\":{\"events\":{\"BaseURIUpdated(string)\":{\"notice\":\"Emitted when the owner changes the base URI to be used for NFTs in this collection.\"},\"MaxTokenIdUpdated(uint256)\":{\"notice\":\"Emitted when the max tokenId supported by this collection is updated.\"},\"Minted(address,uint256,string,string)\":{\"notice\":\"Emitted when a new NFT is minted.\"},\"SelfDestruct(address)\":{\"notice\":\"Emitted when this collection is self destructed by the creator/owner/admin.\"},\"TokenCreatorPaymentAddressSet(address,address,uint256)\":{\"notice\":\"Emitted when the payment address for creator royalties is set.\"}},\"kind\":\"user\",\"methods\":{\"baseURI()\":{\"notice\":\"The base URI used for all NFTs in this collection.\"},\"constructor\":{\"notice\":\"Initialize the template's immutable variables.\"},\"contractFactory()\":{\"notice\":\"The address of the factory which was used to create this contract.\"},\"getFeeBps(uint256)\":{\"notice\":\"Get the creator royalty amounts to be sent to each recipient, in basis points.\"},\"getFeeRecipients(uint256)\":{\"notice\":\"Get the recipient addresses to which creator royalties should be sent.\"},\"getHasMintedCID(string)\":{\"notice\":\"Checks if the creator has already minted a given NFT using this collection contract.\"},\"getNFTCollectionType()\":{\"notice\":\"Returns a name of the type of collection this contract represents.\"},\"getRoyalties(uint256)\":{\"notice\":\"Get the creator royalties to be sent.\"},\"getTokenCreatorPaymentAddress(uint256)\":{\"notice\":\"The address to pay the creator proceeds/royalties for the collection.\"},\"initialize(address,string,string)\":{\"notice\":\"Called by the contract factory on creation.\"},\"latestTokenId()\":{\"notice\":\"The tokenId of the most recently created NFT.\"},\"maxTokenId()\":{\"notice\":\"The max tokenId which can be minted.\"},\"mint(string)\":{\"notice\":\"Mint an NFT defined by its metadata path.\"},\"mintAndApprove(string,address)\":{\"notice\":\"Mint an NFT defined by its metadata path and approves the provided operator address.\"},\"mintWithCreatorPaymentAddress(string,address)\":{\"notice\":\"Mint an NFT defined by its metadata path and have creator revenue/royalties sent to an alternate address.\"},\"mintWithCreatorPaymentAddressAndApprove(string,address,address)\":{\"notice\":\"Mint an NFT defined by its metadata path and approves the provided operator address.\"},\"mintWithCreatorPaymentFactory(string,address,bytes)\":{\"notice\":\"Mint an NFT defined by its metadata path and have creator revenue/royalties sent to an alternate address which is defined by a contract call, typically a proxy contract address representing the payment terms.\"},\"mintWithCreatorPaymentFactoryAndApprove(string,address,bytes,address)\":{\"notice\":\"Mint an NFT defined by its metadata path and have creator revenue/royalties sent to an alternate address which is defined by a contract call, typically a proxy contract address representing the payment terms.\"},\"owner()\":{\"notice\":\"The creator/owner of this NFT collection.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"Get the creator royalties to be sent.\"},\"selfDestruct()\":{\"notice\":\"Allows the collection creator to destroy this contract only if no NFTs have been minted yet or the minted NFTs have been burned.\"},\"tokenCreator(uint256)\":{\"notice\":\"Returns the creator of this NFT collection.\"},\"totalSupply()\":{\"notice\":\"Returns the total amount of tokens stored by the contract.\"},\"updateBaseURI(string)\":{\"notice\":\"Allows the owner to assign a baseURI to use for the tokenURI instead of the default `ipfs://`.\"},\"updateMaxTokenId(uint32)\":{\"notice\":\"Allows the owner to set a max tokenID. This provides a guarantee to collectors about the limit of this collection contract, if applicable.\"}},\"notice\":\"A 10% royalty to the creator is included which may be split with collaborators on a per-NFT basis.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"13_27_NFTCollection.sol\":\"NFTCollection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"11_27_MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"12_27_StringsUpgradeable.sol\":{\"keccak256\":\"0x08980aed64586339c448de0a751c124569292bd4a99054596962b0ef7f175957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1463c5a7e838906cc9287536210ee9c3373b1f0f1fc129e8aef51ddd2a129f9d\",\"dweb:/ipfs/QmeA7MQPi4ukTrgJhdudNhQpCx2y8HcBXHBmYaT18qFKTP\"]},\"13_27_NFTCollection.sol\":{\"keccak256\":\"0x75cb5e6ab5bbdc299777f05c93c28f53c823774c2c3a465c066fac24d5aedfb5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://97d6dc0727e6e92ccf892ea008f1debe46ec8fb8ec2bde245e02d88e89b3fb4c\",\"dweb:/ipfs/QmU1QkejrTqVBCJqhxzBZ8tboaLFGJMkm1vueykdamwoiV\"]},\"14_27_INFTCollectionInitializer.sol\":{\"keccak256\":\"0xf6aa75f6733d79669673af9ac931a9ab7981cfabc76f5f885ee495f32efd9744\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://2bc82082de2101d33d861b500df1aa9db870d374831251cb0e4d81127c9f9366\",\"dweb:/ipfs/Qma2MEf56iKFK7NG3FN2DKCbGhf3XnWZu2fuyBrg65HQPa\"]},\"15_27_INFTCollectionType.sol\":{\"keccak256\":\"0xac3578b33964376f5be07149bb7063eaac646968ee37900c2c184fe86a1fd169\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a515cecd245e6605ae6bfdea40c621510fee60f44b2bb2b4d09562c1cb61dcff\",\"dweb:/ipfs/Qmc3HjzSAqrcrWB9H7wnKDzhTLtgV6FvciFY6EbykahyTj\"]},\"16_27_IGetFees.sol\":{\"keccak256\":\"0xe252ed1d0f53f0fddf4f9f3bb45f1e73dde07960392025575ba4febaa985144a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c60c502dac828b84b879bbb8ae7a18efc2126d34ae90e70530bf60c4c0efac28\",\"dweb:/ipfs/Qmd2K7CmPG3kQ746uhx1zhCkEfvkwmeX2G1Lq99JL2u11i\"]},\"17_27_IGetRoyalties.sol\":{\"keccak256\":\"0x32025445913a31adc1f77c0cc85756bf49d6b2a86075bad598c0b4772cd7615b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://23fc8a9f2c52268e3f4fd5be0b754eb8c9a9a3fe51803ccf2a967cb7f97b02ed\",\"dweb:/ipfs/QmQo8rjQJXRAZP4ApcaEGeLfQsDcCnhbpoGb7bsopbJLEG\"]},\"18_27_IRoyaltyInfo.sol\":{\"keccak256\":\"0xa86ae0b52989e1b6621fcc21139849aa60ea312ac9eb0ca8d80694b96a7e8b79\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://73431250774f45d110a2b5437790f76d8b519e375502e2e5ed6e7dd22d2f1fba\",\"dweb:/ipfs/QmNRTtr92aocSpbSgshZuMp5j9XF3j3ttHxz8mG55GJr1N\"]},\"19_27_ITokenCreator.sol\":{\"keccak256\":\"0xc145719b53bab6315b999f0e282771d85b6d4442ecd185e7cd89c723705fe2c6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e62d5fe456029730d80c87ac5984e75d8cceb8715269ec48662b8adad3564b2a\",\"dweb:/ipfs/QmW1d7Z1Chfk6NUZJwocapz4Svx5GVnA4ZHceBWjUkv8Gp\"]},\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"20_27_AddressLibrary.sol\":{\"keccak256\":\"0x3ab4d4e74d82ce48afede2438499842fe76f48d8f47f1c222be23875f658b18f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://fa0d5503b22a7ddb4f32e8d1eaa27e13bf63628de2741cfc180d3b6dcff4d53f\",\"dweb:/ipfs/QmVcxmHt8CbtQqoHtUXBRzubHrZfA56qrukXVxREJV5BP7\"]},\"21_27_ShortStrings.sol\":{\"keccak256\":\"0x873fb083aa7ea09923fc0b8ef7a28c3fb04b78a0ce7a4a723ab90ce0b5c1f869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4f6715514db80973b70e47724e4217e893691c3c14e147544002f265ab7ace2\",\"dweb:/ipfs/Qmb6rbdh3DqgJkYwkToUMQgJD2UhS3MF3T2r38HyrDd8Ni\"]},\"22_27_CollectionRoyalties.sol\":{\"keccak256\":\"0xb849c9cce580bf665081851cf5ca085e202924806011b1af8f55becd5ec8221d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0118baf245ca3169b256ce9003aeace3bda5df2c22ac45fb1b957fd08c4c9a96\",\"dweb:/ipfs/QmT43nsWyiCM5uoiPTSuTr9FnWTmsu2b7yYt1yjX6pd1D4\"]},\"23_27_NFTCollectionType.sol\":{\"keccak256\":\"0x5e256159517e9ef8e922249305d60a548d75e3ce74ff83898042f6320fdcb922\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://80e258788ffee77138df09e8b84290ec847b23cdc73b135e38c0838f7f4e9344\",\"dweb:/ipfs/QmRpAy2RV7NnfabjRmvSLKamvecLmkMEQC8vMWPqARrxgd\"]},\"24_27_SequentialMintCollection.sol\":{\"keccak256\":\"0x9578a24e759498e38eabc54450ac9e9fbbfa66f5cfba01775180ace05d6f64d3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4e7bcd87393f2a6c02e86589b9b17c5a10e07ba86a4f4f8c856d721b1d702858\",\"dweb:/ipfs/QmPogjDMg7QkuQTcL4Tr9ZupCQXnfQALEBSL9MG6HZcMGx\"]},\"25_27_TokenLimitedCollection.sol\":{\"keccak256\":\"0xa0a47235d751590f52745b6b3ed8b32b3c22878057f0370e44a56d7f0ccd74ea\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ca53f83bc5a0ef18731560c1e773561893c4e74ce0565a5c477dac7371895efe\",\"dweb:/ipfs/QmUN5Dd8UqVoBixP4dCcpbbLRaz61wyqmNdPMqfouyVmRv\"]},\"26_27_Constants.sol\":{\"keccak256\":\"0xe43b680871c2078c144708af210a22ef0501782496c154f90ecdc13f45921111\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4dca6d563810427aa3c781130100affbec8a8f357d83de7037c83d86295593b6\",\"dweb:/ipfs/Qmcm32pQhmctDDA1zhPPHWK6D5zaN54BuAEMLXKNJaYvpD\"]},\"27_27_ContractFactory.sol\":{\"keccak256\":\"0xb1b8a259e093f6de0a3bbd32bf270579ad550cf2dd0b880b195e076474540622\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d66203e404f171fa7f2de0efb18deb964514236f03b5804c4f99b6454dd9fd8d\",\"dweb:/ipfs/QmbywXNRFpa4oBzvXzz9TCuVogcv9ikfmcKumsyV8Pqwkp\"]},\"2_27_ERC721Upgradeable.sol\":{\"keccak256\":\"0x8b618584f7ff650eb88f3d5540a40d1f43c6cc240a5c30aa1b5178bdea68f363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31a4c56eefdb0f4b93301c533c101cec47cf3db5dc17dcbc4904bd68aa7e01fe\",\"dweb:/ipfs/QmSxeFUGB3apn3sgCnJTYwZrCDaCgpav2n1gttDeUBzaLj\"]},\"3_27_ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x24ad6ae4ad8bdf3acc97528be5d04592b62c3ce18b2690a575e3498869c75b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597f44a7aca487b49de4a3bcef6c1a0730eb8ab900c5c55fbae609577e1f935a\",\"dweb:/ipfs/Qma1PPAq4hP4KHXGvsEVZ6sq5rtHZjRysN9ZToEKG4QZaj\"]},\"4_27_IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0xd04890fa27259b0f6dfdff82478080756424f7cbc9c713e5712dd50a24d18505\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e0a61ea5a6421dce7ef5b89d0718c8baf6d3eb1e0ac8bdc23a04e909e2c0837\",\"dweb:/ipfs/QmQzcqXhwpz8dEUcECPSqFHGvd5fX774xFf69QjbZ6aEnK\"]},\"5_27_IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"6_27_IERC721Upgradeable.sol\":{\"keccak256\":\"0x88a5c51d6b7f90ba273c22b417eded556338ae50f2fb9e9b1b015ff6164333b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3873f792ee33bc77a8d09a7b954e9e269d3020663a16cfceb1507c92b7cbcafc\",\"dweb:/ipfs/QmNwwCeQqgQWnGmhSG7RvsPLCx4ts4U78V2aJGz3aRWca3\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"8_27_ContextUpgradeable.sol\":{\"keccak256\":\"0xfe0fc3a6f1628111596ea9ec32087023faa90cf0614333e19e2322ee6e7fa7cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b27017b67c32842b44bf5b19e3f0c8db1f09f5b8c11f0a004205b4e0f02576cd\",\"dweb:/ipfs/QmZHFak6f8ERMy8DawXcU7UiDognGGoCQfVqdkbfrWKwJn\"]},\"9_27_ERC165Upgradeable.sol\":{\"keccak256\":\"0xefde73c09f26143fc362395387a45d426dbcd5dc29969fdab3be45558281b94b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb1e73de14391ecb2973ce066e53d719775e44be8d6b812f3a301114f3289af\",\"dweb:/ipfs/QmZRBxvGHLtLFe31PkA4nvhqXbnaBZZ5WuYVDgrRbFYw4Y\"]}},\"version\":1}","userdoc":{"events":{"BaseURIUpdated(string)":{"notice":"Emitted when the owner changes the base URI to be used for NFTs in this collection."},"MaxTokenIdUpdated(uint256)":{"notice":"Emitted when the max tokenId supported by this collection is updated."},"Minted(address,uint256,string,string)":{"notice":"Emitted when a new NFT is minted."},"SelfDestruct(address)":{"notice":"Emitted when this collection is self destructed by the creator/owner/admin."},"TokenCreatorPaymentAddressSet(address,address,uint256)":{"notice":"Emitted when the payment address for creator royalties is set."}},"kind":"user","methods":{"baseURI()":{"notice":"The base URI used for all NFTs in this collection."},"constructor":{"notice":"Initialize the template's immutable variables."},"contractFactory()":{"notice":"The address of the factory which was used to create this contract."},"getFeeBps(uint256)":{"notice":"Get the creator royalty amounts to be sent to each recipient, in basis points."},"getFeeRecipients(uint256)":{"notice":"Get the recipient addresses to which creator royalties should be sent."},"getHasMintedCID(string)":{"notice":"Checks if the creator has already minted a given NFT using this collection contract."},"getNFTCollectionType()":{"notice":"Returns a name of the type of collection this contract represents."},"getRoyalties(uint256)":{"notice":"Get the creator royalties to be sent."},"getTokenCreatorPaymentAddress(uint256)":{"notice":"The address to pay the creator proceeds/royalties for the collection."},"initialize(address,string,string)":{"notice":"Called by the contract factory on creation."},"latestTokenId()":{"notice":"The tokenId of the most recently created NFT."},"maxTokenId()":{"notice":"The max tokenId which can be minted."},"mint(string)":{"notice":"Mint an NFT defined by its metadata path."},"mintAndApprove(string,address)":{"notice":"Mint an NFT defined by its metadata path and approves the provided operator address."},"mintWithCreatorPaymentAddress(string,address)":{"notice":"Mint an NFT defined by its metadata path and have creator revenue/royalties sent to an alternate address."},"mintWithCreatorPaymentAddressAndApprove(string,address,address)":{"notice":"Mint an NFT defined by its metadata path and approves the provided operator address."},"mintWithCreatorPaymentFactory(string,address,bytes)":{"notice":"Mint an NFT defined by its metadata path and have creator revenue/royalties sent to an alternate address which is defined by a contract call, typically a proxy contract address representing the payment terms."},"mintWithCreatorPaymentFactoryAndApprove(string,address,bytes,address)":{"notice":"Mint an NFT defined by its metadata path and have creator revenue/royalties sent to an alternate address which is defined by a contract call, typically a proxy contract address representing the payment terms."},"owner()":{"notice":"The creator/owner of this NFT collection."},"royaltyInfo(uint256,uint256)":{"notice":"Get the creator royalties to be sent."},"selfDestruct()":{"notice":"Allows the collection creator to destroy this contract only if no NFTs have been minted yet or the minted NFTs have been burned."},"tokenCreator(uint256)":{"notice":"Returns the creator of this NFT collection."},"totalSupply()":{"notice":"Returns the total amount of tokens stored by the contract."},"updateBaseURI(string)":{"notice":"Allows the owner to assign a baseURI to use for the tokenURI instead of the default `ipfs://`."},"updateMaxTokenId(uint32)":{"notice":"Allows the owner to set a max tokenID. This provides a guarantee to collectors about the limit of this collection contract, if applicable."}},"notice":"A 10% royalty to the creator is included which may be split with collaborators on a per-NFT basis.","version":1}}},"14_27_INFTCollectionInitializer.sol":{"INFTCollectionInitializer":{"abi":[{"inputs":[{"internalType":"address payable","name":"_creator","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"batu-inal & HardlyDifficult","kind":"dev","methods":{},"title":"Declares the interface for initializing an NFTCollection contract.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"batu-inal & HardlyDifficult\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Declares the interface for initializing an NFTCollection contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"14_27_INFTCollectionInitializer.sol\":\"INFTCollectionInitializer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"14_27_INFTCollectionInitializer.sol\":{\"keccak256\":\"0xf6aa75f6733d79669673af9ac931a9ab7981cfabc76f5f885ee495f32efd9744\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://2bc82082de2101d33d861b500df1aa9db870d374831251cb0e4d81127c9f9366\",\"dweb:/ipfs/Qma2MEf56iKFK7NG3FN2DKCbGhf3XnWZu2fuyBrg65HQPa\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"15_27_INFTCollectionType.sol":{"INFTCollectionType":{"abi":[{"inputs":[],"name":"getNFTCollectionType","outputs":[{"internalType":"string","name":"collectionType","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"reggieag","details":"This interface is declared as an ERC-165 interface.","kind":"dev","methods":{},"title":"Declares the type of the collection contract.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getNFTCollectionType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"collectionType\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"reggieag\",\"details\":\"This interface is declared as an ERC-165 interface.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Declares the type of the collection contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"15_27_INFTCollectionType.sol\":\"INFTCollectionType\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"15_27_INFTCollectionType.sol\":{\"keccak256\":\"0xac3578b33964376f5be07149bb7063eaac646968ee37900c2c184fe86a1fd169\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a515cecd245e6605ae6bfdea40c621510fee60f44b2bb2b4d09562c1cb61dcff\",\"dweb:/ipfs/Qmc3HjzSAqrcrWB9H7wnKDzhTLtgV6FvciFY6EbykahyTj\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"16_27_IGetFees.sol":{"IGetFees":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getFeeBps","outputs":[{"internalType":"uint256[]","name":"royaltiesInBasisPoints","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getFeeRecipients","outputs":[{"internalType":"address payable[]","name":"recipients","type":"address[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Originally implemented in mainnet contract 0x44d6e8933f8271abcf253c72f9ed7e0e4c0323b3","kind":"dev","methods":{"getFeeBps(uint256)":{"details":"The expected recipients are communicated with `getFeeRecipients`.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"royaltiesInBasisPoints":"The array of fees to be sent to each recipient, in basis points."}},"getFeeRecipients(uint256)":{"details":"The expected royalty amounts are communicated with `getFeeBps`.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"recipients":"An array of addresses to which royalties should be sent."}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"royaltiesInBasisPoints\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Originally implemented in mainnet contract 0x44d6e8933f8271abcf253c72f9ed7e0e4c0323b3\",\"kind\":\"dev\",\"methods\":{\"getFeeBps(uint256)\":{\"details\":\"The expected recipients are communicated with `getFeeRecipients`.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"royaltiesInBasisPoints\":\"The array of fees to be sent to each recipient, in basis points.\"}},\"getFeeRecipients(uint256)\":{\"details\":\"The expected royalty amounts are communicated with `getFeeBps`.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"recipients\":\"An array of addresses to which royalties should be sent.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFeeBps(uint256)\":{\"notice\":\"Get the creator royalty amounts to be sent to each recipient, in basis points.\"},\"getFeeRecipients(uint256)\":{\"notice\":\"Get the recipient addresses to which creator royalties should be sent.\"}},\"notice\":\"An interface for communicating fees to 3rd party marketplaces.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"16_27_IGetFees.sol\":\"IGetFees\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"16_27_IGetFees.sol\":{\"keccak256\":\"0xe252ed1d0f53f0fddf4f9f3bb45f1e73dde07960392025575ba4febaa985144a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c60c502dac828b84b879bbb8ae7a18efc2126d34ae90e70530bf60c4c0efac28\",\"dweb:/ipfs/Qmd2K7CmPG3kQ746uhx1zhCkEfvkwmeX2G1Lq99JL2u11i\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"getFeeBps(uint256)":{"notice":"Get the creator royalty amounts to be sent to each recipient, in basis points."},"getFeeRecipients(uint256)":{"notice":"Get the recipient addresses to which creator royalties should be sent."}},"notice":"An interface for communicating fees to 3rd party marketplaces.","version":1}}},"17_27_IGetRoyalties.sol":{"IGetRoyalties":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getRoyalties","outputs":[{"internalType":"address payable[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"royaltiesInBasisPoints","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getRoyalties(uint256)":{"details":"The data is the same as when calling `getFeeRecipients` and `getFeeBps` separately.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"recipients":"An array of addresses to which royalties should be sent.","royaltiesInBasisPoints":"The array of fees to be sent to each recipient, in basis points."}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyalties\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"royaltiesInBasisPoints\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoyalties(uint256)\":{\"details\":\"The data is the same as when calling `getFeeRecipients` and `getFeeBps` separately.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"recipients\":\"An array of addresses to which royalties should be sent.\",\"royaltiesInBasisPoints\":\"The array of fees to be sent to each recipient, in basis points.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoyalties(uint256)\":{\"notice\":\"Get the creator royalties to be sent.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"17_27_IGetRoyalties.sol\":\"IGetRoyalties\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"17_27_IGetRoyalties.sol\":{\"keccak256\":\"0x32025445913a31adc1f77c0cc85756bf49d6b2a86075bad598c0b4772cd7615b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://23fc8a9f2c52268e3f4fd5be0b754eb8c9a9a3fe51803ccf2a967cb7f97b02ed\",\"dweb:/ipfs/QmQo8rjQJXRAZP4ApcaEGeLfQsDcCnhbpoGb7bsopbJLEG\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"getRoyalties(uint256)":{"notice":"Get the creator royalties to be sent."}},"version":1}}},"18_27_IRoyaltyInfo.sol":{"IRoyaltyInfo":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"royaltyInfo(uint256,uint256)":{"params":{"salePrice":"The total price of the sale.","tokenId":"The ID of the NFT to get royalties for."},"returns":{"receiver":"The address to which royalties should be sent.","royaltyAmount":"The total amount that should be sent to the `receiver`."}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"params\":{\"salePrice\":\"The total price of the sale.\",\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"receiver\":\"The address to which royalties should be sent.\",\"royaltyAmount\":\"The total amount that should be sent to the `receiver`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"notice\":\"Get the creator royalties to be sent.\"}},\"notice\":\"Interface for EIP-2981: NFT Royalty Standard. For more see: https://eips.ethereum.org/EIPS/eip-2981.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"18_27_IRoyaltyInfo.sol\":\"IRoyaltyInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"18_27_IRoyaltyInfo.sol\":{\"keccak256\":\"0xa86ae0b52989e1b6621fcc21139849aa60ea312ac9eb0ca8d80694b96a7e8b79\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://73431250774f45d110a2b5437790f76d8b519e375502e2e5ed6e7dd22d2f1fba\",\"dweb:/ipfs/QmNRTtr92aocSpbSgshZuMp5j9XF3j3ttHxz8mG55GJr1N\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"royaltyInfo(uint256,uint256)":{"notice":"Get the creator royalties to be sent."}},"notice":"Interface for EIP-2981: NFT Royalty Standard. For more see: https://eips.ethereum.org/EIPS/eip-2981.","version":1}}},"19_27_ITokenCreator.sol":{"ITokenCreator":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenCreator","outputs":[{"internalType":"address payable","name":"creator","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"tokenCreator(uint256)":{"params":{"tokenId":"The ID of the NFT to get the creator payment address for."},"returns":{"creator":"The creator of this collection."}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokenCreator(uint256)\":{\"params\":{\"tokenId\":\"The ID of the NFT to get the creator payment address for.\"},\"returns\":{\"creator\":\"The creator of this collection.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"tokenCreator(uint256)\":{\"notice\":\"Returns the creator of this NFT collection.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"19_27_ITokenCreator.sol\":\"ITokenCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"19_27_ITokenCreator.sol\":{\"keccak256\":\"0xc145719b53bab6315b999f0e282771d85b6d4442ecd185e7cd89c723705fe2c6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e62d5fe456029730d80c87ac5984e75d8cceb8715269ec48662b8adad3564b2a\",\"dweb:/ipfs/QmW1d7Z1Chfk6NUZJwocapz4Svx5GVnA4ZHceBWjUkv8Gp\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"tokenCreator(uint256)":{"notice":"Returns the creator of this NFT collection."}},"version":1}}},"1_27_Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1_27_Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"20_27_AddressLibrary.sol":{"AddressLibrary":{"abi":[],"devdoc":{"author":"batu-inal & HardlyDifficult","kind":"dev","methods":{},"title":"A library for address helpers not already covered by the OZ library.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"batu-inal & HardlyDifficult\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A library for address helpers not already covered by the OZ library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"20_27_AddressLibrary.sol\":\"AddressLibrary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"20_27_AddressLibrary.sol\":{\"keccak256\":\"0x3ab4d4e74d82ce48afede2438499842fe76f48d8f47f1c222be23875f658b18f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://fa0d5503b22a7ddb4f32e8d1eaa27e13bf63628de2741cfc180d3b6dcff4d53f\",\"dweb:/ipfs/QmVcxmHt8CbtQqoHtUXBRzubHrZfA56qrukXVxREJV5BP7\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"21_27_ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"devdoc":{"details":"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized if they are short enough by the addition of a storage variable used as fallback. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized if they are short enough by the addition of a storage variable used as fallback. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"21_27_ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"21_27_ShortStrings.sol\":{\"keccak256\":\"0x873fb083aa7ea09923fc0b8ef7a28c3fb04b78a0ce7a4a723ab90ce0b5c1f869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4f6715514db80973b70e47724e4217e893691c3c14e147544002f265ab7ace2\",\"dweb:/ipfs/Qmb6rbdh3DqgJkYwkToUMQgJD2UhS3MF3T2r38HyrDd8Ni\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"22_27_CollectionRoyalties.sol":{"CollectionRoyalties":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getFeeBps","outputs":[{"internalType":"uint256[]","name":"royaltiesInBasisPoints","type":"uint256[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getFeeRecipients","outputs":[{"internalType":"address payable[]","name":"recipients","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getRoyalties","outputs":[{"internalType":"address payable[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"royaltiesInBasisPoints","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenCreatorPaymentAddress","outputs":[{"internalType":"address payable","name":"creatorPaymentAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"interfaceSupported","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenCreator","outputs":[{"internalType":"address payable","name":"creator","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"batu-inal & HardlyDifficult","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"getFeeBps(uint256)":{"details":"The tokenId param is ignored since all NFTs return the same value.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"royaltiesInBasisPoints":"The array of fees to be sent to each recipient, in basis points."}},"getFeeRecipients(uint256)":{"details":"The expected royalty amounts are communicated with `getFeeBps`.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"recipients":"An array of addresses to which royalties should be sent."}},"getRoyalties(uint256)":{"details":"The data is the same as when calling `getFeeRecipients` and `getFeeBps` separately.","params":{"tokenId":"The ID of the NFT to get royalties for."},"returns":{"recipients":"An array of addresses to which royalties should be sent.","royaltiesInBasisPoints":"The array of fees to be sent to each recipient, in basis points."}},"getTokenCreatorPaymentAddress(uint256)":{"params":{"tokenId":"The ID of the NFT to get the creator payment address for."},"returns":{"creatorPaymentAddress":"The address to which royalties should be paid."}},"royaltyInfo(uint256,uint256)":{"params":{"salePrice":"The total price of the sale.","tokenId":"The ID of the NFT to get royalties for."},"returns":{"receiver":"The address to which royalties should be sent.","royaltyAmount":"The total amount that should be sent to the `receiver`."}},"supportsInterface(bytes4)":{"details":"Checks the supported royalty interfaces."},"tokenCreator(uint256)":{"params":{"tokenId":"The ID of the NFT to get the creator payment address for."},"returns":{"creator":"The creator of this collection."}}},"title":"Defines various royalty APIs for broad marketplace support.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"royaltiesInBasisPoints\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyalties\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"royaltiesInBasisPoints\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenCreatorPaymentAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creatorPaymentAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"interfaceSupported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"batu-inal & HardlyDifficult\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"getFeeBps(uint256)\":{\"details\":\"The tokenId param is ignored since all NFTs return the same value.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"royaltiesInBasisPoints\":\"The array of fees to be sent to each recipient, in basis points.\"}},\"getFeeRecipients(uint256)\":{\"details\":\"The expected royalty amounts are communicated with `getFeeBps`.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"recipients\":\"An array of addresses to which royalties should be sent.\"}},\"getRoyalties(uint256)\":{\"details\":\"The data is the same as when calling `getFeeRecipients` and `getFeeBps` separately.\",\"params\":{\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"recipients\":\"An array of addresses to which royalties should be sent.\",\"royaltiesInBasisPoints\":\"The array of fees to be sent to each recipient, in basis points.\"}},\"getTokenCreatorPaymentAddress(uint256)\":{\"params\":{\"tokenId\":\"The ID of the NFT to get the creator payment address for.\"},\"returns\":{\"creatorPaymentAddress\":\"The address to which royalties should be paid.\"}},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"salePrice\":\"The total price of the sale.\",\"tokenId\":\"The ID of the NFT to get royalties for.\"},\"returns\":{\"receiver\":\"The address to which royalties should be sent.\",\"royaltyAmount\":\"The total amount that should be sent to the `receiver`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Checks the supported royalty interfaces.\"},\"tokenCreator(uint256)\":{\"params\":{\"tokenId\":\"The ID of the NFT to get the creator payment address for.\"},\"returns\":{\"creator\":\"The creator of this collection.\"}}},\"title\":\"Defines various royalty APIs for broad marketplace support.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFeeBps(uint256)\":{\"notice\":\"Get the creator royalty amounts to be sent to each recipient, in basis points.\"},\"getFeeRecipients(uint256)\":{\"notice\":\"Get the recipient addresses to which creator royalties should be sent.\"},\"getRoyalties(uint256)\":{\"notice\":\"Get the creator royalties to be sent.\"},\"getTokenCreatorPaymentAddress(uint256)\":{\"notice\":\"The address to pay the creator proceeds/royalties for the collection.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"Get the creator royalties to be sent.\"},\"tokenCreator(uint256)\":{\"notice\":\"Returns the creator of this NFT collection.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"22_27_CollectionRoyalties.sol\":\"CollectionRoyalties\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"16_27_IGetFees.sol\":{\"keccak256\":\"0xe252ed1d0f53f0fddf4f9f3bb45f1e73dde07960392025575ba4febaa985144a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c60c502dac828b84b879bbb8ae7a18efc2126d34ae90e70530bf60c4c0efac28\",\"dweb:/ipfs/Qmd2K7CmPG3kQ746uhx1zhCkEfvkwmeX2G1Lq99JL2u11i\"]},\"17_27_IGetRoyalties.sol\":{\"keccak256\":\"0x32025445913a31adc1f77c0cc85756bf49d6b2a86075bad598c0b4772cd7615b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://23fc8a9f2c52268e3f4fd5be0b754eb8c9a9a3fe51803ccf2a967cb7f97b02ed\",\"dweb:/ipfs/QmQo8rjQJXRAZP4ApcaEGeLfQsDcCnhbpoGb7bsopbJLEG\"]},\"18_27_IRoyaltyInfo.sol\":{\"keccak256\":\"0xa86ae0b52989e1b6621fcc21139849aa60ea312ac9eb0ca8d80694b96a7e8b79\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://73431250774f45d110a2b5437790f76d8b519e375502e2e5ed6e7dd22d2f1fba\",\"dweb:/ipfs/QmNRTtr92aocSpbSgshZuMp5j9XF3j3ttHxz8mG55GJr1N\"]},\"19_27_ITokenCreator.sol\":{\"keccak256\":\"0xc145719b53bab6315b999f0e282771d85b6d4442ecd185e7cd89c723705fe2c6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e62d5fe456029730d80c87ac5984e75d8cceb8715269ec48662b8adad3564b2a\",\"dweb:/ipfs/QmW1d7Z1Chfk6NUZJwocapz4Svx5GVnA4ZHceBWjUkv8Gp\"]},\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"22_27_CollectionRoyalties.sol\":{\"keccak256\":\"0xb849c9cce580bf665081851cf5ca085e202924806011b1af8f55becd5ec8221d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0118baf245ca3169b256ce9003aeace3bda5df2c22ac45fb1b957fd08c4c9a96\",\"dweb:/ipfs/QmT43nsWyiCM5uoiPTSuTr9FnWTmsu2b7yYt1yjX6pd1D4\"]},\"26_27_Constants.sol\":{\"keccak256\":\"0xe43b680871c2078c144708af210a22ef0501782496c154f90ecdc13f45921111\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4dca6d563810427aa3c781130100affbec8a8f357d83de7037c83d86295593b6\",\"dweb:/ipfs/Qmcm32pQhmctDDA1zhPPHWK6D5zaN54BuAEMLXKNJaYvpD\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"9_27_ERC165Upgradeable.sol\":{\"keccak256\":\"0xefde73c09f26143fc362395387a45d426dbcd5dc29969fdab3be45558281b94b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb1e73de14391ecb2973ce066e53d719775e44be8d6b812f3a301114f3289af\",\"dweb:/ipfs/QmZRBxvGHLtLFe31PkA4nvhqXbnaBZZ5WuYVDgrRbFYw4Y\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"getFeeBps(uint256)":{"notice":"Get the creator royalty amounts to be sent to each recipient, in basis points."},"getFeeRecipients(uint256)":{"notice":"Get the recipient addresses to which creator royalties should be sent."},"getRoyalties(uint256)":{"notice":"Get the creator royalties to be sent."},"getTokenCreatorPaymentAddress(uint256)":{"notice":"The address to pay the creator proceeds/royalties for the collection."},"royaltyInfo(uint256,uint256)":{"notice":"Get the creator royalties to be sent."},"tokenCreator(uint256)":{"notice":"Returns the creator of this NFT collection."}},"version":1}}},"23_27_NFTCollectionType.sol":{"NFTCollectionType":{"abi":[{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"getNFTCollectionType","outputs":[{"internalType":"string","name":"collectionType","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"interfaceSupported","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"HardlyDifficult & reggieag","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"getNFTCollectionType()":{"returns":{"collectionType":"The collection type."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"title":"A mixin to add the NFTCollectionType interface to a contract.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNFTCollectionType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"collectionType\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"interfaceSupported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"HardlyDifficult & reggieag\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"getNFTCollectionType()\":{\"returns\":{\"collectionType\":\"The collection type.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"A mixin to add the NFTCollectionType interface to a contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNFTCollectionType()\":{\"notice\":\"Returns a name of the type of collection this contract represents.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"23_27_NFTCollectionType.sol\":\"NFTCollectionType\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"15_27_INFTCollectionType.sol\":{\"keccak256\":\"0xac3578b33964376f5be07149bb7063eaac646968ee37900c2c184fe86a1fd169\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a515cecd245e6605ae6bfdea40c621510fee60f44b2bb2b4d09562c1cb61dcff\",\"dweb:/ipfs/Qmc3HjzSAqrcrWB9H7wnKDzhTLtgV6FvciFY6EbykahyTj\"]},\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"21_27_ShortStrings.sol\":{\"keccak256\":\"0x873fb083aa7ea09923fc0b8ef7a28c3fb04b78a0ce7a4a723ab90ce0b5c1f869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4f6715514db80973b70e47724e4217e893691c3c14e147544002f265ab7ace2\",\"dweb:/ipfs/Qmb6rbdh3DqgJkYwkToUMQgJD2UhS3MF3T2r38HyrDd8Ni\"]},\"23_27_NFTCollectionType.sol\":{\"keccak256\":\"0x5e256159517e9ef8e922249305d60a548d75e3ce74ff83898042f6320fdcb922\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://80e258788ffee77138df09e8b84290ec847b23cdc73b135e38c0838f7f4e9344\",\"dweb:/ipfs/QmRpAy2RV7NnfabjRmvSLKamvecLmkMEQC8vMWPqARrxgd\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"9_27_ERC165Upgradeable.sol\":{\"keccak256\":\"0xefde73c09f26143fc362395387a45d426dbcd5dc29969fdab3be45558281b94b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb1e73de14391ecb2973ce066e53d719775e44be8d6b812f3a301114f3289af\",\"dweb:/ipfs/QmZRBxvGHLtLFe31PkA4nvhqXbnaBZZ5WuYVDgrRbFYw4Y\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"getNFTCollectionType()":{"notice":"Returns a name of the type of collection this contract represents."}},"version":1}}},"24_27_SequentialMintCollection.sol":{"SequentialMintCollection":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"SelfDestruct","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTokenId","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenCreator","outputs":[{"internalType":"address payable","name":"creator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"batu-inal & HardlyDifficult","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"SelfDestruct(address)":{"params":{"admin":"The account which requested this contract be self destructed."}},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"burn(uint256)":{"details":"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenCreator(uint256)":{"details":"The tokenId param is ignored since all NFTs return the same value.","params":{"tokenId":"The ID of the NFT to get the creator payment address for."},"returns":{"creator":"The creator of this collection."}},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"From the ERC-721 enumerable standard.","returns":{"supply":"The total number of NFTs tracked by this contract."}},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"stateVariables":{"burnCounter":{"details":"This number is used to calculate the total supply efficiently."},"latestTokenId":{"details":"Minting starts at tokenId 1. Each mint will use this value + 1.","return":"The most recently minted tokenId, or 0 if no NFTs have been minted yet.","returns":{"_0":"The most recently minted tokenId, or 0 if no NFTs have been minted yet."}},"owner":{"details":"This is the default royalty recipient if a different `paymentAddress` was not provided.","return":"The collection's creator/owner address.","returns":{"_0":"The collection's creator/owner address."}}},"title":"Extends the OZ ERC721 implementation for collections which mint sequential token IDs.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SelfDestruct\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTokenId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"batu-inal & HardlyDifficult\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"SelfDestruct(address)\":{\"params\":{\"admin\":\"The account which requested this contract be self destructed.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenCreator(uint256)\":{\"details\":\"The tokenId param is ignored since all NFTs return the same value.\",\"params\":{\"tokenId\":\"The ID of the NFT to get the creator payment address for.\"},\"returns\":{\"creator\":\"The creator of this collection.\"}},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"From the ERC-721 enumerable standard.\",\"returns\":{\"supply\":\"The total number of NFTs tracked by this contract.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"burnCounter\":{\"details\":\"This number is used to calculate the total supply efficiently.\"},\"latestTokenId\":{\"details\":\"Minting starts at tokenId 1. Each mint will use this value + 1.\",\"return\":\"The most recently minted tokenId, or 0 if no NFTs have been minted yet.\",\"returns\":{\"_0\":\"The most recently minted tokenId, or 0 if no NFTs have been minted yet.\"}},\"owner\":{\"details\":\"This is the default royalty recipient if a different `paymentAddress` was not provided.\",\"return\":\"The collection's creator/owner address.\",\"returns\":{\"_0\":\"The collection's creator/owner address.\"}}},\"title\":\"Extends the OZ ERC721 implementation for collections which mint sequential token IDs.\",\"version\":1},\"userdoc\":{\"events\":{\"SelfDestruct(address)\":{\"notice\":\"Emitted when this collection is self destructed by the creator/owner/admin.\"}},\"kind\":\"user\",\"methods\":{\"latestTokenId()\":{\"notice\":\"The tokenId of the most recently created NFT.\"},\"owner()\":{\"notice\":\"The creator/owner of this NFT collection.\"},\"tokenCreator(uint256)\":{\"notice\":\"Returns the creator of this NFT collection.\"},\"totalSupply()\":{\"notice\":\"Returns the total amount of tokens stored by the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"24_27_SequentialMintCollection.sol\":\"SequentialMintCollection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"11_27_MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"12_27_StringsUpgradeable.sol\":{\"keccak256\":\"0x08980aed64586339c448de0a751c124569292bd4a99054596962b0ef7f175957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1463c5a7e838906cc9287536210ee9c3373b1f0f1fc129e8aef51ddd2a129f9d\",\"dweb:/ipfs/QmeA7MQPi4ukTrgJhdudNhQpCx2y8HcBXHBmYaT18qFKTP\"]},\"19_27_ITokenCreator.sol\":{\"keccak256\":\"0xc145719b53bab6315b999f0e282771d85b6d4442ecd185e7cd89c723705fe2c6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e62d5fe456029730d80c87ac5984e75d8cceb8715269ec48662b8adad3564b2a\",\"dweb:/ipfs/QmW1d7Z1Chfk6NUZJwocapz4Svx5GVnA4ZHceBWjUkv8Gp\"]},\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"24_27_SequentialMintCollection.sol\":{\"keccak256\":\"0x9578a24e759498e38eabc54450ac9e9fbbfa66f5cfba01775180ace05d6f64d3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4e7bcd87393f2a6c02e86589b9b17c5a10e07ba86a4f4f8c856d721b1d702858\",\"dweb:/ipfs/QmPogjDMg7QkuQTcL4Tr9ZupCQXnfQALEBSL9MG6HZcMGx\"]},\"2_27_ERC721Upgradeable.sol\":{\"keccak256\":\"0x8b618584f7ff650eb88f3d5540a40d1f43c6cc240a5c30aa1b5178bdea68f363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31a4c56eefdb0f4b93301c533c101cec47cf3db5dc17dcbc4904bd68aa7e01fe\",\"dweb:/ipfs/QmSxeFUGB3apn3sgCnJTYwZrCDaCgpav2n1gttDeUBzaLj\"]},\"3_27_ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x24ad6ae4ad8bdf3acc97528be5d04592b62c3ce18b2690a575e3498869c75b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597f44a7aca487b49de4a3bcef6c1a0730eb8ab900c5c55fbae609577e1f935a\",\"dweb:/ipfs/Qma1PPAq4hP4KHXGvsEVZ6sq5rtHZjRysN9ZToEKG4QZaj\"]},\"4_27_IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0xd04890fa27259b0f6dfdff82478080756424f7cbc9c713e5712dd50a24d18505\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e0a61ea5a6421dce7ef5b89d0718c8baf6d3eb1e0ac8bdc23a04e909e2c0837\",\"dweb:/ipfs/QmQzcqXhwpz8dEUcECPSqFHGvd5fX774xFf69QjbZ6aEnK\"]},\"5_27_IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"6_27_IERC721Upgradeable.sol\":{\"keccak256\":\"0x88a5c51d6b7f90ba273c22b417eded556338ae50f2fb9e9b1b015ff6164333b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3873f792ee33bc77a8d09a7b954e9e269d3020663a16cfceb1507c92b7cbcafc\",\"dweb:/ipfs/QmNwwCeQqgQWnGmhSG7RvsPLCx4ts4U78V2aJGz3aRWca3\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"8_27_ContextUpgradeable.sol\":{\"keccak256\":\"0xfe0fc3a6f1628111596ea9ec32087023faa90cf0614333e19e2322ee6e7fa7cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b27017b67c32842b44bf5b19e3f0c8db1f09f5b8c11f0a004205b4e0f02576cd\",\"dweb:/ipfs/QmZHFak6f8ERMy8DawXcU7UiDognGGoCQfVqdkbfrWKwJn\"]},\"9_27_ERC165Upgradeable.sol\":{\"keccak256\":\"0xefde73c09f26143fc362395387a45d426dbcd5dc29969fdab3be45558281b94b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb1e73de14391ecb2973ce066e53d719775e44be8d6b812f3a301114f3289af\",\"dweb:/ipfs/QmZRBxvGHLtLFe31PkA4nvhqXbnaBZZ5WuYVDgrRbFYw4Y\"]}},\"version\":1}","userdoc":{"events":{"SelfDestruct(address)":{"notice":"Emitted when this collection is self destructed by the creator/owner/admin."}},"kind":"user","methods":{"latestTokenId()":{"notice":"The tokenId of the most recently created NFT."},"owner()":{"notice":"The creator/owner of this NFT collection."},"tokenCreator(uint256)":{"notice":"Returns the creator of this NFT collection."},"totalSupply()":{"notice":"Returns the total amount of tokens stored by the contract."}},"version":1}}},"25_27_TokenLimitedCollection.sol":{"TokenLimitedCollection":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"maxTokenId","type":"uint256"}],"name":"MaxTokenIdUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"SelfDestruct","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTokenId","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTokenId","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenCreator","outputs":[{"internalType":"address payable","name":"creator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"HardlyDifficult","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"MaxTokenIdUpdated(uint256)":{"params":{"maxTokenId":"The new max tokenId. All NFTs in this collection will have a tokenId less than or equal to this value."}},"SelfDestruct(address)":{"params":{"admin":"The account which requested this contract be self destructed."}},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"burn(uint256)":{"details":"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenCreator(uint256)":{"details":"The tokenId param is ignored since all NFTs return the same value.","params":{"tokenId":"The ID of the NFT to get the creator payment address for."},"returns":{"creator":"The creator of this collection."}},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"From the ERC-721 enumerable standard.","returns":{"supply":"The total number of NFTs tracked by this contract."}},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"stateVariables":{"maxTokenId":{"details":"This max may be less than the final `totalSupply` if 1 or more tokens were burned.","return":"The max tokenId which can be minted.","returns":{"_0":"The max tokenId which can be minted."}}},"title":"Defines an upper limit on the number of tokens which may be minted by this collection.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maxTokenId\",\"type\":\"uint256\"}],\"name\":\"MaxTokenIdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SelfDestruct\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTokenId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"HardlyDifficult\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MaxTokenIdUpdated(uint256)\":{\"params\":{\"maxTokenId\":\"The new max tokenId. All NFTs in this collection will have a tokenId less than or equal to this value.\"}},\"SelfDestruct(address)\":{\"params\":{\"admin\":\"The account which requested this contract be self destructed.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenCreator(uint256)\":{\"details\":\"The tokenId param is ignored since all NFTs return the same value.\",\"params\":{\"tokenId\":\"The ID of the NFT to get the creator payment address for.\"},\"returns\":{\"creator\":\"The creator of this collection.\"}},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"From the ERC-721 enumerable standard.\",\"returns\":{\"supply\":\"The total number of NFTs tracked by this contract.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"maxTokenId\":{\"details\":\"This max may be less than the final `totalSupply` if 1 or more tokens were burned.\",\"return\":\"The max tokenId which can be minted.\",\"returns\":{\"_0\":\"The max tokenId which can be minted.\"}}},\"title\":\"Defines an upper limit on the number of tokens which may be minted by this collection.\",\"version\":1},\"userdoc\":{\"events\":{\"MaxTokenIdUpdated(uint256)\":{\"notice\":\"Emitted when the max tokenId supported by this collection is updated.\"},\"SelfDestruct(address)\":{\"notice\":\"Emitted when this collection is self destructed by the creator/owner/admin.\"}},\"kind\":\"user\",\"methods\":{\"latestTokenId()\":{\"notice\":\"The tokenId of the most recently created NFT.\"},\"maxTokenId()\":{\"notice\":\"The max tokenId which can be minted.\"},\"owner()\":{\"notice\":\"The creator/owner of this NFT collection.\"},\"tokenCreator(uint256)\":{\"notice\":\"Returns the creator of this NFT collection.\"},\"totalSupply()\":{\"notice\":\"Returns the total amount of tokens stored by the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"25_27_TokenLimitedCollection.sol\":\"TokenLimitedCollection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"11_27_MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"12_27_StringsUpgradeable.sol\":{\"keccak256\":\"0x08980aed64586339c448de0a751c124569292bd4a99054596962b0ef7f175957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1463c5a7e838906cc9287536210ee9c3373b1f0f1fc129e8aef51ddd2a129f9d\",\"dweb:/ipfs/QmeA7MQPi4ukTrgJhdudNhQpCx2y8HcBXHBmYaT18qFKTP\"]},\"19_27_ITokenCreator.sol\":{\"keccak256\":\"0xc145719b53bab6315b999f0e282771d85b6d4442ecd185e7cd89c723705fe2c6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e62d5fe456029730d80c87ac5984e75d8cceb8715269ec48662b8adad3564b2a\",\"dweb:/ipfs/QmW1d7Z1Chfk6NUZJwocapz4Svx5GVnA4ZHceBWjUkv8Gp\"]},\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"24_27_SequentialMintCollection.sol\":{\"keccak256\":\"0x9578a24e759498e38eabc54450ac9e9fbbfa66f5cfba01775180ace05d6f64d3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4e7bcd87393f2a6c02e86589b9b17c5a10e07ba86a4f4f8c856d721b1d702858\",\"dweb:/ipfs/QmPogjDMg7QkuQTcL4Tr9ZupCQXnfQALEBSL9MG6HZcMGx\"]},\"25_27_TokenLimitedCollection.sol\":{\"keccak256\":\"0xa0a47235d751590f52745b6b3ed8b32b3c22878057f0370e44a56d7f0ccd74ea\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ca53f83bc5a0ef18731560c1e773561893c4e74ce0565a5c477dac7371895efe\",\"dweb:/ipfs/QmUN5Dd8UqVoBixP4dCcpbbLRaz61wyqmNdPMqfouyVmRv\"]},\"2_27_ERC721Upgradeable.sol\":{\"keccak256\":\"0x8b618584f7ff650eb88f3d5540a40d1f43c6cc240a5c30aa1b5178bdea68f363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31a4c56eefdb0f4b93301c533c101cec47cf3db5dc17dcbc4904bd68aa7e01fe\",\"dweb:/ipfs/QmSxeFUGB3apn3sgCnJTYwZrCDaCgpav2n1gttDeUBzaLj\"]},\"3_27_ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x24ad6ae4ad8bdf3acc97528be5d04592b62c3ce18b2690a575e3498869c75b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597f44a7aca487b49de4a3bcef6c1a0730eb8ab900c5c55fbae609577e1f935a\",\"dweb:/ipfs/Qma1PPAq4hP4KHXGvsEVZ6sq5rtHZjRysN9ZToEKG4QZaj\"]},\"4_27_IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0xd04890fa27259b0f6dfdff82478080756424f7cbc9c713e5712dd50a24d18505\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e0a61ea5a6421dce7ef5b89d0718c8baf6d3eb1e0ac8bdc23a04e909e2c0837\",\"dweb:/ipfs/QmQzcqXhwpz8dEUcECPSqFHGvd5fX774xFf69QjbZ6aEnK\"]},\"5_27_IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"6_27_IERC721Upgradeable.sol\":{\"keccak256\":\"0x88a5c51d6b7f90ba273c22b417eded556338ae50f2fb9e9b1b015ff6164333b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3873f792ee33bc77a8d09a7b954e9e269d3020663a16cfceb1507c92b7cbcafc\",\"dweb:/ipfs/QmNwwCeQqgQWnGmhSG7RvsPLCx4ts4U78V2aJGz3aRWca3\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"8_27_ContextUpgradeable.sol\":{\"keccak256\":\"0xfe0fc3a6f1628111596ea9ec32087023faa90cf0614333e19e2322ee6e7fa7cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b27017b67c32842b44bf5b19e3f0c8db1f09f5b8c11f0a004205b4e0f02576cd\",\"dweb:/ipfs/QmZHFak6f8ERMy8DawXcU7UiDognGGoCQfVqdkbfrWKwJn\"]},\"9_27_ERC165Upgradeable.sol\":{\"keccak256\":\"0xefde73c09f26143fc362395387a45d426dbcd5dc29969fdab3be45558281b94b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb1e73de14391ecb2973ce066e53d719775e44be8d6b812f3a301114f3289af\",\"dweb:/ipfs/QmZRBxvGHLtLFe31PkA4nvhqXbnaBZZ5WuYVDgrRbFYw4Y\"]}},\"version\":1}","userdoc":{"events":{"MaxTokenIdUpdated(uint256)":{"notice":"Emitted when the max tokenId supported by this collection is updated."},"SelfDestruct(address)":{"notice":"Emitted when this collection is self destructed by the creator/owner/admin."}},"kind":"user","methods":{"latestTokenId()":{"notice":"The tokenId of the most recently created NFT."},"maxTokenId()":{"notice":"The max tokenId which can be minted."},"owner()":{"notice":"The creator/owner of this NFT collection."},"tokenCreator(uint256)":{"notice":"Returns the creator of this NFT collection."},"totalSupply()":{"notice":"Returns the total amount of tokens stored by the contract."}},"version":1}}},"27_27_ContractFactory.sol":{"ContractFactory":{"abi":[{"inputs":[],"name":"ContractFactory_Factory_Is_Not_A_Contract","type":"error"},{"inputs":[],"name":"contractFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"batu-inal & HardlyDifficult","kind":"dev","methods":{"constructor":{"params":{"_contractFactory":"The factory which will be used to create these contracts."}}},"stateVariables":{"contractFactory":{"return":"The factory contract address.","returns":{"_0":"The factory contract address."}}},"title":"Stores a reference to the factory which is used to create contract proxies.","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ContractFactory_Factory_Is_Not_A_Contract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"contractFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"batu-inal & HardlyDifficult\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_contractFactory\":\"The factory which will be used to create these contracts.\"}}},\"stateVariables\":{\"contractFactory\":{\"return\":\"The factory contract address.\",\"returns\":{\"_0\":\"The factory contract address.\"}}},\"title\":\"Stores a reference to the factory which is used to create contract proxies.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initialize the template's immutable variables.\"},\"contractFactory()\":{\"notice\":\"The address of the factory which was used to create this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"27_27_ContractFactory.sol\":\"ContractFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"27_27_ContractFactory.sol\":{\"keccak256\":\"0xb1b8a259e093f6de0a3bbd32bf270579ad550cf2dd0b880b195e076474540622\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d66203e404f171fa7f2de0efb18deb964514236f03b5804c4f99b6454dd9fd8d\",\"dweb:/ipfs/QmbywXNRFpa4oBzvXzz9TCuVogcv9ikfmcKumsyV8Pqwkp\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"constructor":{"notice":"Initialize the template's immutable variables."},"contractFactory()":{"notice":"The address of the factory which was used to create this contract."}},"version":1}}},"2_27_ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"2_27_ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"11_27_MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"12_27_StringsUpgradeable.sol\":{\"keccak256\":\"0x08980aed64586339c448de0a751c124569292bd4a99054596962b0ef7f175957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1463c5a7e838906cc9287536210ee9c3373b1f0f1fc129e8aef51ddd2a129f9d\",\"dweb:/ipfs/QmeA7MQPi4ukTrgJhdudNhQpCx2y8HcBXHBmYaT18qFKTP\"]},\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"2_27_ERC721Upgradeable.sol\":{\"keccak256\":\"0x8b618584f7ff650eb88f3d5540a40d1f43c6cc240a5c30aa1b5178bdea68f363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31a4c56eefdb0f4b93301c533c101cec47cf3db5dc17dcbc4904bd68aa7e01fe\",\"dweb:/ipfs/QmSxeFUGB3apn3sgCnJTYwZrCDaCgpav2n1gttDeUBzaLj\"]},\"4_27_IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0xd04890fa27259b0f6dfdff82478080756424f7cbc9c713e5712dd50a24d18505\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e0a61ea5a6421dce7ef5b89d0718c8baf6d3eb1e0ac8bdc23a04e909e2c0837\",\"dweb:/ipfs/QmQzcqXhwpz8dEUcECPSqFHGvd5fX774xFf69QjbZ6aEnK\"]},\"5_27_IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"6_27_IERC721Upgradeable.sol\":{\"keccak256\":\"0x88a5c51d6b7f90ba273c22b417eded556338ae50f2fb9e9b1b015ff6164333b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3873f792ee33bc77a8d09a7b954e9e269d3020663a16cfceb1507c92b7cbcafc\",\"dweb:/ipfs/QmNwwCeQqgQWnGmhSG7RvsPLCx4ts4U78V2aJGz3aRWca3\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"8_27_ContextUpgradeable.sol\":{\"keccak256\":\"0xfe0fc3a6f1628111596ea9ec32087023faa90cf0614333e19e2322ee6e7fa7cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b27017b67c32842b44bf5b19e3f0c8db1f09f5b8c11f0a004205b4e0f02576cd\",\"dweb:/ipfs/QmZHFak6f8ERMy8DawXcU7UiDognGGoCQfVqdkbfrWKwJn\"]},\"9_27_ERC165Upgradeable.sol\":{\"keccak256\":\"0xefde73c09f26143fc362395387a45d426dbcd5dc29969fdab3be45558281b94b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb1e73de14391ecb2973ce066e53d719775e44be8d6b812f3a301114f3289af\",\"dweb:/ipfs/QmZRBxvGHLtLFe31PkA4nvhqXbnaBZZ5WuYVDgrRbFYw4Y\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"3_27_ERC721BurnableUpgradeable.sol":{"ERC721BurnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 Token that can be burned (destroyed).","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"burn(uint256)":{"details":"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"title":"ERC721 Burnable Token","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"3_27_ERC721BurnableUpgradeable.sol\":\"ERC721BurnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"11_27_MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"12_27_StringsUpgradeable.sol\":{\"keccak256\":\"0x08980aed64586339c448de0a751c124569292bd4a99054596962b0ef7f175957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1463c5a7e838906cc9287536210ee9c3373b1f0f1fc129e8aef51ddd2a129f9d\",\"dweb:/ipfs/QmeA7MQPi4ukTrgJhdudNhQpCx2y8HcBXHBmYaT18qFKTP\"]},\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"2_27_ERC721Upgradeable.sol\":{\"keccak256\":\"0x8b618584f7ff650eb88f3d5540a40d1f43c6cc240a5c30aa1b5178bdea68f363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31a4c56eefdb0f4b93301c533c101cec47cf3db5dc17dcbc4904bd68aa7e01fe\",\"dweb:/ipfs/QmSxeFUGB3apn3sgCnJTYwZrCDaCgpav2n1gttDeUBzaLj\"]},\"3_27_ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x24ad6ae4ad8bdf3acc97528be5d04592b62c3ce18b2690a575e3498869c75b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597f44a7aca487b49de4a3bcef6c1a0730eb8ab900c5c55fbae609577e1f935a\",\"dweb:/ipfs/Qma1PPAq4hP4KHXGvsEVZ6sq5rtHZjRysN9ZToEKG4QZaj\"]},\"4_27_IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0xd04890fa27259b0f6dfdff82478080756424f7cbc9c713e5712dd50a24d18505\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e0a61ea5a6421dce7ef5b89d0718c8baf6d3eb1e0ac8bdc23a04e909e2c0837\",\"dweb:/ipfs/QmQzcqXhwpz8dEUcECPSqFHGvd5fX774xFf69QjbZ6aEnK\"]},\"5_27_IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"6_27_IERC721Upgradeable.sol\":{\"keccak256\":\"0x88a5c51d6b7f90ba273c22b417eded556338ae50f2fb9e9b1b015ff6164333b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3873f792ee33bc77a8d09a7b954e9e269d3020663a16cfceb1507c92b7cbcafc\",\"dweb:/ipfs/QmNwwCeQqgQWnGmhSG7RvsPLCx4ts4U78V2aJGz3aRWca3\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"8_27_ContextUpgradeable.sol\":{\"keccak256\":\"0xfe0fc3a6f1628111596ea9ec32087023faa90cf0614333e19e2322ee6e7fa7cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b27017b67c32842b44bf5b19e3f0c8db1f09f5b8c11f0a004205b4e0f02576cd\",\"dweb:/ipfs/QmZHFak6f8ERMy8DawXcU7UiDognGGoCQfVqdkbfrWKwJn\"]},\"9_27_ERC165Upgradeable.sol\":{\"keccak256\":\"0xefde73c09f26143fc362395387a45d426dbcd5dc29969fdab3be45558281b94b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb1e73de14391ecb2973ce066e53d719775e44be8d6b812f3a301114f3289af\",\"dweb:/ipfs/QmZRBxvGHLtLFe31PkA4nvhqXbnaBZZ5WuYVDgrRbFYw4Y\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"4_27_IERC721MetadataUpgradeable.sol":{"IERC721MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"4_27_IERC721MetadataUpgradeable.sol\":\"IERC721MetadataUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"4_27_IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0xd04890fa27259b0f6dfdff82478080756424f7cbc9c713e5712dd50a24d18505\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e0a61ea5a6421dce7ef5b89d0718c8baf6d3eb1e0ac8bdc23a04e909e2c0837\",\"dweb:/ipfs/QmQzcqXhwpz8dEUcECPSqFHGvd5fX774xFf69QjbZ6aEnK\"]},\"6_27_IERC721Upgradeable.sol\":{\"keccak256\":\"0x88a5c51d6b7f90ba273c22b417eded556338ae50f2fb9e9b1b015ff6164333b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3873f792ee33bc77a8d09a7b954e9e269d3020663a16cfceb1507c92b7cbcafc\",\"dweb:/ipfs/QmNwwCeQqgQWnGmhSG7RvsPLCx4ts4U78V2aJGz3aRWca3\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"5_27_IERC721ReceiverUpgradeable.sol":{"IERC721ReceiverUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"5_27_IERC721ReceiverUpgradeable.sol\":\"IERC721ReceiverUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"5_27_IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"6_27_IERC721Upgradeable.sol":{"IERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"6_27_IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"6_27_IERC721Upgradeable.sol\":{\"keccak256\":\"0x88a5c51d6b7f90ba273c22b417eded556338ae50f2fb9e9b1b015ff6164333b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3873f792ee33bc77a8d09a7b954e9e269d3020663a16cfceb1507c92b7cbcafc\",\"dweb:/ipfs/QmNwwCeQqgQWnGmhSG7RvsPLCx4ts4U78V2aJGz3aRWca3\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"7_27_AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"7_27_AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"8_27_ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"8_27_ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"8_27_ContextUpgradeable.sol\":{\"keccak256\":\"0xfe0fc3a6f1628111596ea9ec32087023faa90cf0614333e19e2322ee6e7fa7cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b27017b67c32842b44bf5b19e3f0c8db1f09f5b8c11f0a004205b4e0f02576cd\",\"dweb:/ipfs/QmZHFak6f8ERMy8DawXcU7UiDognGGoCQfVqdkbfrWKwJn\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"9_27_ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"9_27_ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"10_27_IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"1_27_Initializable.sol\":{\"keccak256\":\"0x549afd02e72244f9453799980fb3849c80d4fcfe30edb43b429b732493d6e25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e681ed588b67365d38d11d64e1651b134774134e7d568e7bac9a3e8978f293ab\",\"dweb:/ipfs/Qmd72BPTqFL7pZvYGVY1zdTdUfHsz8xqu5NLPAPkL9fnga\"]},\"7_27_AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"9_27_ERC165Upgradeable.sol\":{\"keccak256\":\"0xefde73c09f26143fc362395387a45d426dbcd5dc29969fdab3be45558281b94b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb1e73de14391ecb2973ce066e53d719775e44be8d6b812f3a301114f3289af\",\"dweb:/ipfs/QmZRBxvGHLtLFe31PkA4nvhqXbnaBZZ5WuYVDgrRbFYw4Y\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}}},"errors":[{"component":"general","formattedMessage":"YulException: Variable var_tokenId_1553 is 1 slot(s) too deep inside the stack. Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.\n\n","message":"Yul exception:Variable var_tokenId_1553 is 1 slot(s) too deep inside the stack. Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.","severity":"error","type":"YulException"}],"sources":{"10_27_IERC165Upgradeable.sol":{"id":0},"11_27_MathUpgradeable.sol":{"id":1},"12_27_StringsUpgradeable.sol":{"id":2},"13_27_NFTCollection.sol":{"id":3},"14_27_INFTCollectionInitializer.sol":{"id":4},"15_27_INFTCollectionType.sol":{"id":5},"16_27_IGetFees.sol":{"id":6},"17_27_IGetRoyalties.sol":{"id":7},"18_27_IRoyaltyInfo.sol":{"id":8},"19_27_ITokenCreator.sol":{"id":9},"1_27_Initializable.sol":{"id":10},"20_27_AddressLibrary.sol":{"id":11},"21_27_ShortStrings.sol":{"id":12},"22_27_CollectionRoyalties.sol":{"id":13},"23_27_NFTCollectionType.sol":{"id":14},"24_27_SequentialMintCollection.sol":{"id":15},"25_27_TokenLimitedCollection.sol":{"id":16},"26_27_Constants.sol":{"id":17},"27_27_ContractFactory.sol":{"id":18},"2_27_ERC721Upgradeable.sol":{"id":19},"3_27_ERC721BurnableUpgradeable.sol":{"id":20},"4_27_IERC721MetadataUpgradeable.sol":{"id":21},"5_27_IERC721ReceiverUpgradeable.sol":{"id":22},"6_27_IERC721Upgradeable.sol":{"id":23},"7_27_AddressUpgradeable.sol":{"id":24},"8_27_ContextUpgradeable.sol":{"id":25},"9_27_ERC165Upgradeable.sol":{"id":26}}}

> stderr:
